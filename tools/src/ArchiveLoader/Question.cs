using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ArchiveLoader
{
    public class Question : Post
    {
        List<Answer> answers = new List<Answer>();

        public Question(string siteval, int idval, object o)
        {
            this.site = siteval;
            this.id = idval;
            this.data = o;
        }

        public void AddAnswer(Answer a)
        {
            this.answers.Add(a);
            a.Parent = this;
        }

        public IEnumerable<Answer> Answers { get { return this.answers; } }

        public static Dictionary<int,Question> LoadAllFromDir(string path,string site)
        {            
            return PostSet.LoadFromDir(path, site).Questions;
        }

        public void GenerateHTML(TextWriter wr)
        {
            dynamic data = this.DataDynamic;
            dynamic owner = JSON.GetPropertyValue(data, "owner");
            string ownerstr;

            if (owner != null) ownerstr = String.Format("<a href=\"{0}\">{1}</a>", owner.link, owner.display_name);
            else ownerstr = "(unknown person)";

            wr.WriteLine("<html><head><meta charset=\"UTF-8\"/><title>{0} | RuSO Archive</title></head><body>", data.title);
            wr.WriteLine("<p><i><a href=\"{0}\">RuSO Archive</a></i></p>", HTML.SiteURL);
            wr.WriteLine("<h2>{0}</h2>", data.title);
            wr.WriteLine("<p><a href=\"{0}\">Source</a> - by {1}</p>", data.link, ownerstr);
            wr.WriteLine("<blockquote>");
            wr.WriteLine(data.body);
            wr.WriteLine("</blockquote>");

            foreach (Answer a in this.Answers)
            {
                a.GenerateHTML(wr);
            }

            wr.WriteLine("<hr/>");            
            wr.WriteLine("<p><i>Auto-generated by ruso-archive tools {0}. ", DateTime.Now);
            wr.WriteLine("Content is licensed under <a href=\"{0}\">CC-BY-4.0</a>.</i></p>", HTML.LicenseURL);
            wr.WriteLine("</body></html>");
        }
    }
}
