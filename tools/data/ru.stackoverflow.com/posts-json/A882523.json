{"owner":{"reputation":16019,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":10,"last_activity_date":1537248524,"creation_date":1537248524,"answer_id":882523,"question_id":882416,"body":"<p>Если считать стандартными классами .NET все типы (в том числе непубличные), расположенные в управляемых сборках в подкаталоге <code>%WINDIR%\\Microsoft.NET\\Framework\\</code> соответствующей версии, для которых Type.IsClass возвращает true, можно посчитать их так:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.IO;\nusing System.Reflection;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static uint CountClasses(string asspath)\n        {\n            uint res = 0;\n            Assembly ass = Assembly.LoadFile(asspath);\n\n            foreach (var type in ass.GetTypes())\n            {\n                if ( type.IsClass)\n                {                    \n                    res++;\n                }\n\n            }\n\n            return res;\n        }\n\n        static uint ProcessDirectory(string path)\n        {\n            uint res = 0;\n\n            var files = Directory.GetFiles(path);\n\n            foreach (var file in files)\n            {\n                if (Path.GetExtension(file).ToUpper() == \".DLL\")\n                {\n\n                    Console.WriteLine(\"{0}\", file);\n                    try\n                    {\n                        res += CountClasses(file);\n                    }\n                    catch (Exception ex)\n                    {\n                        Console.WriteLine(ex.Message);                            \n                    }\n                }                \n            }\n\n            var dirs = Directory.GetDirectories(path);\n            foreach (var dir in dirs)\n            {\n                Console.WriteLine(\"{0}\", dir);\n                res += ProcessDirectory(dir);\n            }\n            return res;\n        }\n\n\n        static void Main(string[] args)\n        {\n            var count = ProcessDirectory(@\"C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\");\n            Console.WriteLine(\"Classes: {0}\", count);\n            Console.ReadKey();            \n        }\n    }\n}\n</code></pre>\n\n<p>Результаты:</p>\n\n<p>.NET 4.7.2 - 43310</p>\n\n<p>.NET 3.5 - 19785 (сумма результатов по каталогам 2.0, 3.0 и 3.5, так как это одна версия)</p>\n"}