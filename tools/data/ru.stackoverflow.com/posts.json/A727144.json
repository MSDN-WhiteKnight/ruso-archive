{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1507219458,"creation_date":1507219458,"answer_id":727144,"question_id":708024,"body":"<p>Формат вывода звука по умолчанию хранится в ключе реестра</p>\n\n<blockquote>\n  <p>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\MMDevices\\Audio\\Render\\{GUID устройства}\\Properties</p>\n</blockquote>\n\n<p>Значение <code>{f19f064d-082c-4e27-bc73-6882a1bb8e4c},0</code> формата REG_BINARY хранит структуру WAVEFORMATEX или WAVEFORMATEXTENSIBLE (в зависимости от крутости устройства).</p>\n\n<p>Для считывания можно использовать <em><a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/dd370794(v=vs.85).aspx\" rel=\"nofollow noreferrer\">Multimedia Device API</a></em>. Интерфейс <code>IPropertyStore</code> от объекта <code>IMMDevice</code> имеет свойство <code>PKEY_AudioEngine_DeviceFormat</code> (blob, содержащий одну из вышеуказанных структур). Пример кода для вывода имени, ID и сведений об аудиоформате активных устройств:\n</p>\n\n<pre><code>#define INITGUID\n#include &lt;stdio.h&gt;\n#include &lt;tchar.h&gt;\n#include &lt;Windows.h&gt;\n#include &lt;Objbase.h&gt;\n#include &lt;Shobjidl.h&gt;\n#include &lt;MMDeviceAPI.h&gt;\n#include &lt;locale.h&gt;\n#include &lt;Functiondiscoverykeys_devpkey.h&gt;\n\n//Используемые библиотеки: winmm.lib;strmiids.lib;quartz.lib;uuid.lib\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    setlocale(LC_ALL,\"Russian\");\n\n    CoInitialize(NULL);\n    TCHAR* pstr=NULL;\n    DWORD state;\n\n    IMMDeviceEnumerator *deviceEnumerator = NULL;\n    IMMDeviceCollection *deviceCollection = NULL;\n    IMMDevice* dev=NULL;\n    IPropertyStore *propertyStore=NULL;\n    WAVEFORMATEX wex;//буфер для данных о формате\n\n    HRESULT hr = CoCreateInstance(__uuidof(MMDeviceEnumerator), NULL, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&amp;deviceEnumerator));\n    if(FAILED(hr)) {printf(\"CoCreateInstance fail: HRESULT 0x%x\",hr);goto End;}\n\n\n    hr = deviceEnumerator-&gt;EnumAudioEndpoints(eRender,  DEVICE_STATE_ACTIVE, &amp;deviceCollection);\n    if(FAILED(hr)) {printf(\"EnumAudioEndpoints fail: HRESULT 0x%x\",hr);goto End;}\n\n    UINT deviceCount;\n    hr = deviceCollection-&gt;GetCount(&amp;deviceCount);\n    if(FAILED(hr)) {printf(\"GetCount fail: HRESULT 0x%x\",hr);goto End;}\n\n    //display all endpoints\n    for (UINT DeviceIndex = 0 ; DeviceIndex &lt; deviceCount; DeviceIndex++)\n    {\n        deviceCollection-&gt;Item(DeviceIndex,&amp;dev);\n        if(FAILED(hr)) {printf(\"Item fail: 0x%x\\n\",hr);goto Next;}\n\n        dev-&gt;GetId(&amp;pstr);\n        if(FAILED(hr)) {printf(\"Can't get device ID: HRESULT 0x%x\",hr);goto Next;}\n\n        hr = dev-&gt;OpenPropertyStore(STGM_READ, &amp;propertyStore);     \n        if(FAILED(hr)) {printf(\"Can't open property store: HRESULT 0x%x\",hr);goto Next;}\n\n        PROPVARIANT friendlyName;\n        PropVariantInit(&amp;friendlyName);\n\n        hr = propertyStore-&gt;GetValue(PKEY_Device_FriendlyName, &amp;friendlyName);      \n        if(FAILED(hr)) {printf(\"Can't get device name: HRESULT 0x%x\",hr);goto Next;}\n\n        printf(\"\\n\");\n        wprintf(friendlyName.pwszVal); \n        printf(\"\\n\");\n        PropVariantClear(&amp;friendlyName);\n\n        printf(\"Device id: \");\n        wprintf(pstr);\n        printf(\"\\n\");       \n\n        dev-&gt;GetState(&amp;state);\n        if(FAILED(hr)) {printf(\"Can't get state: HRESULT 0x%x\",hr);goto Next;}\n        printf(\"State: %d\\n\",state);\n\n        PROPVARIANT format;\n        PropVariantInit(&amp;format);\n\n        hr = propertyStore-&gt;GetValue(PKEY_AudioEngine_DeviceFormat, &amp;format);\n        if(FAILED(hr)) {printf(\"Can't get format: HRESULT 0x%x\",hr);goto Next;}\n\n        printf(\"\\n* Audio Format: *\\n\");        \n        memcpy_s(&amp;wex,sizeof(wex),format.blob.pBlobData,sizeof(wex));//копировать данные формата в буфер\n        printf(\"Format tag: 0x%x\\n\",(int)wex.wFormatTag);\n        printf(\"Channels: %d\\n\",(int)wex.nChannels);\n        printf(\"Bits per sample: %d\\n\",(int)wex.wBitsPerSample);\n        printf(\"Frequency: %d\\n\",(int)wex.nSamplesPerSec);\n        printf(\"Block align: %d\\n\",(int)wex.nBlockAlign);\n        PropVariantClear(&amp;format);\n\n        /* ****************** */\n\nNext:   if(dev!=NULL){dev-&gt;Release();dev=NULL;}\n        if(propertyStore!=NULL){propertyStore-&gt;Release();propertyStore=NULL;}\n\n    }//end for\n\n\nEnd:if(dev!=NULL){dev-&gt;Release();dev=NULL;}\n    if(propertyStore!=NULL){propertyStore-&gt;Release();propertyStore=NULL;}\n    if(deviceEnumerator!=NULL){deviceEnumerator-&gt;Release();deviceEnumerator=NULL;}\n    if(deviceCollection!=NULL){deviceCollection-&gt;Release();deviceCollection=NULL;}  \n\n    CoUninitialize();\n    system(\"PAUSE\");\n    return 0;\n}\n</code></pre>\n\n<p><strong>Результат:</strong></p>\n\n<p><a href=\"https://i.stack.imgur.com/XHmIi.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/XHmIi.png\" alt=\"Форматы аудио\"></a></p>\n"}