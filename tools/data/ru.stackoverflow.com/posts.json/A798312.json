{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1521126835,"last_edit_date":1521126835,"creation_date":1521050894,"answer_id":798312,"question_id":798054,"body":"<p>Обычно можно просто сделать выборку из <em>Win32_SerialPort</em> по <em>DeviceID</em> (он содержит имя порта, возвращаемое <em>GetPortNames</em>):</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Management;\n\nnamespace WmiTest\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }        \n\n        /*Возвращает информацию о последовательном порте с указанным именем*/\n        public string GetComPortInformation(string name)\n        {\n            ManagementObjectCollection mbsList = null;\n            StringBuilder sb = new StringBuilder(2000);            \n\n            ManagementObjectSearcher mbs = new ManagementObjectSearcher(\n            \"SELECT * FROM Win32_SerialPort WHERE DeviceID = '\"+name+\"'\"\n            );\n\n            using (mbs)\n            {\n                mbsList = mbs.Get();\n\n                foreach (ManagementObject mo in mbsList)\n                {\n                    object val = mo[\"Name\"];\n                    if (val != null) sb.AppendLine( val.ToString());\n\n                    foreach (var p in mo.Properties)\n                    {\n                        sb.Append( \"* \" + p.Name + \": \");\n                        if (p.Value != null)\n                        {\n                            sb.Append( p.Value.ToString());\n                        }\n                        else sb.Append( \"null\");\n                        sb.AppendLine();\n                    }\n                    break;\n                }\n                return sb.ToString();\n            }\n\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            string com_port = comboBox1.SelectedText; //Имя порта, например \"COM1\"\n            textBox1.Text = GetComPortInformation(com_port);\n        }\n\n    }\n}\n</code></pre>\n\n<p>Это сработает для всех физических COM-портов (ну, тех которые система считает физическими - т.е. для которых в диспетчере можно настроить скорость и прочие параметры). Для некоторых виртуальных портов это может не сработать. Это относится главным образом к виртуальным порта USB-устройств, работающих с нестандартным драйвером - DeviceID у таких устройств начинается не с \"USB\\\", а с вендорно-специфичной строки. Тогда, если приведенный запрос не вернул ничего, можно попробовать как-то так (вернет меньше свойств):</p>\n\n<blockquote>\n  <p>\"SELECT * FROM Win32_PnPEntity where ClassGuid = '{4d36e978-e325-11ce-bfc1-08002be10318}' and Service &lt;> 'Parport' AND Name like '%\" + name + \"%'\"</p>\n</blockquote>\n\n<p>Однако и такой способ - не лучший вариант, так как он основан на фильтрации по имени устройства, которое может и не содержать внутреннего имени порта. Более правильно связывать <em>Win32_PnpEntity</em> с портом через <em>PnpDeviceID</em>, используя параметр <em>PortName</em> в ветке реестра <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Enum\\(PnpDeviceID)\\DeviceParameters</code>. Это реализовано в следующем примере, более громоздком, но позволяющим корректно обработать большинство ситуаций и вывести максимальное количество доступных сведений.</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Management;\nusing Microsoft.Win32;\n\nnamespace WmiTest\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        /*Получение имени COM-порта по его PnpDeviceID*/\n        public string PortNameFromID(string PnpDeviceID)\n        {\n            object result = Registry.GetValue(\n                \"HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Enum\\\\\" + PnpDeviceID + \"\\\\Device Parameters\",\n                \"PortName\", \"\");\n\n            if (result != null) return result as string;\n            else return \"\";\n        }\n\n        /*Возвращает информацию о последовательном порте с указанным именем*/\n        public string GetComPortInformation(string name)\n        {\n            ManagementObjectSearcher mbs;\n            ManagementObjectCollection mbsList = null;\n            StringBuilder sb = new StringBuilder(2000);\n            object val;\n\n            //попытка получить данные из Win32_SerialPort\n            mbs = new ManagementObjectSearcher(\"SELECT * FROM Win32_SerialPort WHERE DeviceID = '\"+name+\"'\");\n\n            using (mbs)\n            {\n                mbsList = mbs.Get();\n\n                foreach (ManagementObject mo in mbsList)\n                {\n                    val = mo[\"Name\"];\n                    if (val != null) sb.AppendLine( val.ToString());\n\n                    //порт найден, возвращаем данные\n                    foreach (var p in mo.Properties)\n                    {\n                        sb.Append( \"* \" + p.Name + \": \");\n                        if (p.Value != null)\n                        {\n                            sb.Append( p.Value.ToString());\n                        }\n                        else sb.Append( \"null\");\n                        sb.AppendLine();\n                    }\n                    return sb.ToString();\n                }//end foreach                       \n            }\n\n            //порт не найден, выберем все последовательные порты из Win32_PnPEntity\n            mbs = new ManagementObjectSearcher(\n            \"SELECT * FROM Win32_PnPEntity where ClassGuid = '{4d36e978-e325-11ce-bfc1-08002be10318}' and Service &lt;&gt; 'Parport'\"\n            );\n\n            using (mbs)\n            {\n                mbsList = mbs.Get();\n\n                foreach (ManagementObject mo in mbsList)                \n                {\n                    //находим идентификатор\n                    val = mo[\"PnpDeviceID\"];\n                    if (val == null) continue;\n\n                    string id = val.ToString();\n                    if (id.Length == 0) continue;\n\n                    //находим имя порта для данного PnpDeviceID в реестре\n                    if (PortNameFromID(id) == name)\n                    {\n                        //порт найден, возвращаем данные\n                        sb.Clear();\n                        val = mo[\"Name\"];\n                        if (val != null) sb.AppendLine(val.ToString());\n\n                        foreach (var p in mo.Properties)\n                        {\n                            sb.Append(\"* \" + p.Name + \": \");\n                            if (p.Value != null)\n                            {\n                                sb.Append(p.Value.ToString());\n                            }\n                            else sb.Append(\"null\");\n                            sb.AppendLine();\n                        }\n                        return sb.ToString();\n                    }                    \n                }//end foreach          \n\n            }\n\n            return \"Информация не найдена\";\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n             string com_port = comboBox1.SelectedText; \n             textBox1.Text = GetComPortInformation(com_port); \n        }\n\n    }\n}\n</code></pre>\n"}