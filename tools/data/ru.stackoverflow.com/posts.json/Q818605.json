{"tags":["c#","winapi","listview"],"owner":{"reputation":1430,"user_id":238013,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/d4dab84aa4c67525aecd5da391a8e68a?s=128&d=identicon&r=PG&f=1","display_name":"D .Stark","link":"https://ru.stackoverflow.com/users/238013/d-stark"},"is_answered":true,"view_count":188,"accepted_answer_id":822054,"answer_count":2,"score":1,"last_activity_date":1525246451,"creation_date":1524565225,"last_edit_date":1525057129,"question_id":818605,"link":"https://ru.stackoverflow.com/questions/818605/syslistview32-sendmessage-%d1%81-%d0%bf%d0%b0%d1%80%d0%b0%d0%bc%d0%b5%d1%82%d1%80%d0%be%d0%bc-lvm-getitemtext-%d0%b2%d1%81%d0%b5%d0%b3%d0%b4%d0%b0-%d0%b2%d0%be%d0%b7%d0%b2%d1%80%d0%b0%d1%89%d0%b0%d0%b5%d1%82-0","title":"SysListView32: SendMessage с параметром LVM_GETITEMTEXT всегда возвращает 0","body":"<pre><code>[DllImport(\"User32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern IntPtr FindWindow(\n    [In, Optional] [MarshalAs(UnmanagedType.LPTStr)] string lpClassName,\n    [In, Optional] [MarshalAs(UnmanagedType.LPTStr)] string lpWindowName);\n\n[DllImport(\"User32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern IntPtr FindWindowEx(\n    [In, Optional] IntPtr hwndParent,\n    [In, Optional] IntPtr hwndChildAfter,\n    [In, Optional] [MarshalAs(UnmanagedType.LPTStr)] string lpszClass,\n    [In, Optional] [MarshalAs(UnmanagedType.LPTStr)] string lpszWindow);\n\n[DllImport(\"User32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern IntPtr SendMessage(\n    [In] IntPtr hWnd,\n    [In] uint Msg,\n    [In] IntPtr wParam,\n    [In] IntPtr lParam);\n\n[DllImport(\"Kernel32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern IntPtr VirtualAllocEx(\n    [In] IntPtr hProcess,\n    [In, Optional] IntPtr lpAddress,\n    [In] uint dwSize,\n    [In] uint flAllocationType,\n    [In] uint flProtect);\n\n[DllImport(\"Kernel32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\n[return: MarshalAs(UnmanagedType.Bool)]\nstatic extern bool VirtualFreeEx(\n    [In] IntPtr hProcess,\n    [In] IntPtr lpAddress,\n    [In] uint dwSize,\n    [In] uint dwFreeType);\n\n[DllImport(\"Kernel32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern bool WriteProcessMemory(\n    [In] IntPtr hProcess,\n    [In] IntPtr lpBaseAddress,\n    [In] ref LVITEM lpBuffer,\n    [In] int nSize,\n    out uint lpNumberOfBytesWritten);\n\n[DllImport(\"Kernel32.dll\", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]\nstatic extern bool ReadProcessMemory(\n    [In] IntPtr hProcess,\n    [In] IntPtr lpBaseAddress,\n    [In] IntPtr lpBuffer,\n    [In] uint nSize,\n    [Out] uint lpNumberOfBytesRead);\n\nconst int LVM_FIRST = 0x1000;\nconst int LVM_GETITEMCOUNT = LVM_FIRST + 4;\nconst int LVM_GETITEMTEXT = LVM_FIRST + 115;\nconst int HDM_GETITEMCOUNT = 0x1200;\nconst int MAX_LVITEM_TEXT_SIZE = 512;\n\nconst int MEM_COMMIT = 0x00001000;\nconst int PAGE_READWRITE = 0x04;\nconst int MEM_RELEASE = 0x00008000;\n\nconst int LVIF_TEXT = 0x0001;\n\n[StructLayout(LayoutKind.Sequential, Pack = 1)]\nstruct LVITEM {\n    public uint mask;\n    public int iItem;\n    public int iSubItem;\n    public uint state;\n    public uint stateMask;\n    public IntPtr pszText;\n    public int cchTextMax;\n    public int iImage;\n    public IntPtr lParam;\n    public int iIndent;\n    public int iGroupId;\n    public uint cColumns;\n    public IntPtr puColumns;\n    public IntPtr piColFmt;\n    public int iGroup;\n}\n\nstatic void Main(string[] args) {\n\n    // ...\n\n    const int lvItemSize = 76;\n\n    IntPtr hWnd = FindWindow(null, \"&lt;Window Name&gt;\");\n    IntPtr hSysListView32 = FindWindowEx(hWnd, IntPtr.Zero, \"SysListView32\", null);\n    IntPtr hSysHeader32 = FindWindowEx(hSysListView32, IntPtr.Zero, \"SysHeader32\", \"\");\n\n    if (hSysHeader32 == IntPtr.Zero) return;\n\n    int itemsCount = (int)SendMessage(hSysListView32, LVM_GETITEMCOUNT, IntPtr.Zero, IntPtr.Zero);\n    int colCount = (int)SendMessage(hSysHeader32, HDM_GETITEMCOUNT, IntPtr.Zero, IntPtr.Zero);\n\n    Console.Write(\"Items: {0}\\nColumns: {1}\\n\", itemsCount, colCount);\n\n    IntPtr lpLocalBuffer = Marshal.AllocHGlobal(MAX_LVITEM_TEXT_SIZE);\n    IntPtr lpLvItem = VirtualAllocEx(proc.Handle, IntPtr.Zero, lvItemSize, MEM_COMMIT, PAGE_READWRITE);\n    IntPtr lpText = VirtualAllocEx(proc.Handle, IntPtr.Zero, MAX_LVITEM_TEXT_SIZE, MEM_COMMIT, PAGE_READWRITE);\n\n    LVITEM lvItem = new LVITEM();\n\n    for (int i = 0; i &lt; itemsCount; i++) {\n\n        Console.Write(\"\\n\\n\".PadLeft(50, '-') + \"\\n\".PadLeft(50, '-'));\n\n        for (int j = 0; i &lt; colCount; j++) {\n\n            lvItem.mask = LVIF_TEXT;\n            lvItem.iSubItem = j;\n            lvItem.iItem = i;\n            lvItem.pszText = lpText;\n            lvItem.cchTextMax = MAX_LVITEM_TEXT_SIZE;\n\n            WriteProcessMemory(proc.Handle, lpLvItem, ref lvItem, lvItemSize, out uint written);\n            int symbolsCount = (int)SendMessage(hSysListView32, LVM_GETITEMTEXT, (IntPtr)i, lpLvItem);\n\n            if (symbolsCount &gt; 0) {\n                ReadProcessMemory(proc.Handle, lpText, lpLocalBuffer, MAX_LVITEM_TEXT_SIZE, 0);\n                Console.WriteLine(Marshal.PtrToStringUni(lpLocalBuffer));\n            }\n        }\n    }\n\n    Console.ReadKey();\n\n    if (lpLocalBuffer != IntPtr.Zero)\n        Marshal.FreeHGlobal(lpLocalBuffer);\n    if (lpLvItem != IntPtr.Zero)\n        VirtualFreeEx(proc.Handle, lpLvItem, 0, MEM_RELEASE);\n    if (lpText != IntPtr.Zero)\n        VirtualFreeEx(proc.Handle, lpText, 0, MEM_RELEASE);\n\n    // ...\n}\n</code></pre>\n\n<p>Данный код предназначен для получения содержимого SysListView32. Значения каждого элемента в каждом столбце. Подскажите, какая ошибка допущена здесь, если SendMessage с параметром LVM_GETITEMTEXT всегда возвращает 0.</p>\n\n<p>Проблем с самим окном быть не может.</p>\n"}