{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1562139199,"last_edit_date":1562139199,"creation_date":1562133479,"answer_id":998817,"question_id":998161,"body":"<p>По приведенным данным трудно понять, в чем ошибка. Я рекомендую вместо MFC использовать классический C API ODBC, который дает чуть больше контроля над происходящим.</p>\n\n<p>Вот рабочий пример подключения к SQL Server с помощью ODBC:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;tchar.h&gt;\n#include &lt;Windows.h&gt;\n#include &lt;sqlext.h&gt;\n#include &lt;locale.h&gt;\n\nWCHAR szDSN[] = L\"Driver={SQL Server};DSN='';SERVER=.\\\\sqlexpress;DATABASE=mydatabase;\";\nWCHAR query[] = L\"SELECT * FROM Table\";\n\nvoid DisplayError(SQLSMALLINT t,SQLHSTMT h) {\n    SQLWCHAR       SqlState[6], Msg[SQL_MAX_MESSAGE_LENGTH];\n    SQLINTEGER    NativeError;\n    SQLSMALLINT   i, MsgLen;\n    SQLRETURN     rc;\n\n    SQLLEN numRecs = 0;\n    SQLGetDiagField(t, h, 0, SQL_DIAG_NUMBER, &amp;numRecs, 0, 0);  \n\n    // Get the status records.\n    i = 1;\n    while (i &lt;= numRecs &amp;&amp; (rc = SQLGetDiagRec(t, h, i, SqlState, &amp;NativeError,\n            Msg, sizeof(Msg), &amp;MsgLen)) != SQL_NO_DATA) {\n        wprintf(L\"Error %d: %s\\n\", NativeError, Msg);\n        i++;\n    }\n\n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{   \n    HENV    hEnv = NULL;\n    HDBC    hDbc = NULL;\n    HSTMT hStmt = NULL;\n    int iConnStrLength2Ptr;\n    WCHAR szConnStrOut[256];\n    SQLINTEGER rowCount = 0;\n    SQLSMALLINT fieldCount = 0, currentField = 0;\n    SQLWCHAR buf[128],colName[128]; \n    SQLINTEGER ret;\n\n    /* ODBC API return status */\n    RETCODE rc;\n\n    setlocale(LC_ALL, \"Russian\");\n\n    /* Allocate an environment handle */\n    rc = SQLAllocEnv(&amp;hEnv);\n    /* Allocate a connection handle */\n    rc = SQLAllocConnect(hEnv, &amp;hDbc);\n\n    /* Connect to the database */\n    rc = SQLDriverConnect(hDbc, NULL, (WCHAR*)szDSN,\n        SQL_NTS, (WCHAR*)szConnStrOut,\n        255, (SQLSMALLINT*)&amp;iConnStrLength2Ptr, SQL_DRIVER_NOPROMPT);\n\n    if (SQL_SUCCEEDED(rc))\n    {\n        wprintf(L\"Successfully connected to database. Data source name: \\n  %s\\n\",\n            szConnStrOut);\n\n        /* Prepare SQL query */\n        wprintf(L\"SQL query:\\n  %s\\n\", query);\n\n        rc = SQLAllocStmt(hDbc, &amp;hStmt);\n        rc = SQLPrepare(hStmt, (SQLWCHAR*)query, SQL_NTS);      \n\n        /* Excecute the query */\n        rc = SQLExecute(hStmt);\n        if (SQL_SUCCEEDED(rc))\n        {\n            wprintf(L\"\\n- Columns -\\n\");\n\n            SQLNumResultCols(hStmt, &amp;fieldCount);\n            if (fieldCount &gt; 0)\n            {   \n                for (currentField = 1; currentField &lt;= fieldCount; currentField++)\n                {\n                    SQLDescribeCol(hStmt, currentField,\n                        colName, sizeof(colName), 0, 0, 0, 0, 0);\n                    wprintf(L\"%d: %s\\n\", (int)currentField, colName);\n                }\n                wprintf(L\"\\n\");\n\n                /* Loop through the rows in the result set */                               \n\n                rc = SQLFetch(hStmt);\n                while (SQL_SUCCEEDED(rc))\n                {\n                    wprintf(L\"- Record #%d -\\n\", (int)rowCount);\n\n                    for (currentField = 1; currentField &lt;= fieldCount; currentField++)\n                    {\n                        rc = SQLGetData(hStmt, currentField, SQL_C_WCHAR, buf, sizeof(buf), &amp;ret);\n\n                        if (SQL_SUCCEEDED(rc) == FALSE) {\n                            wprintf(L\"%d: SQLGetData failed\\n\", (int)currentField);\n                            continue;\n                        }\n\n                        if (ret &lt;= 0) {\n                            wprintf(L\"%d: (no data)\\n\", (int)currentField);\n                            continue;\n                        }\n\n                        wprintf(L\"%d: %s\\n\", (int)currentField, buf);\n                    }                   \n\n                    wprintf(L\"\\n\");\n                    rc = SQLFetch(hStmt);\n                    rowCount++;\n                };                  \n\n                rc = SQLFreeStmt(hStmt, SQL_DROP);\n\n            }\n            else\n            {\n                wprintf(L\"Error: Number of fields in the result set is 0.\\n\");\n            }                   \n\n        }\n        else {\n            wprintf(L\"SQL Failed\\n\");\n            DisplayError(SQL_HANDLE_STMT, hStmt);\n        }\n    }\n    else\n    {\n        wprintf(L\"Couldn't connect to %s\\n\", szDSN);    \n        DisplayError(SQL_HANDLE_DBC, hDbc);\n    }\n\n    /* Disconnect and free up allocated handles */\n    SQLDisconnect(hDbc);\n    SQLFreeHandle(SQL_HANDLE_DBC, hDbc);\n    SQLFreeHandle(SQL_HANDLE_ENV, hEnv);\n\n    getchar();\n    return 0;\n}\n</code></pre>\n\n<p>Если нужно подключиться к mdf-файлу, строка подключения szDSN будет иметь вид:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Driver={SQL Server};DSN='';SERVER=.\\\\SQLEXPRESS;AttachDBFileName=C:\\\\base\\\\db.mdf;\n</code></pre>\n\n<p>Параметры строки подключения:</p>\n\n<ul>\n<li><p><strong>Driver</strong>: по ситуации (в зависимости от того, к какой версии SQL Server на какой ОС и как именно подключаетесь и что пытаетесь делать) возможно понадобится поменять на <code>SQL Server Native Client XX.0</code>, где ХХ - используемая версия. Например <code>SQL Server Native Client 11.0</code> для SQL 2012.</p></li>\n<li><p><strong>Server</strong>: путь к экземпляру вида <code>(IP или имя сервера)\\(имя экземпляра)</code>. Точка означает localhost. Если используется экземпляр по умолчанию, имя экземпляра и косую черту нужно опустить</p></li>\n<li><p><strong>DataBase</strong>: имя БД, уже присоединенной к серверу.</p></li>\n<li><p><strong>AttachDBFileName</strong>: путь к файлу БД для подключения (Внимание - при таком сценарии он будет открыт монопольно, пока вы работаете с соединением!).</p></li>\n</ul>\n\n<p>Для аутентификации по логину и паролю необходимо добавить <code>UID=login;PWD=password</code> (по умолчанию используется Windows-аутентификация от имени текущего пользователя).</p>\n\n<p>Если не уверены в параметрах соединения, можно поэкспериментировать через <em>Панель управления - Администрирование - Источники данных ODBC</em>. Создаете файловый DSN с нужными параметрами, тестируете его, а затем открываете в блокноте и копируете параметры.</p>\n"}