{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1516378205,"creation_date":1516378205,"answer_id":773005,"question_id":768442,"body":"<p>Нужно обнулять память для структуры LVITEM и массива символов перед каждым вызовом <em>WriteProcessMemory</em> / <em>SendMessage</em>.</p>\n\n<p>Данный код позволяет получить текст для всех столбцов ListView:</p>\n\n<pre><code>HWND hSysListView32 = FindWindowEx(hWnd, NULL, L\"SysListView32\", NULL);\n\nDWORD dwProcessId;\nGetWindowThreadProcessId(hSysListView32, &amp;dwProcessId);\nHANDLE hProcess = OpenProcess(\nPROCESS_VM_READ | PROCESS_VM_WRITE |\nPROCESS_VM_OPERATION,\nFALSE,\ndwProcessId);\n\nif (!hProcess) return -1;\n\nLVITEM* lviAddress = (LVITEM*)VirtualAllocEx(hProcess, NULL, sizeof LVITEM, MEM_COMMIT, PAGE_READWRITE);\nLPTSTR pItemText = (LPTSTR)VirtualAllocEx(hProcess, NULL, sizeof TCHAR * 512, MEM_COMMIT, PAGE_READWRITE);\n\nTCHAR itemText[512] = {0};\nLVITEM lvItem = { 0 };\n\nfor (int i = 0; i &lt; COUNT_ITEMS; i++)\n    for(int j=0; j &lt; COUNT_SUBITEMS; j++)\n    {\n\n        memset(&amp;itemText,0,sizeof(itemText)); //обнуление памяти\n        memset(&amp;lvItem,0,sizeof(LVITEM));\n\n        lvItem.mask = LVIF_TEXT;\n        lvItem.iSubItem = j;\n        lvItem.iItem = i;\n        lvItem.pszText = pItemText;\n        lvItem.cchTextMax = 512;\n\n        WriteProcessMemory(hProcess, lviAddress, &amp;lvItem, sizeof(LVITEM), NULL);\n\n        int nSymbolsCount = SendMessage(hSysListView32, LVM_GETITEMTEXT, i, (LPARAM)lviAddress);\n        if (nSymbolsCount &gt; 0)\n        ReadProcessMemory(hProcess, pItemText, itemText, sizeof TCHAR * nSymbolsCount, NULL);\n\n        wprintf(L\"Item %d, subitem %d: %s\\n\", i,j,itemText);\n    }\n\nVirtualFreeEx(hProcess, pItemText, 0, MEM_RELEASE);\nVirtualFreeEx(hProcess, lviAddress, 0, MEM_RELEASE);\nCloseHandle(hProcess);\n</code></pre>\n"}