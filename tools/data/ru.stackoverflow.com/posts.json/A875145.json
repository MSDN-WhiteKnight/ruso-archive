{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":3,"last_activity_date":1535603869,"creation_date":1535603869,"answer_id":875145,"question_id":875087,"body":"<p>Большинство функций WinAPI существуют в двух вариантах: ANSI (использующие текущую кодовую страницу системы) и Unicode. Эти варианты называются наборами символов (character sets). Если открыть заголовочные файлы Windows SDK, можно увидеть, что функции в них объявлены так:</p>\n\n<pre><code>#ifdef UNICODE\n#define CreateFile  CreateFileW\n#else\n#define CreateFile  CreateFileA\n#endif // !UNICODE\n</code></pre>\n\n<p>Использование символа препроцессора UNICODE позволяет писать код, не привязываясь к определенному набору символов: добавляя или убирая его определение, можно легко переключиться с одного на другой. Эта функциональность была полезна во времена, когда нужно было собирать приложения как под Windows 9x, не поддерживающую Unicode, так и под Windows XP. Определить символ препроцессора можно не только из кода, но и параметром компилятора (например, ключ /D в Visual C++), что позволяло иметь одинаковый код проекта и собирать его в студии разными конфигурациями под разные ОС. </p>\n\n<p>Кроме того, в Visual C++ есть заголовочный файл tchar.h, который использует похожий механизм для функций стандартной библиотеки, но он использует другой символ препроцессора - <code>_UNICODE</code>.</p>\n"}