{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":8,"last_activity_date":1513435754,"last_edit_date":1513435754,"creation_date":1513435043,"answer_id":759191,"question_id":759165,"body":"<p>Тут есть несколько вариантов.</p>\n\n<ul>\n<li><p>Получить список процессов, открывших файл, с помощью Restart Manager (<a href=\"https://ru.stackoverflow.com/a/727180/240512\">пример</a>), для каждого файла.</p></li>\n<li><p>Распарсить вывод команды <code>openfiles /query</code>, которая выводит список всех открытых в данный момент файлов, и отфильтровать нужное (предварительно нужно включить вывод локальных файлов через команду  <code>openfiles /local on</code>, и перезагрузить систему).</p></li>\n<li><p>Как вы сказали, пытаться открывать файлы с параметром <code>FileShare.None</code>, и ловить исключения</p></li>\n</ul>\n\n<p>Смотрите сами, по ситуации, что больше подходит. Все способы довольно тяжелые, если файлов много. </p>\n\n<p><strong>Примечание.</strong> Утилита openfiles (предположительно) использует для получения списка локально открытых файлов недокументированные возможности функции <code>NtQuerySystemInformation</code> и анализ внутренней структуры дескрипторов, поэтому реализовать самостоятельно эту же функциональность будет слишком трудно. (<a href=\"https://www.codeproject.com/KB/shell/OpenedFileFinder.aspx?fid=422864&amp;df=90&amp;mpp=25&amp;noise=3&amp;sort=Position&amp;view=Quick&amp;fr=26&amp;select=2277170\" rel=\"noreferrer\">Пример решения на С++ с использованием своего драйвера.</a>)</p>\n"}