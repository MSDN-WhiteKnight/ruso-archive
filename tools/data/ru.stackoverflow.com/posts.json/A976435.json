{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":4,"last_activity_date":1556597561,"creation_date":1556597561,"answer_id":976435,"question_id":976245,"body":"<p>Например, используя <a href=\"https://github.com/Microsoft/clrmd\" rel=\"nofollow noreferrer\">Microsoft.Diagnostics.Runtime</a>. Впрочем, запросы у вас слишком велики: получить значения свойств без приостановки процесса (т.е. в пассивном режиме отладки) невозможно. Свойства - это, в конце концов, те же методы. Получить значение поля в пассивном режиме, конечно, можно. Например, следующий код демонстрирует присоединение к процессу в пассивном режиме, поиск в его управляемой куче объекта определенного типа и получение значения его поля:</p>\n\n<pre><code>using System;\nusing Microsoft.Diagnostics.Runtime;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {       \n\n        static void Main(string[] args)\n        {\n            DataTarget dt=DataTarget.AttachToProcess(17680,5000,AttachFlag.Passive); \n\n            using (dt)\n            {\n                ClrInfo runtimeInfo = dt.ClrVersions[0];\n                ClrRuntime runtime = runtimeInfo.CreateRuntime();\n\n                ClrType type;\n\n                foreach (ulong obj in runtime.Heap.EnumerateObjectAddresses())\n                {\n                    type = runtime.Heap.GetObjectType(obj);\n\n                    if (type == null) continue;\n\n                    if (type.Name == \"System.Windows.Forms.Form\" || \n                        (type.BaseType != null &amp;&amp; type.BaseType.Name == \"System.Windows.Forms.Form\"))\n                    {\n                        Console.WriteLine(\"Address 0x{0:X}: {1}\", obj, type.Name);\n                        ClrInstanceField f = type.GetFieldByName(\"Foo\");\n                        object val = f.GetValue(obj);\n                        if (val != null) Console.WriteLine(val.ToString());\n                    }\n                }\n            }\n\n            Console.ReadKey();\n        }\n\n    } \n\n}\n</code></pre>\n"}