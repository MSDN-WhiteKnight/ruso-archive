{"tags":["c#","ооп","словари"],"owner":{"reputation":4975,"user_id":206435,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/aff8ab0e5f74d01facde887535318d53?s=128&d=identicon&r=PG","display_name":"ヒミコ","link":"https://ru.stackoverflow.com/users/206435/%e3%83%92%e3%83%9f%e3%82%b3"},"is_answered":true,"view_count":53,"answer_count":1,"score":0,"last_activity_date":1566289942,"creation_date":1566231281,"last_edit_date":1566232164,"question_id":1015207,"link":"https://ru.stackoverflow.com/questions/1015207/%d0%9a%d0%b0%d0%ba-%d0%b7%d0%b0%d0%bf%d0%be%d0%bb%d0%bd%d0%b8%d1%82%d1%8c-%d1%81%d1%82%d0%b0%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b8%d0%b9-dictionary-%d0%b4%d0%b5%d0%bb%d0%b5%d0%b3%d0%b0%d1%82%d0%b0%d0%bc%d0%b8-%d0%bd%d0%b0-%d0%bd%d0%b5%d1%81%d1%82%d0%b0%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b8%d0%b5-%d0%bc%d0%b5%d1%82%d0%be%d0%b4%d1%8b","title":"Как заполнить статический Dictionary делегатами на нестатические методы?","body":"<p>Имеется структура, которая является объединением, у каждого объекта есть свой метод чтения и очистки памяти за собой. Мне нужно сделать выборку делегата очистки или чтения через <code>Dictionary&lt;uint, (ReadDelegate, CleanDelegate)&gt;</code>.</p>\n\n<p>Проблема заключается не в самих методах, а в том что они не статические, да и мне не выгодно для каждого объекта создавать список этих делегатов для чтения и чистки.</p>\n\n<p>Чего я хочу добиться? Примерно такого. Но увы, методы не статические, и я не понимаю как мне один раз инициализировать этот словарь, что бы после этого пользоваться им.</p>\n\n<pre><code>private delegate Result ReadDelegate(Stream stream);\nprivate delegate void CleanDelegate();\n\nprivate static Dictionary&lt;uint, (ReadDelegate, CleanDelegate)&gt; ReadCleanMethods;\n</code></pre>\n\n<p>Структура выглядит так, как приведено ниже <em>(экономия памяти на выделении объектов, и сведение к минимуму кол-во выделений)</em>:</p>\n\n<pre><code>[StructLayout(LayoutKind.Explicit)]\ninternal partial struct Chunk\n{\n    [FieldOffset(0)]\n    internal ChunkCommon Common;\n\n    [FieldOffset(0)]\n    internal ChunkList List;\n\n    [FieldOffset(0)]\n    internal ChunkIdx1 Idx1;\n\n    [FieldOffset(0)]\n    internal ChunkAvih Avih;\n\n    [FieldOffset(0)]\n    internal ChunkStrh Strh;\n\n    [FieldOffset(0)]\n    internal ChunkStrf Strf;\n\n    [FieldOffset(0)]\n    internal ChunkStrd Strd;\n\n    [FieldOffset(0)]\n    internal ChunkVprp Vprp;\n\n    [FieldOffset(0)]\n    internal ChunkIndx Indx;\n\n    [FieldOffset(0)]\n    internal ChunkString String;\n\n    private delegate Result ReadDelegate(Stream stream);\n    private delegate void CleanDelegate();\n\n    private static Dictionary&lt;uint, (ReadDelegate, CleanDelegate)&gt; ReadCleanMethods;\n}\n</code></pre>\n\n<p>Как и когда это лучше сделать?</p>\n"}