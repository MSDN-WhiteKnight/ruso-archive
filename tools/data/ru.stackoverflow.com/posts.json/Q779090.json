{"tags":["c#",".net-core"],"owner":{"reputation":67,"user_id":23355,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8353ab3d0a377d7cd7b3ef9d025dff03?s=128&d=identicon&r=PG","display_name":"Макс Бурцев","link":"https://ru.stackoverflow.com/users/23355/%d0%9c%d0%b0%d0%ba%d1%81-%d0%91%d1%83%d1%80%d1%86%d0%b5%d0%b2"},"is_answered":true,"view_count":1029,"accepted_answer_id":779212,"answer_count":1,"score":3,"last_activity_date":1517592986,"creation_date":1517557531,"last_edit_date":1517573744,"question_id":779090,"link":"https://ru.stackoverflow.com/questions/779090/%d0%a1%d0%ba%d0%be%d0%bb%d1%8c%d0%ba%d0%be-%d0%bf%d0%b0%d0%bc%d1%8f%d1%82%d0%b8-%d0%b7%d0%b0%d0%bd%d0%b8%d0%bc%d0%b0%d1%8e%d1%82-%d0%be%d0%b1%d1%8a%d0%b5%d0%ba%d1%82%d1%8b","title":"Сколько памяти занимают объекты?","body":"<p>Провел несколько тестов, и был весьма удивлен... Режим компиляции x64. Первый тест показал 4 байта, здесь все нормально. Второй 32. Ого подумал я. И трейтий 32 WTF ???</p>\n\n<pre><code>static int count = 10000000;\n\n        static void Array_C()\n    {\n        var size = GC.GetTotalMemory(true);\n        var arr = new int[count];\n\n        for (var i = 0; i &lt; count; ++i)\n        {\n            arr[i] = i;\n        }\n\n        var mem = GC.GetTotalMemory(true) - size;\n\n        Console.WriteLine(\"Выделено памяти: \" + mem + \", размер одного объекта: \" + Math.Truncate((double)mem / count) + \", код последней \" + arr.Last());\n    }\n\n    static void Array_E()\n    {\n        var size = GC.GetTotalMemory(true);\n        var arr = new object[count];\n\n        for (var i = 0; i &lt; count; ++i)\n        {\n            arr[i] = new object();\n        }\n\n        var mem = GC.GetTotalMemory(true) - size;\n\n        Console.WriteLine(\"Выделено памяти: \" + mem + \", размер одного объекта: \" + Math.Truncate((double)mem / count) + \", код последней \" + arr.Last().GetHashCode());\n    }\n\n    static void Array_F()\n    {\n        var size = GC.GetTotalMemory(true);\n        var arr = new C[count];\n\n        for (var i = 0; i &lt; count; ++i)\n        {\n            arr[i] = new C { Val0 = i, Val1 = i };\n        }\n\n        var mem = GC.GetTotalMemory(false) - size;\n\n        Console.WriteLine(\"Выделено памяти: \" + mem + \", размер одного объекта: \" + Math.Truncate((double)mem / count) + \", код последней \" + arr.Last().Val0 + arr.Last().Val1);\n    }\n\n[StructLayout(LayoutKind.Sequential, Pack = 1)]\nclass C\n{\n    public int Val0;\n    public int Val1;\n}\n</code></pre>\n\n<p>Вопрос даже не в том почему во втором тесте один экземляр занимает 32 байта. А в том почему в третьем тесте экземпляр не занимает 40 байт.</p>\n"}