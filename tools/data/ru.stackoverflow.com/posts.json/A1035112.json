{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1571204350,"creation_date":1571204350,"answer_id":1035112,"question_id":1034895,"body":"<blockquote>\n  <p>Пожалуйста скажите правильно ли я всё делаю? </p>\n</blockquote>\n\n<p>Если я правильно понимаю смысл кода - нет, неправильно. Вы собираетесь бросать исключение ArgumentException, когда пользователь пытается выполнить ход, не соответствующий тому, как ходит фигура по правилам шахмат. Это не выглядит исключительной ситуацией. Зачем выполнять достаточно тяжелую для CLR операцию проброса исключения для того, что можно решить простым возвратом значения? Я понимаю проброс ArgumentException, когда координаты за пределами доски, так как это обычно означает баг в коде, в этом случае можно бросать исключение.</p>\n\n<p>Другое замечание: CheckMove - неудачное наименование для метода проверки, неясно, что именно означает true - корректность или некорректность.</p>\n\n<p>По мне должно быть как-то так:</p>\n\n<pre><code>class MoveResult\n{\n    public bool IsValid { get; set; }\n    public string Message { get; set; }\n}\n\nabstract class ChessPiece\n{\n    protected int x, y;\n    public virtual MoveResult MakeMove(int x, int y)\n    {\n        AssertCoordinatesValid(x, y);\n\n        if (!IsMoveValid(x, y))\n        {\n            return new MoveResult\n            {\n                IsValid = false,\n                Message = \"This move is not allowed for \" + this.GetType().ToString()\n            };\n        }\n        this.x = x;\n        this.y = y;\n        return new MoveResult { IsValid = true, Message = \"\" };\n    }\n\n    static void AssertCoordinatesValid(int x, int y)\n    {        \n        if (!(x &gt;= 0 &amp;&amp; x &lt;= 8 &amp;&amp; y &gt;= 0 &amp;&amp; y &lt;= 8))\n        {\n            throw new ArgumentException(\"Coordinates cannot be less than 0 or greater than 8\");\n        }\n    }\n\n    protected abstract bool IsMoveValid(int x, int y);\n}\n\nclass Rock : ChessPiece\n{\n    protected override bool IsMoveValid(int x, int y)\n    {       \n        return (this.x == x || this.y == y);\n    }\n}\n</code></pre>\n"}