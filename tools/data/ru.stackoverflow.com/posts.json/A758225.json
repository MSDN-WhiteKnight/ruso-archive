{"owner":{"reputation":12753,"user_id":189339,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/blvPB.png?s=128&g=1","display_name":"Denis Bubnov","link":"https://ru.stackoverflow.com/users/189339/denis-bubnov"},"is_accepted":false,"score":6,"last_activity_date":1513255567,"last_edit_date":1513255567,"creation_date":1513250144,"answer_id":758225,"question_id":758190,"body":"<p>Начнем с того, что у нас будет какая-то информация о процессах (не забываем подключить пространство имен <code>using System.Diagnostics;</code>):</p>\n\n<pre><code>Process[] processList = Process.GetProcesses();\nforeach (Process process in processList)\n{\n    // В process хранится информация о процессе\n}\n</code></pre>\n\n<p>Метод <a href=\"https://msdn.microsoft.com/ru-ru/library/system.diagnostics.process.getprocesses(v=vs.110).aspx\" rel=\"noreferrer\"><code>GetProcesses</code></a> - возвращает массив компонентов <code>Process</code> для каждого ресурса процесса на локальном компьютере. Собственно, у процесса <a href=\"https://msdn.microsoft.com/ru-ru/library/system.diagnostics.process(v=vs.110).aspx\" rel=\"noreferrer\"><code>Process</code></a> есть свойство <code>Id</code> в котором находится уникальный идентификатор связанного процесса. </p>\n\n<p>После выполнения этого кода у нас есть данные о процессах, и можно перейти к другой части, получение описания процесса и владельца процесса. </p>\n\n<p>Добавим ссылку на сборку <code>System.Management</code> кликаем на проекте, затем через <kbd>Add</kbd>-><kbd>Reference...</kbd> ставим галочку и прописываем <code>using System.Management;</code></p>\n\n<p><a href=\"https://i.stack.imgur.com/mLBqx.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/mLBqx.png\" alt=\"введите сюда описание изображения\"></a></p>\n\n<p>Напишем такой метод:</p>\n\n<pre><code>public static List&lt;KeyValuePair&lt;int, string&gt;&gt; GetProcessExtraInformation(int processId)\n{\n    // запрос получения всех процессов связанных с переданным идентификатором processId\n    string query = \"Select * From Win32_Process Where ProcessID = \" + processId;\n    ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);\n    ManagementObjectCollection processList = searcher.Get();\n\n    // здесь будет результат    \n    List&lt;KeyValuePair&lt;int, string&gt;&gt; result = new List&lt;KeyValuePair&lt;int, string&gt;&gt;();\n\n    foreach (ManagementObject obj in processList)\n    {\n        var description = @\"Не могу получить информацию о процессе\";\n        // Получим описание процесса, если таковое имеется\n        if (obj[\"ExecutablePath\"] != null)\n        {\n            try\n            {\n                FileVersionInfo info = FileVersionInfo.GetVersionInfo(obj[\"ExecutablePath\"].ToString());\n                description = info.FileDescription;\n            }\n            catch { }\n        }\n\n        // Получить владельца процесса в argList \n        var owner = @\"Не могу получить владельца процесса\";\n        string[] argList = new string[] { string.Empty, string.Empty };\n        int returnVal = Convert.ToInt32(obj.InvokeMethod(\"GetOwner\", argList));\n        if (returnVal == 0)\n        {\n            owner = argList[1] + \"\\\\\" + argList[0]; // Домен и владелец                    \n        }\n\n        result.Add(new KeyValuePair&lt;int, string&gt;(processId, string.Format(\"Description: '{0}'\\nOwner: '{1}'\", description, owner)));\n    }\n\n    return result;\n}\n</code></pre>\n\n<p>Да, начальный код перепишем вот так:</p>\n\n<pre><code>Process[] processList = Process.GetProcesses();\nforeach (Process process in processList)\n{\n    // В process хранится информация о процессе\n    var processInfo = GetProcessExtraInformation(process.Id);\n\n    foreach (var info in processInfo)\n    {\n        Console.WriteLine(string.Format(\"Id: {0}\\n{1}\", info.Key, info.Value));\n    }\n    Console.WriteLine();\n}\n\nConsole.ReadLine();\n</code></pre>\n\n<p>В результате получим что-то на подобии вот этого:</p>\n\n<p><a href=\"https://i.stack.imgur.com/69NiA.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/69NiA.png\" alt=\"введите сюда описание изображения\"></a></p>\n\n<p>Модернизировал ответ из источника: <a href=\"https://stackoverflow.com/a/777567/5275890\">How do I determine the owner of a process in C#?</a> и дополнил некоторыми деталями результат. Исходя из полученных данных, можно предположить, что процесс с владельцем <strong>SYSTEM</strong> - является системным процессом. Также, следует обратить внимание на домены.</p>\n\n<blockquote>\n  <p>Учетная запись локальной системы — это встроенная учетная запись,\n  обладающая очень высокими правами доступа. Она имеет обширные права и\n  выступает в качестве компьютера сети. Фактическое имя этой учетной\n  записи — «<strong>NT AUTHORITY\\SYSTEM</strong>».</p>\n</blockquote>\n\n<p>Про учетные записи и службы можно почитать к примеру здесь: <a href=\"https://technet.microsoft.com/ru-ru/library/ms143504(v=sql.100).aspx\" rel=\"noreferrer\">Настройка учетных записей служб Windows</a> в разделе <em>Использование стартовых учетных записей для запуска служб SQL Server</em></p>\n"}