{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1568136316,"last_edit_date":1568136316,"creation_date":1568000947,"answer_id":1021594,"question_id":1021507,"body":"<p>Стандартная реализация GetHashCode для object возвращает значение, генерируемое отдельно для каждого объекта, и никак не зависит от значений его полей (т.е., его использование при сравнении эквивалентно сравнению по ссылке). Так как он реализован в CLR, исходников GetHashCode из .NET Framework нет в официальных источниках. Реализацию GetHashCode из .NET Core можно посмотреть <a href=\"https://github.com/dotnet/coreclr/blob/master/src/classlibnative/bcltype/objectnative.cpp#L70\" rel=\"nofollow noreferrer\">в исходниках CoreCLR</a> (C++):</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>NOINLINE static INT32 GetHashCodeHelper(OBJECTREF objRef)\n{\n    DWORD idx = 0;\n\n    FC_INNER_PROLOG(ObjectNative::GetHashCode);\n\n    HELPER_METHOD_FRAME_BEGIN_RET_ATTRIB_1(Frame::FRAME_ATTR_EXACT_DEPTH|Frame::FRAME_ATTR_CAPTURE_DEPTH_2, objRef);   \n\n    idx = objRef-&gt;GetHashCodeEx();\n\n    HELPER_METHOD_FRAME_END();\n    FC_INNER_EPILOG();\n    return idx;\n}\n</code></pre>\n\n<p>Если дойти до получения самого значения, то это будет метод <a href=\"https://github.com/dotnet/coreclr/blob/master/src/vm/threads.h#L1769\" rel=\"nofollow noreferrer\">Thread.GetNewHashCode</a>:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>inline DWORD GetNewHashCode()\n{\n    LIMITED_METHOD_CONTRACT;\n    // Every thread has its own generator for hash codes so that we won't get into a situation\n    // where two threads consistently give out the same hash codes.\n    // Choice of multiplier guarantees period of 2**32 - see Knuth Vol 2 p16 (3.2.1.2 Theorem A).\n    DWORD multiplier = GetThreadId()*4 + 5;\n    m_dwHashCodeSeed = m_dwHashCodeSeed*multiplier + 1;\n    return m_dwHashCodeSeed;\n}\n</code></pre>\n\n<p>То же самое в <a href=\"https://web.archive.org/web/20100826092233/http://www.koders.com/cpp/fidA059682663204D622AA0406F037499FCE5B1BEE9.aspx\" rel=\"nofollow noreferrer\">исходниках .NET Framework CLR</a>, из неофициальных источников. </p>\n\n<hr>\n\n<p>Таким образом, если нужен пример вычисления хэш-кода для своего типа, исходный код object.GetHashCode бесполезен. В качестве примера реализации вычисления хэш-кода на основе полей объекта вместо него можно взять например <a href=\"https://github.com/dotnet/roslyn/blob/master/src/Compilers/CSharp/Portable/Compiler/AnonymousTypeMethodBodySynthesizer.cs#L160\" rel=\"nofollow noreferrer\">код генератора метода GetHashCode для анонимных типов</a> из исходников компилятора C#.</p>\n"}