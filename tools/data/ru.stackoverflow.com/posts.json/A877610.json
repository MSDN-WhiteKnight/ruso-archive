{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":4,"last_activity_date":1536162148,"last_edit_date":1536162148,"creation_date":1536135079,"answer_id":877610,"question_id":877584,"body":"<p>Заголовочных файлов для использования DLL, естественно, недостаточно. Они содержат объявления функций, но как компоновщик найдет реализацию (точнее поймет, что она подгружается динамически)? Для этого к каждой DLL и прилагается статическая библиотека (\"библиотека импорта\"), которая предоставляет компоновщику необходимую информацию. <em>Технически библиотека импорта не является полноценной статической библиотекой (т.е., архивом объектных файлов), ее структура намного проще, но с точки зрения работы компоновщика особой разницы нет, поэтому можно назвать ее так.</em></p>\n\n<p><strong>lib</strong> - расширение файлов статических библиотек, принятое в Windows. <strong>a</strong> - аналогично в UNIX-системах. MinGW на самом деле поддерживает оба формата библиотек (Источник: <a href=\"http://www.mingw.org/wiki/Specify_the_libraries_for_the_linker_to_use\" rel=\"nofollow noreferrer\">Specify the libraries for the linker to use</a>). Если для вас это не работает, возможно, нужно просто обновить версию.</p>\n\n<hr>\n\n<p>А искать библиотеки импорта методом тыка не надо. Открываете страницу документации для функции (например, <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/commdlg/nf-commdlg-getopenfilenamew\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/windows/desktop/api/commdlg/nf-commdlg-getopenfilenamew</a>), у нее внизу указано имя библиотеки импорта (в данном случае Comdlg32.lib). Если ищете в папках mingw, добавляете в начало имени \"lib...\" и меняете расширение на \".а\". Если в папках MinGW ее нет, скачиваете последнюю версию Windows SDK, устанавливаете и берете lib-файл из папки <code>Program Files\\Microsoft SDKs</code> или <code>Program Files\\Windows Kits</code>. С высокой вероятностью MinGW примет его.</p>\n"}