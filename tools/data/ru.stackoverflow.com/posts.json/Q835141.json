{"tags":["c#",".net","windows","winapi"],"owner":{"reputation":121,"user_id":289076,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a538d88ef7c59cd98fab8ffa5ad5c2e7?s=128&d=identicon&r=PG&f=1","display_name":"Oleg Lylok","link":"https://ru.stackoverflow.com/users/289076/oleg-lylok"},"is_answered":true,"view_count":36,"accepted_answer_id":835285,"answer_count":1,"score":1,"last_activity_date":1527665819,"creation_date":1527620468,"question_id":835141,"link":"https://ru.stackoverflow.com/questions/835141/%d0%9d%d0%b5-%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b0%d0%b5%d1%82%d1%81%d1%8f-%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b8%d1%82%d1%8c-%d0%b4%d0%b0%d0%bd%d0%bd%d1%8b%d0%b5-%d0%be-udp-%d1%81%d0%be%d0%b5%d0%b4%d0%b8%d0%bd%d0%b5%d0%bd%d0%b8%d1%8f%d1%85-%d1%81-%d0%bf%d0%be%d0%bc%d0%be%d1%89%d1%8c%d1%8e-getextendedudptable","title":"Не получается получить данные о UDP соединениях с помощью GetExtendedUdpTable","body":"<p>Есть следующий код:</p>\n\n<pre><code>    private struct MIB_UDPROW_OWNER_PID\n    {\n        public uint dwLocalAddr;\n        public uint dwLocalPort;\n        public uint dwOwningPid;\n    }\n   enum UDP_TABLE_CLASS\n    {\n        UDP_TABLE_BASIC,\n        UDP_TABLE_OWNER_MODULE,\n        UDP_TABLE_OWNER_PID\n    }\n\n    const uint ERROR_INSUFFICIENT_BUFFER = 122;\n    const uint NO_ERROR = 0;\n    private const uint AF_INET = 2;\n    private const uint AF_INET6 = 23;\n\n    [DllImport(\"Iphlpapi.dll\", SetLastError = true, ExactSpelling = true)]\n    static extern uint GetExtendedUdpTable(IntPtr pTcpTable,\n       ref int pdwSize,\n       bool bOrder,\n       uint ulAf,\n       UDP_TABLE_CLASS TableClass,\n       uint Reserved\n       )\n       ;\n    static void Main(string[] args)\n    {\n        while (true)\n        {\n            Thread.Sleep(100);\n            MIB_UDPROW_OWNER_PID[] ms = GetUdpTableForEachProcess();\n            foreach (MIB_UDPROW_OWNER_PID m in ms )\n            {\n                Console.WriteLine(m.dwLocalPort);\n            }\n        }\n    }\n    static MIB_UDPROW_OWNER_PID[] GetUdpTableForEachProcess()\n    {\n        IntPtr ptr = IntPtr.Zero;\n        int buffSize = 0;\n        uint dwError;\n\n        dwError = GetExtendedUdpTable(ptr, ref buffSize, false, AF_INET, UDP_TABLE_CLASS.UDP_TABLE_OWNER_PID, 0);\n\n        if (dwError != ERROR_INSUFFICIENT_BUFFER)\n        {\n            return null;\n        }\n\n        ptr = Marshal.AllocHGlobal(buffSize);\n\n        dwError = GetExtendedUdpTable(ptr, ref buffSize, false, AF_INET, UDP_TABLE_CLASS.UDP_TABLE_OWNER_PID, 0);\n\n        if (dwError != NO_ERROR)\n        {\n            Marshal.FreeHGlobal(ptr);\n            return null;\n        }\n\n        int count = Marshal.ReadInt32(ptr);\n        IntPtr ptrRead = ptr + sizeof(int);\n        int sz = Marshal.SizeOf(typeof(MIB_UDPROW_OWNER_PID));\n        MIB_UDPROW_OWNER_PID[] mtop = new MIB_UDPROW_OWNER_PID[count];\n\n        for (int i = 0; i &lt;= count - 1; i++)\n        {\n            mtop[i] = (MIB_UDPROW_OWNER_PID)Marshal.PtrToStructure(ptrRead, typeof(MIB_UDPROW_OWNER_PID));\n            ptrRead += sz;\n        }\n        Marshal.FreeHGlobal(ptr);\n\n        return mtop;\n\n\n    }\n</code></pre>\n\n<p>И вместо того, чтобы вернуть мне порт, оно возвращает значения вида 0 0 0 <em>куча цифр</em> 0 0 0. Тоже самое и с PID. Причем с GetExtendedTcpTable все работает отлично. Все структуры и перечисления точно правильные, так как взяты с MSDN. Null нигде и никто не возвращает. Есть идеи, товарищи?</p>\n"}