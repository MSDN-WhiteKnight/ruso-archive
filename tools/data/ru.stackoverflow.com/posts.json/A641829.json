{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":3,"last_activity_date":1521699559,"last_edit_date":1521699559,"creation_date":1489998299,"answer_id":641829,"question_id":641741,"body":"<p>Насколько я понял</p>\n\n<p><em>3856B</em> - номер записи в MFT (соответствует полю <em>FILE record number</em> структуры <a href=\"http://ftp.kolibrios.org/users/Asper/docs/NTFS/ntfsdoc.html#concept_file_reference\" rel=\"nofollow noreferrer\">File Reference</a>)</p>\n\n<p><em>$I30</em> - указывает на индекс файлов в каталоге (<a href=\"http://ftp.kolibrios.org/users/Asper/docs/NTFS/ntfsdoc.html#id4758101\" rel=\"nofollow noreferrer\">один из типов индексов</a>)</p>\n\n<p>т.е. сообщение значит, что поврежден список файлов в каталоге с указанным номером</p>\n\n<hr>\n\n<p>Для того, чтобы узнать имя файла по его номеру записи в MFT, в Windows существует команда <strong>fsutil file queryfilenamebyid</strong>. Проблема в том, что эта команда требует полный ID файла вида <em>0x7500000000CFCD</em> (состоящий из номера записи и дополнительного однобайтового значения SequenceNumber, которое показывает, сколько раз данная запись была повторно использована), в то время как журнал программы проверки диска возвращает только частичный идентификатор вида <em>0x00000000CFCD</em> (только номер записи). Теоретически, для идентификации файла достаточно только номера записи, т.к. он представляет собой индекс массива. Дополнительный байт, как я понял, нужен для контроля правильности действий при обращении к повторно используемым записям, поэтому все \"высокоуровневные\" средства Windows, например WMI, используют полный идентификатор. </p>\n\n<p>Тем не менее, есть способ найти файл и по частичному идентификатору. Для этого понадобится утилита nfi.exe из пакета <a href=\"http://web.archive.org/web/20041206105853/http://support.microsoft.com/kb/253066/en-us\" rel=\"nofollow noreferrer\">Windows 2000 OEM Support Tools</a>. К сожалению, сей антиквариат более не доступен с официального сайта, однако на свой страх и риск его можно скачать здесь: <a href=\"https://yadi.sk/d/bLe0dRwl3TdVCB\" rel=\"nofollow noreferrer\">Oem3sr2s.zip</a>. Данная консольная утилита позволяет сделать дамп MFT указанного тома. \nИспользование:</p>\n\n<pre><code>nfi.exe (БукваДиска):&gt;filename.txt\n</code></pre>\n\n<p>Затем в полученном файле надо искать переведенное в десятичную систему значение номера записи из chkdsk. В результате будет найдено что-то такое (для каталога):</p>\n\n<pre><code>File 53197\n\n\\foo\\bar\\catalog\\\n\n    $STANDARD_INFORMATION (resident)\n\n    $FILE_NAME (resident)\n\n    $FILE_NAME (resident)\n\n    $INDEX_ROOT $I30 (resident)\n</code></pre>\n\n<hr>\n\n<p><strong>Примечания</strong></p>\n\n<ol>\n<li><p>Можно найти файл подбором, вызывайте в цикле команду, пока не получите <code>%ERRORLEVEL%</code> равный 0:</p>\n\n<pre><code>fsutil file queryfilenamebyid (БукваДиска):\\ 0xXX00000012CFCA\n</code></pre>\n\n<p>где XX изменяется в диапазоне от 00 до FF</p>\n\n<p>При наличии node.js это можно сделать следующим образом:</p>\n\n<pre><code>const spawn = require(\"child_process\").spawnSync;\n\nfor (var q=0; q&lt;256; ++q) {\n  var id = \"0x\" + (0+q.toString(16)).slice(-2) + \"00000003856B\";\n  var args = [\"file\", \"queryfilenamebyid\", \"h:\\\\\", id];\n\n  if(!spawn(\"fsutil\", args).status) {\n    console.log(id);\n    /* 866-я кодировка не считывается нормально, поэтому перезапускаем */\n    spawn(\"fsutil\", args, {stdio:'inherit'});\n  }\n}\n</code></pre></li>\n<li><p>Аналогом <code>nfi.exe</code> в Linux является утилита <a href=\"https://linux.die.net/man/8/ntfsls\" rel=\"nofollow noreferrer\"><code>ntfsls</code></a>, запущенная с ключом -i</p></li>\n</ol>\n"}