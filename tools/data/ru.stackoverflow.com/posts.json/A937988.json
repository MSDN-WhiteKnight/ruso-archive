{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1548740546,"last_edit_date":1548740546,"creation_date":1548740008,"answer_id":937988,"question_id":937449,"body":"<p>Когда пользователь открывает в проводнике несколько файлов, проводник создает несколько процессов примерно в один момент времени. Однако, от старта процесса до момента, когда окно будет готово к приему сообщений, проходит некоторое время. Поэтому нужно несколько модифицировать <a href=\"https://ru.stackoverflow.com/a/936446/240512\">способ с WM_COPYDATA</a>, чтобы он смог обработать эту ситуацию: добавить ожидание создания окна в основном процессе, избегать использования MessageBox, так как он блокирует выполнение, и т.д.</p>\n\n<p>Класс Application:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Data;\nusing System.Linq;\nusing System.Windows;\nusing System.Runtime.InteropServices;\nusing System.Diagnostics;\n\nnamespace WpfApp1\n{\n\n    public partial class App : Application\n    {\n\n        [DllImport(\"user32.dll\")]\n        public static extern IntPtr SendMessage(IntPtr hWnd, uint Msg, IntPtr wParam, ref COPYDATASTRUCT lParam);\n\n        [StructLayout(LayoutKind.Sequential)]\n        public struct COPYDATASTRUCT\n        {\n            public IntPtr dwData;\n            public int cbData;\n            public IntPtr lpData;\n        }\n\n        public const uint WM_COPYDATA = 0x004A;\n\n        private void Application_Startup(object sender, StartupEventArgs e)\n        {\n            string command = \"\";\n            string[] argv = Environment.GetCommandLineArgs();\n            if (argv.Length &gt; 1)\n                command = argv[1];\n\n            Process this_process = Process.GetCurrentProcess();\n            Process main_process;\n\n            //найти все процессы с таким же именем, запущенные ранее данного процесса\n            Process[] other_processes =\n                Process.GetProcessesByName(this_process.ProcessName)\n                .Where(pr =&gt; { return pr.Id != this_process.Id &amp;&amp; pr.StartTime &lt;= this_process.StartTime;})\n                .OrderBy((pr) =&gt; { return pr.StartTime; })\n                .ToArray();\n\n            //найти основной процесс\n            if (other_processes.Length &gt; 0) main_process = other_processes[0];\n            else return;\n\n            //ждем создания окна в основном процессе\n            IntPtr hWnd;\n            int c = 0;\n            while (true)\n            {\n                hWnd = main_process.MainWindowHandle;\n                if (hWnd != IntPtr.Zero) break;\n                System.Threading.Thread.Sleep(100);\n                c++;\n                if (c &gt; 10) { return; }\n            }\n\n            //отправляем команду\n            var cds = new COPYDATASTRUCT();\n            cds.dwData = (IntPtr)1;\n            cds.cbData = (command.Length + 1) * 2;\n            cds.lpData = Marshal.StringToHGlobalUni(command);\n            SendMessage(hWnd, WM_COPYDATA, IntPtr.Zero, ref cds);\n            Marshal.FreeHGlobal(cds.lpData);\n\n            //завершаем работу\n            Environment.Exit(0);    \n        }        \n    }\n}\n</code></pre>\n\n<p>MainWindow.xaml:</p>\n\n<pre><code>&lt;Window x:Class=\"WpfApp1.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"        \n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"400\" Width=\"600\" Loaded=\"Window_Loaded\"&gt;\n\n    &lt;Grid HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\" &gt;\n        &lt;TextBox HorizontalAlignment=\"Left\" Height=\"210\" Margin=\"10,46,0,0\"\n                 x:Name=\"tbFilename\"\n                 TextWrapping=\"Wrap\" Text=\"\" VerticalAlignment=\"Top\" Width=\"427\"/&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>MainWindow.xaml.cs</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Runtime.InteropServices;\nusing System.Windows.Interop;\n\nnamespace WpfApp1\n{\n    public partial class MainWindow : Window\n    {                     \n\n        //обработчик сообщений для окна\n        private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)\n        {\n            if (msg == App.WM_COPYDATA)\n            {\n                App.COPYDATASTRUCT data = new App.COPYDATASTRUCT();\n                data = (App.COPYDATASTRUCT)Marshal.PtrToStructure(lParam, data.GetType());\n                tbFilename.Text += Marshal.PtrToStringUni(data.lpData)+\";\";                \n            }\n\n            return IntPtr.Zero;\n        }\n\n        public MainWindow()\n        {\n            InitializeComponent();\n\n            string[] argv = Environment.GetCommandLineArgs();\n            if (argv.Length &gt; 1)\n                tbFilename.Text += argv[1] + \";\";            \n        }        \n\n\n        private void Window_Loaded(object sender, RoutedEventArgs e)\n        {\n            WindowInteropHelper h = new WindowInteropHelper(this);\n            HwndSource source = HwndSource.FromHwnd(h.Handle);\n            source.AddHook(new HwndSourceHook(WndProc));//регистрируем обработчик сообщений            \n        }\n    }\n}\n</code></pre>\n"}