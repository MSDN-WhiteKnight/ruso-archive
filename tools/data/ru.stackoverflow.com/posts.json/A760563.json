{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":2,"last_activity_date":1513697749,"creation_date":1513697749,"answer_id":760563,"question_id":760436,"body":"<blockquote>\n  <p>передача по ссылке даёт более короткий ассемблерный код</p>\n</blockquote>\n\n<p>В ассемблерном коде x86-64 clang, на который вы дали ссылку, разница между первым и вторым вариантом в следующем: </p>\n\n<p>В первом варианте срабатывает оптимизация и структура копируется из переданного аргументом адреса сразу на место возвращаемого значения. При возврате не требуется дополнительных действий.</p>\n\n<p>Во втором варианте такая оптимизация не применяется, и копирование структуры происходит два раза. Первый раз вызывающий код создает копию для передачи в функцию (за скобками данного кода), а второй раз - при возврате из функции.</p>\n\n<p>Второй вариант длиннее на одну строку из-за оператора <code>lea rsi, [rsp + 16]</code>, который как раз и вычисляет аргумент <em>source</em> для вызова <em>memcpy</em> (в первом случае это не нужно, так как он явно передан вызывающей функцией). Таким образом, сферически в вакууме, второй вариант не эффективен, из-за двойного копирования структуры и лишнего вычисления аргумента для <em>memcpy</em>.</p>\n\n<blockquote>\n  <p>какие есть ещё плюсы и минусы этих двух подходов, чтобы понимать, какой из них предпочесть?</p>\n</blockquote>\n\n<p>Я полагаю, в реальных программах об этом не надо заботиться. Оптимизирующий компилятор будет рассматривать не отдельные функции, а программу в целом, и выберет лучший вариант. Хотя второй вариант теоретически \"хуже\", в реальности компилятор обе функции просто превратит в inline (если на них не берутся указатели), и разницы никакой не будет. </p>\n"}