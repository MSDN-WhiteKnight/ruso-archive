{"tags":["c++","windows","dll","взлом"],"owner":{"reputation":138,"user_id":8453,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/d6d70bbe2546f9320426122f993aa1dd?s=128&d=identicon&r=PG","display_name":"SuperDimon007","link":"https://ru.stackoverflow.com/users/8453/superdimon007"},"is_answered":true,"view_count":341,"answer_count":2,"score":2,"last_activity_date":1544072642,"creation_date":1462910114,"last_edit_date":1463083502,"question_id":522218,"link":"https://ru.stackoverflow.com/questions/522218/%d0%a1%d1%82%d1%80%d1%83%d0%ba%d1%82%d1%83%d1%80%d0%b0-%d1%81%d0%b8%d1%81%d1%82%d0%b5%d0%bc%d0%bd%d1%8b%d1%85-dll-%d0%b1%d0%b8%d0%b1%d0%bb%d0%b8%d0%be%d1%82%d0%b5%d0%ba","title":"Структура системных DLL библиотек","body":"<p>Пускай в процессе A.exe есть функция</p>\n\n<pre><code>int _stdcall func(int a);\n</code></pre>\n\n<p>по адресу <code>0x1234</code>. Нам надо вызвать её из другого процесса. Делается это так</p>\n\n<pre><code>CreateRemoteThread(hProcess, 0, 0, (LPTHREAD_START_ROUTINE)0x1234, (void*)100, 0, 0);\n</code></pre>\n\n<p>В адресном пространстве A.exe начинает выполняться функция <code>func(100)</code> в отдельном потоке.\nТеперь я хочу вызвать системную функцию. Например, узнать виртуальный адрес программы, вызвав <code>GetModuleHandleA(NULL)</code>:</p>\n\n<pre><code>HMODULE hModule = GetModuleHandleA(\"kernel32.dll\");\nvoid *func = GetProcAddress(hModule, \"GetModuleHandleA\");\nHANDLE ThreadID = CreateRemoteThread(hProcess, 0, 0, (LPTHREAD_START_ROUTINE)func, 0, 0, 0);\nWaitForSingleObject(ThreadID, INFINITE);\nvoid *baseAddr;\nGetExitCodeThread(ThreadID, (LPDWORD)&amp;baseAddr);\n</code></pre>\n\n<p>Как получается, что функция <code>GetModuleHandleA</code> имеет одинаковый адрес в разных процессах? Всегда ли такой код будет работать корректно?<br>\nПроверил, что во всех процессах адрес библиотеки kernel32 имеет одинаковый адрес. Скомпилировал программу, у которой базовый адрес совпадает с адресом библиотеки. Приложение не запускалось с кодом 0xc0000018 - конфликт указанного диапазона адресов и адресного пространства.</p>\n"}