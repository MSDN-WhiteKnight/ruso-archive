{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1541482929,"creation_date":1541482929,"answer_id":902777,"question_id":901703,"body":"<p>В первом примере вот эта строка сохраняет данные аудио в массив data:</p>\n\n<pre><code>alcCaptureSamples(dev[1], data, val);\n</code></pre>\n\n<p>Длительность звука в массиве рассчитывается по формуле </p>\n\n<blockquote>\n  <p>t = (N <sub>Samples</sub>) / (SampleRate * N <sub>Channels</sub>)</p>\n</blockquote>\n\n<p>Размер данных в массиве (в байтах) рассчитывается по формуле:</p>\n\n<blockquote>\n  <p>N <sub>Bytes</sub> = N <sub>Samples</sub> * (BitsPerSample / 8)</p>\n</blockquote>\n\n<p>У вас N <sub>Channels</sub> = 1 (моно), SampleRate = 22050, BitsPerSample = 16, получаем:</p>\n\n<pre><code>t = val / 22050;\n\nN_bytes = val * 2;\n</code></pre>\n\n<p>Вам нужно объявить массив, размером достаточный для хранения требуемой длительности аудио, допустим, saved_data. После получения каждой порции через alcCaptureSamples накапливаете данные в этом массиве (просто через memcpy копируете в конец массива и сохраняете суммарный размер). Когда длительность достигает требуемого значения, останавливаете цикл, делаете свою обработку, а потом массив с накопленными данными передаете в alBufferData и выполняете код воспроизведения:</p>\n\n<pre><code>alSourceUnqueueBuffers(source, 1, &amp;buf);\nalBufferData(buf, AL_FORMAT_MONO16, saved_data, N_bytes, 22050);\nalSourceQueueBuffers(source, 1, &amp;buf);\n</code></pre>\n\n<p>Есть вот такой <a href=\"https://ru.stackoverflow.com/a/794133/240512\">пример записи звука на чистом WASAPI</a>, возможно будет полезен. Правда, там сохранение сразу в файл сделано, а не в массив.</p>\n"}