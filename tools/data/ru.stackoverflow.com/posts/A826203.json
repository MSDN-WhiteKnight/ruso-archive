{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1526018005,"creation_date":1526018005,"answer_id":826203,"question_id":826046,"body":"<p>Можно использовать класс <em>HttpListener</em> в приложении и <em>XMLHttpRequest</em>-запросы в браузерном javascript. Допустим, мы хотим создать веб-интерфейс для своего приложения, который может выполнять определенные команды. Для этого нам нужно создать <em>HttpListener</em>, привязанный к какому-то локальному URL, в фоновом потоке. Этот поток будет разбирать параметры URL, выполнять необходимые действия и отправлять ответ. На клиентской стороне в браузерном JS будем считывать данные из input и отправлять асинхронный запрос к нашему серверу с соответствующим параметром. </p>\n\n<p>В примере ниже сервер реагирует на два URL: на <code>/myapp/index.aspx</code> отдается веб-интерфейс, а <code>/myapp/command.aspx?command=...&amp;argument=...</code> используется для отправки команд. Для того, чтобы все это взлетело, приложение должно запускаться либо с учетной записи администратора, либо нужно предварительно открыть порт для простых пользователей выполнением следующей команды в командной строке администратора:</p>\n\n<pre><code>netsh http add urlacl url=http://+:8080/ sddl=D:(A;;GX;;;S-1-2-0)\n</code></pre>\n\n<p>(Идентификатор S-1-2-0 соответствует группе всех локальных пользователей). Также возможно понадобится добавить программу в исключения фаервола и т.п. Для отладки можно заменить + на localhost, тогда можно будет работать с локального компьютера без необходимости установки ACL.</p>\n\n<p>Код C#:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Net;\n\nnamespace WindowsFormsTest1\n{    \n    public partial class Form1 : Form\n    {\n        string htmlString = System.IO.File.ReadAllText(\"frontend.html\");\n\n        void Print(string text)\n        {\n            if(text==null)text = \"\";\n            this.BeginInvoke((MethodInvoker)(() =&gt;\n            {\n                textBox1.Text += text + Environment.NewLine;\n            }));\n        }\n\n        void CloseWindow()\n        {            \n            this.BeginInvoke((MethodInvoker)(() =&gt;\n            {\n                this.Close();\n            }));\n        }\n\n        //метод для серверного потока\n        public void RunServer()\n        {            \n\n            // Create a listener.\n            HttpListener listener = new HttpListener();\n            // Add the prefixes.\n            listener.Prefixes.Add(\"http://+:8080/myapp/\");\n            listener.Start();\n\n            while (true)\n            {\n                HttpListenerContext context = listener.GetContext();\n                HttpListenerRequest request = context.Request;\n                string url = request.RawUrl;                                 \n\n                HttpListenerResponse response = context.Response;\n                // Construct a response.\n\n                if (url.StartsWith(\"/myapp/index.aspx\") == false &amp;&amp; url.StartsWith(\"/myapp/command.aspx\") == false)\n                {\n                    //вернуть ошибку при неверном URL\n                    response.StatusCode = 404;\n                    response.StatusDescription = \"Not found\";\n                    response.Close();\n                    continue;\n                }\n\n                //разбираем параметры запроса\n                string command = request.QueryString[\"command\"];\n                string argument = request.QueryString[\"argument\"];\n                string responceString = \"\";\n\n                if (url.StartsWith(\"/myapp/index.aspx\"))\n                {\n                    responceString = htmlString;  //вернуть веб-интерфейс                  \n                }\n                else\n                {\n                    //обработать команду\n                    if(String.IsNullOrEmpty(command)) command = \"help\";\n                    if (argument == null) argument = \"\";\n                    switch (command)\n                    {\n                        case \"print\": Print(argument); responceString = \"OK\"; break;\n                        case \"help\": responceString = \"Commands: print, close, help\"; break;\n                        case \"close\": CloseWindow(); responceString = \"OK\"; break;\n                        default: responceString = \"Unknown command\"; break;\n                    }\n                }\n\n                byte[] buffer = System.Text.Encoding.UTF8.GetBytes(responceString);\n\n                // Get a response stream and write the response to it.\n                response.Headers.Add(\"Expires: Tue, 01 Jul 2000 06:00:00 GMT\");\n                response.Headers.Add(\"Cache-Control: max-age=0, no-cache, must-revalidate\");\n                response.ContentLength64 = buffer.Length;\n                System.IO.Stream output = response.OutputStream;\n                System.IO.BinaryWriter wr = new System.IO.BinaryWriter(output);\n                using (wr)\n                {\n                    wr.Write(buffer);\n                }\n\n            }            \n        }\n\n        public Form1()\n        {\n            InitializeComponent();\n\n            //запускаем серверный поток\n            System.Threading.Thread th = new System.Threading.Thread(RunServer);\n            th.IsBackground = true;\n            th.Start();            \n        }            \n    }    \n}\n</code></pre>\n\n<p>Файл frontend.html:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;script type=\"text/javascript\"&gt;\n\nfunction reqReadyStateChange() {\n\n    if (window.xhr.readyState == 4) {   \n        var status = window.xhr.status; \n\n        if (status == 200) {\n            document.getElementById('ta').value = window.xhr.responseText;\n        } else {\n            document.getElementById('ta').value = window.xhr.statusText;\n        }\n    }\n}\n\nfunction request(url){\n    document.getElementById('ta').value = '';\n    window.xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.onreadystatechange = reqReadyStateChange;\n    xhr.send(); \n}\n\n&lt;/script&gt;&lt;/head&gt;\n&lt;body&gt;&lt;form&gt; \n  Command: &lt;input type=\"text\" id=\"inpCommand\"/&gt;&lt;br/&gt;\n  Argument: &lt;input type=\"text\" id=\"inpArgument\"/&gt;&lt;br/&gt;\n  &lt;input type=\"button\" \n         onClick=\"request('/myapp/command.aspx?command='+document.getElementById('inpCommand').value+'&amp;amp;argument='+document.getElementById('inpArgument').value);\" \n         value=\"Execute\"/&gt;\n  &lt;br/&gt;&lt;br/&gt;\n  &lt;textarea id=\"ta\" rows = \"10\" cols = \"45\"&gt;&lt;/textarea&gt;\n&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n"}