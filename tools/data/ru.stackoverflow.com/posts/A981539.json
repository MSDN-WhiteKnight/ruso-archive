{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":2,"last_activity_date":1557900012,"creation_date":1557900012,"answer_id":981539,"question_id":981332,"body":"<p>Как вариант, создать новый рабочий стол и запустить процесс в нем:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Runtime.InteropServices;\n\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        const uint NORMAL_PRIORITY_CLASS = 0x0020;\n\n        [DllImport(\"user32.dll\", SetLastError = true)]\n        static extern IntPtr CreateDesktop(string lpszDesktop, IntPtr lpszDevice, IntPtr pDevmode, int dwFlags, uint dwDesiredAccess, IntPtr lpsa);\n\n        [DllImport(\"user32.dll\")]\n        static extern bool CloseDesktop(IntPtr handle);\n\n        [DllImport(\"kernel32.dll\", SetLastError = true)]\n        [return: MarshalAs(UnmanagedType.Bool)]\n        static extern bool CloseHandle(IntPtr hObject);\n\n        enum DESKTOP_ACCESS : uint\n        {\n            DESKTOP_NONE = 0,\n            DESKTOP_READOBJECTS = 0x0001,\n            DESKTOP_CREATEWINDOW = 0x0002,\n            DESKTOP_CREATEMENU = 0x0004,\n            DESKTOP_HOOKCONTROL = 0x0008,\n            DESKTOP_JOURNALRECORD = 0x0010,\n            DESKTOP_JOURNALPLAYBACK = 0x0020,\n            DESKTOP_ENUMERATE = 0x0040,\n            DESKTOP_WRITEOBJECTS = 0x0080,\n            DESKTOP_SWITCHDESKTOP = 0x0100,\n\n            GENERIC_ALL = (DESKTOP_READOBJECTS | DESKTOP_CREATEWINDOW | DESKTOP_CREATEMENU |\n                            DESKTOP_HOOKCONTROL | DESKTOP_JOURNALRECORD | DESKTOP_JOURNALPLAYBACK |\n                            DESKTOP_ENUMERATE | DESKTOP_WRITEOBJECTS | DESKTOP_SWITCHDESKTOP),\n        }\n\n        [DllImport(\"kernel32.dll\", SetLastError = true, CharSet = CharSet.Unicode)]\n        static extern bool CreateProcess(\n            string lpApplicationName,\n            string lpCommandLine,\n            IntPtr lpProcessAttributes,\n            IntPtr lpThreadAttributes,\n            bool bInheritHandles,\n            uint dwCreationFlags,\n            IntPtr lpEnvironment,\n            string lpCurrentDirectory,\n            [In] ref STARTUPINFO lpStartupInfo,\n            out PROCESS_INFORMATION lpProcessInformation);\n\n        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n        struct STARTUPINFO\n        {\n            public Int32 cb;\n            public string lpReserved;\n            public string lpDesktop;\n            public string lpTitle;\n            public Int32 dwX;\n            public Int32 dwY;\n            public Int32 dwXSize;\n            public Int32 dwYSize;\n            public Int32 dwXCountChars;\n            public Int32 dwYCountChars;\n            public Int32 dwFillAttribute;\n            public Int32 dwFlags;\n            public Int16 wShowWindow;\n            public Int16 cbReserved2;\n            public IntPtr lpReserved2;\n            public IntPtr hStdInput;\n            public IntPtr hStdOutput;\n            public IntPtr hStdError;\n        }\n\n        [StructLayout(LayoutKind.Sequential)]\n        struct PROCESS_INFORMATION\n        {\n            public IntPtr hProcess;\n            public IntPtr hThread;\n            public int dwProcessId;\n            public int dwThreadId;\n        }\n\n        static void Main(string[] args)\n        {\n            IntPtr hDesktop = CreateDesktop(\"NewDesktop\", IntPtr.Zero, IntPtr.Zero, 0,\n                (uint)DESKTOP_ACCESS.GENERIC_ALL, IntPtr.Zero);\n            if (hDesktop == IntPtr.Zero) throw new System.ComponentModel.Win32Exception(Marshal.GetLastWin32Error());\n\n            bool retValue;\n            string Application = \"...\";\n            string CommandLine = \"...\";\n            PROCESS_INFORMATION pInfo = new PROCESS_INFORMATION();\n            STARTUPINFO sInfo = new STARTUPINFO();\n            sInfo.cb = Marshal.SizeOf(sInfo);\n            sInfo.lpDesktop = \"NewDesktop\";            \n\n            retValue = CreateProcess(Application, CommandLine,IntPtr.Zero, IntPtr.Zero, false, NORMAL_PRIORITY_CLASS,\n            IntPtr.Zero, null, ref sInfo, out pInfo);\n            if(retValue == false) throw new System.ComponentModel.Win32Exception(Marshal.GetLastWin32Error());\n\n            //...            \n\n            CloseHandle(pInfo.hProcess);\n            CloseHandle(pInfo.hThread);\n            CloseDesktop(hDesktop);\n        }\n    }\n}\n</code></pre>\n"}