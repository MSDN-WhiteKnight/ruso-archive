{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1548052870,"creation_date":1548052870,"answer_id":934639,"question_id":934493,"body":"<p>Многие программы имеют сохраненное в ресурсах внутреннее имя, можно искать по нему.</p>\n\n<pre><code>static bool ProcessCompareInternalName(Process p,string match)\n{\n    try\n    {\n        string internalname = p.MainModule.FileVersionInfo.InternalName;\n        if (internalname.ToLower() == match.ToLower()) return true;                \n        else  return false;\n    }\n    catch (System.ComponentModel.Win32Exception)\n    {\n        return false;\n    }\n}\n\nstatic void Main(string[] args)\n{            \n    var allproc = Process.GetProcesses();\n\n    foreach (Process p in allproc)\n    {\n        if (ProcessCompareInternalName(p, \"program.exe\"))\n        {\n            p.Kill();\n        }\n    }\n\n}\n</code></pre>\n\n<p>Если у программы нет ресурсов с информацией о версии, ничего не остается, кроме как сравнивать по бинарным сигнатурам или считать что-то типа CRC32 (Windows позволяет открыть на чтение exe-файлы запущенных процессов, так что это вполне можно реализовать). </p>\n"}