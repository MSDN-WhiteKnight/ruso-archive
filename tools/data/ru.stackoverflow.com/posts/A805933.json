{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1522235555,"last_edit_date":1522235555,"creation_date":1522234408,"answer_id":805933,"question_id":805644,"body":"<p>Операции с файлами по умолчанию в Windows не заносятся в журнал событий (так как при этом бы туда сыпалось слишком много неинформативных записей). Их логирование можно включить, как описано <a href=\"https://superuser.com/questions/402792/can-i-log-file-operations-create-modify-delete-in-windows\">здесь</a>. Тогда информация о работе с файлами будет попадать в журнал аудита, откуда ее можно <a href=\"https://ru.stackoverflow.com/questions/612571/%D0%9F%D0%BE%D0%BB%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D1%82%D0%B5%D0%BA%D1%81%D1%82%D0%B0-%D1%81%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D0%B9-%D0%B8%D0%B7-event-loga-%D0%B2-windows\">считать с помощью WinAPI</a>.</p>\n\n<p>Однако, для NTFS-дисков кое-какую информацию об операциях с файлами можно получить из USN-журнала тома, без необходимости в изменении настроек системы. Недостаток способа в том, что записей там много, их считывание идет медленно, а отфильтровать их можно только последовательным проходом всего журнала до необходимого времени. Код для вывода первых 50 записей из USN-журнала (для запуска требуются права администратора):</p>\n\n<pre><code>#include &lt;Windows.h&gt;\n#include &lt;WinIoCtl.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;locale.h&gt;\n#include &lt;stdio.h&gt;\n\n#define BUF_LEN 4096\n\n//вывод содержимого журнала USN для тома\nvoid PrintJournal(TCHAR* volume,UINT max_count){\n   HANDLE hVol;\n   CHAR Buffer[BUF_LEN];\n\n   USN_JOURNAL_DATA JournalData;\n   READ_USN_JOURNAL_DATA ReadData = {0, 0xFFFFFFFF, FALSE, 0, 0};\n   PUSN_RECORD UsnRecord; \n   SYSTEMTIME st;\n   int c=0;\n\n   DWORD dwBytes;\n   DWORD dwRetBytes;\n\n   hVol = CreateFile( volume, \n               GENERIC_READ | GENERIC_WRITE, \n               FILE_SHARE_READ | FILE_SHARE_WRITE,\n               NULL,\n               OPEN_EXISTING,\n               0,\n               NULL);\n\n   if( hVol == INVALID_HANDLE_VALUE )\n   {\n      printf(\"CreateFile failed (%d)\\n\", GetLastError());\n      goto End;\n   }\n\n   if( !DeviceIoControl( hVol, \n          FSCTL_QUERY_USN_JOURNAL, \n          NULL,\n          0,\n          &amp;JournalData,\n          sizeof(JournalData),\n          &amp;dwBytes,\n          NULL) )\n   {\n      printf( \"Query journal failed (%d)\\n\", GetLastError());\n      goto End;\n   }\n\n   ReadData.UsnJournalID = JournalData.UsnJournalID;\n\n   printf( \"Journal ID: 0x%I64x\\n\", JournalData.UsnJournalID );\n   printf( \"FirstUsn: 0x%I64x\\n\\n\", JournalData.FirstUsn );\n\n   while(true)\n   {\n      memset( Buffer, 0, BUF_LEN );\n\n      if( !DeviceIoControl( hVol, \n            FSCTL_READ_USN_JOURNAL, \n            &amp;ReadData,\n            sizeof(ReadData),\n            &amp;Buffer,\n            BUF_LEN,\n            &amp;dwBytes,\n            NULL) )\n      {\n         printf( \"Read journal failed (%d)\\n\", GetLastError());\n         goto End;\n      }\n\n      dwRetBytes = dwBytes - sizeof(USN);\n\n      // Find the first record\n      UsnRecord = (PUSN_RECORD)(((PUCHAR)Buffer) + sizeof(USN));  \n\n      printf( \"****************************************\\n\");\n\n      // This loop could go on for a long time, given the current buffer size.\n      while( dwRetBytes &gt; 0 )\n      {\n          //получаем время записи...\n         if(FileTimeToSystemTime((FILETIME*)&amp;(UsnRecord-&gt;TimeStamp),&amp;st)==false){\n             printf( \"\\nfailed to get time\\n\");\n             goto End;\n         }      \n\n         //выводим данные\n         printf( \"%4d.%02d.%02d %2d:%02d\\n\",(int)st.wYear,(int)st.wMonth,(int)st.wDay,(int)st.wHour,(int)st.wMinute); //время записи\n         printf(\"Reference number: 0x%I64x\\n\", UsnRecord-&gt;FileReferenceNumber ); //ID файла\n         printf(\"File name: %.*S\\n\", UsnRecord-&gt;FileNameLength/2, UsnRecord-&gt;FileName ); //имя файла         \n\n         printf( \"Reason: 0x%x\", UsnRecord-&gt;Reason ); //причина изменений\n         if( (UsnRecord-&gt;Reason &amp; USN_REASON_FILE_DELETE)&gt;0)printf( \" (File deleted)\" );    \n         if( (UsnRecord-&gt;Reason &amp; USN_REASON_FILE_CREATE)&gt;0)printf( \" (File created)\" );\n         if( (UsnRecord-&gt;Reason &amp; USN_REASON_DATA_OVERWRITE)&gt;0)printf( \" (Data overwrite)\" );\n         if( (UsnRecord-&gt;Reason &amp; USN_REASON_DATA_EXTEND)&gt;0)printf( \" (Data extend)\" );\n         printf( \"\\n\\n\" );       \n         c++;\n         if(c&gt;=max_count) goto End;//если прочитано указанное количество записей, выходим\n\n         dwRetBytes -= UsnRecord-&gt;RecordLength;\n\n         // Find the next record\n         UsnRecord = (PUSN_RECORD)(((PCHAR)UsnRecord) + \n                  UsnRecord-&gt;RecordLength); \n      }\n      // Update starting USN for next call\n      ReadData.StartUsn = *(USN *)&amp;Buffer; \n   }\n\n   End:\n   CloseHandle(hVol);  \n}\n\nint wmain(int argc, wchar_t **argv)\n{\n    setlocale(LC_ALL,\"Russian\");    \n\n    PrintJournal(TEXT(\"\\\\\\\\.\\\\c:\"),50);\n\n    getchar();\n    return 0;\n}\n</code></pre>\n\n<p>Пример вывода:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Journal ID: 0x1d213cf6845e9c2\nFirstUsn: 0x160b40000\n\n****************************************\n2018.03.25  6:01\nReference number: 0xb80000000256ed\nFile name: GetStateWorker20180325.log\nReason: 0x2 (Data extend)\n\n2018.03.25  6:02\nReference number: 0x21f0000000356fb\nFile name: cache.dat\nReason: 0x80000200 (File deleted)\n\n2018.03.25  6:02\nReference number: 0x78000000038ae2\nFile name: asw-8d99b330-1115-4672-8629-c820c1720c18.tmp\nReason: 0x1103 (File created) (Data overwrite) (Data extend)\n\n2018.03.25  6:02\nReference number: 0x78000000038ae2\nFile name: cache.dat\nReason: 0x2103 (File created) (Data overwrite) (Data extend)\n\n2018.03.25  6:02\nReference number: 0x78000000038ae2\nFile name: cache.dat\nReason: 0xa103 (File created) (Data overwrite) (Data extend)\n\n2018.03.25  6:02\nReference number: 0x78000000038ae2\nFile name: cache.dat\nReason: 0x8000a103 (File created) (Data overwrite) (Data extend)\n</code></pre>\n\n<p><a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa365736(v=vs.85).aspx\" rel=\"nofollow noreferrer\">MSDN - Walking a Buffer of Change Journal Records</a></p>\n"}