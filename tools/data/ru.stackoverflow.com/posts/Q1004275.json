{"tags":["c#"],"owner":{"reputation":2728,"user_id":212981,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/wtxks.jpg?s=128&g=1","display_name":"Andrei Khotko","link":"https://ru.stackoverflow.com/users/212981/andrei-khotko"},"is_answered":true,"view_count":97,"accepted_answer_id":1005370,"answer_count":2,"score":2,"last_activity_date":1563781641,"creation_date":1563449470,"last_edit_date":1563525472,"question_id":1004275,"link":"https://ru.stackoverflow.com/questions/1004275/%d0%a1%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-%d0%bf%d0%b5%d1%80%d0%b5%d0%bc%d0%b5%d0%bd%d0%bd%d0%be%d0%b9-%d0%be%d0%bf%d1%80%d0%b5%d0%b4%d0%b5%d0%bb%d0%b5%d0%bd%d0%bd%d0%be%d0%b3%d0%be-%d1%82%d0%b8%d0%bf%d0%b0-%d0%b2-%d0%b7%d0%b0%d0%b2%d0%b8%d1%81%d0%b8%d0%bc%d0%be%d1%81%d1%82%d0%b8-%d0%be%d1%82-id","title":"Создание переменной определенного типа в зависимости от id","body":"<p>Есть абстрактный тип <code>Data</code>, от него наследуются конкретные типы <code>DataA</code>, <code>DataB</code>, <code>DataC</code> и т.д. (по хорошему, в моей задаче <code>DataA</code>, <code>DataB</code>, ... - это структуры, а не классы, поэтому их не может объединять абстрактный тип, но для простоты пусть это будут классами). У каждого типа <code>Data</code> есть свой <code>id</code> [0, 255]. Необходимо реализовать метод, который будет возвращать <code>Data</code> в зависимости от <code>id</code>:</p>\n\n<pre><code>public Data CreateDataInstance(int id);\n</code></pre>\n\n<p>Если решать задачу в лоб, то получится что-то такое:</p>\n\n<pre><code>public Data CreateDataInstance(int id)\n{\n    switch (id)\n    {\n        case 0:\n            return new DataA();\n        case 1:\n            return new DataB();\n        //...\n        case 255:\n            return new DataXXX();\n        default:\n            return null;\n    }\n}\n</code></pre>\n\n<p>Мне этот большой <code>switch</code> не очень нравится, потому что потом в случае изменения кода придется менять этот <code>switch/case</code>. Мне это все напоминает <em>фабричный метод</em>, но вот уже долго мучаюсь и никак не могу допереть, как его здесь применить, чтобы избавиться от switch/case. </p>\n\n<p>В момент написания вопроса появилась идея создать все типы фабрик при запуске программы и запихать их в массив или список, и по <code>id</code> их доставать и создавать нужный <code>Data</code>. Но, может быть, есть более элегантный метод?</p>\n\n<p><strong>UPD.</strong> Решил вопрос с помощью фабрики. Теперь возник следующий вопрос: вот у меня есть список <code>List&lt;Data&gt;</code>. Как теперь, зная <code>Data.id</code>, совершить восходящее преобразование от общего <code>Data</code> к конкретному <code>DataX</code>? Неужели <code>switch/case</code> не избежать?</p>\n\n<p><strong>UPD2.</strong> Есть подозрение, что у меня не все в порядке с архитектурой приложения</p>\n"}