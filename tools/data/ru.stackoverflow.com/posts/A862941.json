{"owner":{"reputation":16068,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":2,"last_activity_date":1533118912,"creation_date":1533118912,"answer_id":862941,"question_id":860084,"body":"<p>Вид строки заголовка и рамки у окна полностью определяется Windows. Если вы хотите его изменить, нужно реализовать их отображение самостоятельно. Это можно сделать, например, обработкой сообщения WM_NCPAINT, как <a href=\"https://ru.stackoverflow.com/questions/649179/%D0%9A%D0%B0%D0%BA-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B8%D1%82%D1%8C-%D1%86%D0%B2%D0%B5%D1%82-%D1%84%D1%80%D0%B5%D0%B9%D0%BC%D0%B0/652269#652269\">здесь</a>. Но можно попробовать и вот так:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Text;\nusing System.Windows.Forms;    \n\n\nnamespace WindowsFormsTest\n{\n    public partial class Form1 : Form\n    {\n        public const int WM_NCLBUTTONDOWN = 0xA1;\n        public const int HT_CAPTION = 0x2;\n\n        private const int HTLEFT = 10, HTRIGHT = 11, HTTOP = 12,  HTTOPLEFT = 13,\n        HTTOPRIGHT = 14, HTBOTTOM = 15, HTBOTTOMLEFT = 16, HTBOTTOMRIGHT = 17;\n\n        const int sizew = 5;\n        const int htitle = 26;\n\n        Rectangle TopRc { get { return new Rectangle(0, 0, this.ClientSize.Width, sizew); } }\n        Rectangle LeftRc { get { return new Rectangle(0, 0, sizew, this.ClientSize.Height); } }\n        Rectangle BottomRc { get { return new Rectangle(0, this.ClientSize.Height - sizew, this.ClientSize.Width, sizew); } }\n        Rectangle RightRc { get { return new Rectangle(this.ClientSize.Width - sizew, 0, sizew, this.ClientSize.Height); } }\n\n        Rectangle TopLeft { get { return new Rectangle(0, 0, sizew, sizew); } }\n        Rectangle TopRight { get { return new Rectangle(this.ClientSize.Width - sizew, 0, sizew, sizew); } }\n        Rectangle BottomLeft { get { return new Rectangle(0, this.ClientSize.Height - sizew, sizew, sizew); } }\n        Rectangle BottomRight { get { return new Rectangle(this.ClientSize.Width - sizew, this.ClientSize.Height - sizew, sizew, sizew); } }\n\n\n        [System.Runtime.InteropServices.DllImportAttribute(\"user32.dll\")]\n        public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);\n        [System.Runtime.InteropServices.DllImportAttribute(\"user32.dll\")]\n        public static extern bool ReleaseCapture();\n\n\n        public Form1()\n        {\n            InitializeComponent();\n            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;            \n            this.DoubleBuffered = true;\n            this.SetStyle(ControlStyles.ResizeRedraw, true);\n\n            Label labelTitle = new Label();\n            labelTitle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)\n            | System.Windows.Forms.AnchorStyles.Right)));            \n            labelTitle.Location = new System.Drawing.Point(sizew + htitle, sizew);\n            labelTitle.Name = \"labelTitle\";\n            labelTitle.Size = new System.Drawing.Size(this.Width - htitle * 2 - sizew - 6, htitle);            \n            labelTitle.Text = this.Text;\n            labelTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;\n            labelTitle.MouseDown += new System.Windows.Forms.MouseEventHandler(this.label1_MouseDown);\n            this.Controls.Add(labelTitle);\n\n            Button bClose = new Button();\n            bClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));\n            bClose.Location = new System.Drawing.Point(this.Width - htitle - sizew, sizew);\n            bClose.Name = \"bClose\";\n            bClose.Size = new System.Drawing.Size(htitle, htitle);            \n            bClose.Text = \"X\";\n            bClose.UseVisualStyleBackColor = true;\n            bClose.Click += new System.EventHandler(this.button2_Click);\n            this.Controls.Add(bClose);\n\n            Icon icon = this.Icon;\n            Bitmap bmp = icon.ToBitmap();\n            PictureBox pbox = new PictureBox();\n            pbox.Location = new Point(sizew, sizew);\n            pbox.Image = bmp;\n            pbox.SizeMode = PictureBoxSizeMode.Zoom;\n            pbox.Size = new Size(htitle, htitle);\n            this.Controls.Add(pbox);\n        }\n\n\n\n        protected override void OnPaint(PaintEventArgs e) \n        {\n            e.Graphics.FillRectangle(Brushes.Gray, TopRc);\n            e.Graphics.FillRectangle(Brushes.Gray, LeftRc);\n            e.Graphics.FillRectangle(Brushes.Gray, RightRc);\n            e.Graphics.FillRectangle(Brushes.Gray, BottomRc);\n        }\n\n\n        protected override void WndProc(ref Message message)\n        {\n            base.WndProc(ref message);\n\n            if (message.Msg == 0x84) // WM_NCHITTEST\n            {\n                var cursor = this.PointToClient(Cursor.Position);\n\n                if (TopLeft.Contains(cursor)) message.Result = (IntPtr)HTTOPLEFT;\n                else if (TopRight.Contains(cursor)) message.Result = (IntPtr)HTTOPRIGHT;\n                else if (BottomLeft.Contains(cursor)) message.Result = (IntPtr)HTBOTTOMLEFT;\n                else if (BottomRight.Contains(cursor)) message.Result = (IntPtr)HTBOTTOMRIGHT;\n\n                else if (TopRc.Contains(cursor)) message.Result = (IntPtr)HTTOP;\n                else if (LeftRc.Contains(cursor)) message.Result = (IntPtr)HTLEFT;\n                else if (RightRc.Contains(cursor)) message.Result = (IntPtr)HTRIGHT;\n                else if (BottomRc.Contains(cursor)) message.Result = (IntPtr)HTBOTTOM;\n            }\n        }\n\n\n        private void label1_MouseDown(object sender, MouseEventArgs e)\n        {\n            if (e.Button == MouseButtons.Left)\n            {\n                ReleaseCapture();\n                SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);\n            }\n        }\n\n        private void button2_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n    }\n\n}\n</code></pre>\n\n<p>Источники:</p>\n\n<p><a href=\"https://www.codeproject.com/Articles/11114/Move-window-form-without-Titlebar-in-C\" rel=\"nofollow noreferrer\">Move window/form without Titlebar in C# - CodeProject</a></p>\n\n<p><a href=\"https://stackoverflow.com/a/32261547/8674428\">How to move and resize a form without a border</a></p>\n"}