{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1512401850,"creation_date":1512401850,"answer_id":753705,"question_id":752276,"body":"<blockquote>\n  <p>При подключении нового USB устройства появляются два девайса - USB\n  Mass Storage Device и Disk Drive. Какое из включать/выключать, чтобы\n  USB устройство правильно отключилось?</p>\n</blockquote>\n\n<p>Я полагаю, USB Mass Storage Device, т.к. Disk Drive является для него дочерним устройством, и отключается автоматически</p>\n\n<blockquote>\n  <p>Как отобразить ВСЕ свойства, которые есть в Device Manager'e?</p>\n</blockquote>\n\n<p>Не знаю насчет \"все\", но довольно много свойств можно получить с помощью Setup API. Функция на C++ для вывода всех свойств по заданному ID устройства:\n</p>\n\n<pre><code>#pragma comment(lib,\"Setupapi.lib\")\n\n#include &lt;Windows.h&gt;\n#include &lt;Setupapi.h&gt;\n#include &lt;winusb.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;Devpkey.h&gt;\n#include &lt;iostream&gt;\n\nvoid ErrorMes(LPTSTR lpszFunction) \n{ \n    // Retrieve the system error message for the last-error code\n\n    LPVOID lpMsgBuf;\n    LPVOID lpDisplayBuf;\n    DWORD dw = GetLastError(); \n\n    FormatMessage(\n        FORMAT_MESSAGE_ALLOCATE_BUFFER | \n        FORMAT_MESSAGE_FROM_SYSTEM |\n        FORMAT_MESSAGE_IGNORE_INSERTS,\n        NULL,\n        dw,\n        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n        (LPTSTR) &amp;lpMsgBuf,\n        0, NULL );\n\n    // Display the error message and exit the process\n\n    lpDisplayBuf = (LPVOID)LocalAlloc(LMEM_ZEROINIT, \n        (lstrlen((LPCTSTR)lpMsgBuf) + lstrlen((LPCTSTR)lpszFunction) + 40) * sizeof(TCHAR)); \n    wprintf(L\"%s failed with error %d: %s\", \n        lpszFunction, dw, lpMsgBuf);     \n\n    LocalFree(lpMsgBuf);\n    LocalFree(lpDisplayBuf);\n\n}\n\n\n/*Вывод информации об устройстве с указанным InstanceID*/\nBOOL PrintDevice(wchar_t* id)\n{\n    unsigned index;\n    HDEVINFO hDevInfo;\n    SP_DEVINFO_DATA DeviceInfoData;\n    TCHAR id_upper[1024]=L\"\";\n    TCHAR buf[1024]=L\"\";    \n    DEVPROPTYPE dpt=0;  \n    DEVPROPKEY arr[100];\n    DWORD count=0;\n\n    for(int i=0;i&lt;wcslen(id);i++){\n        id_upper[i]=toupper(id[i]);//преобразование в заглавные буквы\n    }       \n\n    // List all connected devices\n    hDevInfo = SetupDiGetClassDevs(NULL, NULL, NULL, DIGCF_PRESENT | DIGCF_ALLCLASSES);\n    for (index = 0; ; index++) {\n        DeviceInfoData.cbSize = sizeof(DeviceInfoData);\n        if (!SetupDiEnumDeviceInfo(hDevInfo, index, &amp;DeviceInfoData)) {\n            return FALSE;     // no match\n        }\n\n        BOOL res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                        &amp;DEVPKEY_Device_InstanceId,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n            if(res==FALSE)continue; \n\n\n        if(wcscmp(buf,id_upper)==0){\n            //устройство найдено\n            res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                        &amp;DEVPKEY_Device_DeviceDesc,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n\n            //вывод названия устройства\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n            else wprintf(L\"* %s's properties: *\\n\\n \",buf); \n\n            //получение свойств\n            res=SetupDiGetDevicePropertyKeys(hDevInfo,&amp;DeviceInfoData,arr,100,&amp;count,0);\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDevicePropertyKeys\");\n\n            for(int i=0;i&lt;count;i++)//вывод всех свойств\n            {\n                res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                    &amp;arr[i],&amp;dpt,(PBYTE)buf,1000,NULL,0);//запрос свойства\n\n                if(res==FALSE){ErrorMes(L\"SetupDiGetDeviceProperty\");continue;} \n\n                //вывод DEVPROPKEY\n                wprintf(L\"{%08lX-%04hX-%04hX-%02hhX%02hhX-%02hhX%02hhX%02hhX%02hhX%02hhX%02hhX; %3d}: \",\n                arr[i].fmtid.Data1, arr[i].fmtid.Data2, arr[i].fmtid.Data3, \n                arr[i].fmtid.Data4[0], arr[i].fmtid.Data4[1], arr[i].fmtid.Data4[2], arr[i].fmtid.Data4[3],\n                arr[i].fmtid.Data4[4], arr[i].fmtid.Data4[5], arr[i].fmtid.Data4[6], arr[i].fmtid.Data4[7],\n                arr[i].pid);\n\n                //вывод типа и значения свойства\n                switch (dpt)\n                {\n                    case DEVPROP_TYPE_STRING:wprintf(L\"String   \\t%s\\n \",buf);  break;      \n                    case DEVPROP_TYPE_STRING_LIST:wprintf(L\"Strings \\tFirst line: %s\\n \",buf);break;    \n                    case DEVPROP_TYPE_BOOLEAN:wprintf(L\"Bool     \\t%d\\n \",(bool)*((LPBYTE)(&amp;buf)));break;\n                    case DEVPROP_TYPE_UINT16:wprintf(L\"%Uint16    \\t%d\\n \",*((LPWORD)(&amp;buf)));break;\n                    case DEVPROP_TYPE_UINT32:wprintf(L\"Uint     \\t%d\\n \",*((LPUINT)(&amp;buf)));break;\n                    case DEVPROP_TYPE_GUID:\n                        wprintf(L\"GUID   \\t{%08lX-%04hX-%04hX-%02hhX%02hhX-%02hhX%02hhX%02hhX%02hhX%02hhX%02hhX}\\n \",\n                            (*((GUID*)(&amp;buf))).Data1, (*((GUID*)(&amp;buf))).Data2, (*((GUID*)(&amp;buf))).Data3, \n                            (*((GUID*)(&amp;buf))).Data4[0], (*((GUID*)(&amp;buf))).Data4[1], (*((GUID*)(&amp;buf))).Data4[2], \n                            (*((GUID*)(&amp;buf))).Data4[3], (*((GUID*)(&amp;buf))).Data4[4], (*((GUID*)(&amp;buf))).Data4[5], \n                            (*((GUID*)(&amp;buf))).Data4[6], (*((GUID*)(&amp;buf))).Data4[7]);\n\n                        break;\n                    case DEVPROP_TYPE_BINARY:wprintf(L\"(Binary data)\\n \");break;\n\n                    default:wprintf(L\"Other    \\tType: 0x%x\\n \",(int)dpt);\n                    break;\n                }                           \n\n            }           \n\n            SetupDiDestroyDeviceInfoList(hDevInfo);\n            return TRUE;\n        }//end if\n\n\n    }//end for\n\n    SetupDiDestroyDeviceInfoList(hDevInfo);\n    return FALSE;//устройство не найдено\n}\n\n\nint main()\n{\n    setlocale(LC_ALL,\"Russian\");\n\n    PrintDevice(L\"USB\\\\VID_046E&amp;PID_5505\\\\5&amp;15C311E1&amp;0&amp;6\");        \n\n    system(\"PAUSE\");\n    return 0;\n}\n</code></pre>\n\n<p>Пример вывода:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>* Составное USB устройство's properties: *\n\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;   2}: String    Составное USB устройство\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;   3}: Strings   First line: USB\\VID_046E&amp;PID_5505&amp;REV_0100\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;   4}: Strings   First line: USB\\DevClass_00&amp;SubClass_00&amp;Prot_00\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;   6}: String    usbccgp\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;   9}: String    USB\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  10}: GUID      {36FC9E60-C465-11CF-8056-444553540000}\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  11}: String    {36fc9e60-c465-11cf-8056-444553540000}\\0009\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  12}: Uint      0\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  13}: String    (Стандартный USB хост-контроллер)\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  15}: String    Port_#0006.Hub_#0003\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  16}: String    \\Device\\USBPDO-6\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  17}: Uint      132\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  21}: GUID      {9D7DEBBC-C85D-11D1-9EB4-006008C3A19A}\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  22}: Uint      15\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  23}: Uint      0\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  24}: String    USB\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  30}: Uint      6\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  32}: (Binary data)\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  33}: Uint      3\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  34}: Uint      3\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  36}: Uint      0\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  38}: GUID      {23447943-B752-11E7-B8FD-806E6F6E6963}\n {B725F130-47EF-101A-A5F1-02608C9EEBAC;  10}: String    Составное USB устройство\n {78C34FC8-104A-4ACA-9EA4-524D52996E57; 256}: String    USB\\VID_046E&amp;PID_5505\\5&amp;15C311E1&amp;0&amp;6\n {4340A6C5-93FA-4706-972C-7B648008A5A7;   2}: Uint      25182218\n {4340A6C5-93FA-4706-972C-7B648008A5A7;   3}: Uint      0\n {4340A6C5-93FA-4706-972C-7B648008A5A7;   7}: Strings   First line: USB\\VID_046E&amp;PID_5505&amp;MI_00\\6&amp;157c6e38&amp;0&amp;0000\n {4340A6C5-93FA-4706-972C-7B648008A5A7;   8}: String    USB\\ROOT_HUB30\\4&amp;1ed8c4ae&amp;0&amp;0\n {4340A6C5-93FA-4706-972C-7B648008A5A7;   9}: Strings   First line: USB\\VID_046E&amp;PID_5505&amp;MI_00\\6&amp;157c6e38&amp;0&amp;0000\n {4340A6C5-93FA-4706-972C-7B648008A5A7;  10}: Strings   First line: USB\\VID_09DA&amp;PID_000A\\5&amp;15c311e1&amp;0&amp;3\n {AFD97640-86A3-4210-B67C-289C41AABE55;   2}: Bool      0\n {8C7ED206-3F8A-4827-B3AB-AE9E1FAEFC6C;   2}: GUID      {23447943-B752-11E7-B8FD-806E6F6E6963}\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   5}: Bool      1\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   6}: Bool      0\n {83DA6326-97A6-4088-9453-A1923F573B29;  15}: Bool      1\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;  16}: Bool      0\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   8}: Uint      2026182162\n {8C7ED206-3F8A-4827-B3AB-AE9E1FAEFC6C;   4}: Bool      0\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;  14}: Strings   First line: \\Driver\\usbccgp\n {3464F7A4-2444-40B1-980A-E0903CB6D912;  10}: Uint      3\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   4}: String    USB Multimedia Keyboard\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   7}: String    usb.inf:USB\\COMPOSITE,Composite.Dev.NT\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;   9}: (Binary data)\n {540B947E-8B40-45BC-A8A2-6A0B894CBDA2;  10}: String    \\_SB.PCI0.XHC.RHUB.HS06\n {80497100-8C73-48B9-AAD9-CE387E19C56E;   6}: Uint      0\n {80497100-8C73-48B9-AAD9-CE387E19C56E;   7}: Other     Type: 0x9\n {83DA6326-97A6-4088-9453-A1923F573B29;   3}: String    usb.inf:392c3d53461eda3a:Composite.Dev.NT:10.0.15063.674:USB\\COMPOSITE\n {83DA6326-97A6-4088-9453-A1923F573B29;  10}: String    USB\\ROOT_HUB30\\4&amp;1ed8c4ae&amp;0&amp;0\n {83DA6326-97A6-4088-9453-A1923F573B29; 100}: Other     Type: 0x10\n {83DA6326-97A6-4088-9453-A1923F573B29; 101}: Other     Type: 0x10\n {83DA6326-97A6-4088-9453-A1923F573B29; 102}: Other     Type: 0x10\n {A45C254E-DF1C-4EFD-8020-67D146A850E0;  37}: Strings   First line: PCIROOT(0)#PCI(1400)#USBROOT(0)#USB(6)\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   2}: Other     Type: 0x10\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   3}: String    10.0.15063.674\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   4}: String    USB Composite Device\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   5}: String    usb.inf\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   6}: String    Composite.Dev.NT\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   8}: String    USB\\COMPOSITE\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;   9}: String    Microsoft\n {A8B865DD-2E3D-4094-AD97-E593A70C75D6;  14}: Uint      16719875\n Для продолжения нажмите любую клавишу . . .\n</code></pre>\n\n<p>Свойства определяются по значениям <code>DEVPROPKEY</code>. Чтобы понять, что это за свойство, нужно сравнить его с константами из Devpkey.h (например, Matching Device ID - это <code>DEVPKEY_Device_MatchingDeviceId</code>).</p>\n"}