{"tags":["c","bass.dll"],"owner":{"reputation":3996,"user_id":185348,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/Z2MFa.jpg?s=128&g=1","display_name":"eanmos","link":"https://ru.stackoverflow.com/users/185348/eanmos"},"is_answered":true,"view_count":187,"accepted_answer_id":709577,"answer_count":3,"score":3,"last_activity_date":1503507827,"creation_date":1503161916,"last_edit_date":1503507827,"question_id":708052,"link":"https://ru.stackoverflow.com/questions/708052/%d0%9f%d1%80%d0%be%d0%b1%d0%bb%d0%b5%d0%bc%d1%8b-%d1%81-bass","title":"Проблемы с BASS","body":"<p>Пытаюсь скомпилировать такой код:</p>\n\n<pre><code>/*\n    BASS simple console player\n    Copyright (c) 1999-2015 Un4seen Developments Ltd.\n*/\n\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#define BASSDEF(f) (WINAPI *f) // define the functions as pointers\n#include \"bass.h\"\n\n#ifdef _WIN32 // Windows\n#include &lt;conio.h&gt;\n#else // OSX/Linux\n#include &lt;sys/time.h&gt;\n#include &lt;termios.h&gt;\n#include &lt;string.h&gt;\n#include &lt;unistd.h&gt;\n\n#define Sleep(x) usleep(x*1000)\n\nint _kbhit()\n{\n    int r;\n    fd_set rfds;\n    struct timeval tv={0};\n    struct termios term,oterm;\n    tcgetattr(0,&amp;oterm);\n    memcpy(&amp;term,&amp;oterm,sizeof(term));\n    cfmakeraw(&amp;term);\n    tcsetattr(0,TCSANOW,&amp;term);\n    FD_ZERO(&amp;rfds);\n    FD_SET(0,&amp;rfds);\n    r=select(1,&amp;rfds,NULL,NULL,&amp;tv);\n    tcsetattr(0,TCSANOW,&amp;oterm);\n    return r;\n}\n#endif\n\n// display error messages\nvoid Error(const char *text) \n{\n    printf(\"Error(%d): %s\\n\",BASS_ErrorGetCode(),text);\n    BASS_Free();\n    exit(0);\n}\n\nvoid ListDevices()\n{\n    BASS_DEVICEINFO di;\n    int a;\n    for (a=1;BASS_GetDeviceInfo(a,&amp;di);a++) {\n        if (di.flags&amp;BASS_DEVICE_ENABLED) // enabled output device\n            printf(\"dev %d: %s\\n\",a,di.name);\n    }\n}\n\nvoid main(int argc, char **argv)\n{\n    DWORD chan,act,time,level;\n    BOOL ismod;\n    QWORD pos;\n    int a,device=-1;\n\n    printf(\"Simple console mode BASS example : MOD/MPx/OGG/WAV player\\n\"\n            \"---------------------------------------------------------\\n\");\n\n    // check the correct BASS was loaded\n    if (HIWORD(BASS_GetVersion())!=BASSVERSION) {\n        printf(\"An incorrect version of BASS was loaded\");\n        return;\n    }\n\n    for (a=1;a&lt;argc;a++) {\n        if (!strcmp(argv[a],\"-l\")) {\n            ListDevices();\n            return;\n        } else if (!strcmp(argv[a],\"-d\") &amp;&amp; a+1&lt;argc) device=atoi(argv[++a]);\n        else break;\n    }\n    if (a!=argc-1) {\n        printf(\"\\tusage: contest [-l] [-d #] &lt;file&gt;\\n\"\n            \"\\t-l = list devices\\n\"\n            \"\\t-d = device number\\n\");\n        return;\n    }\n\n    // initialize output device\n    if (!BASS_Init(device,44100,0,0,NULL))\n        Error(\"Can't initialize device\");\n\n    // try streaming the file/url\n    if ((chan=BASS_StreamCreateFile(FALSE,argv[argc-1],0,0,BASS_SAMPLE_LOOP))\n        || (chan=BASS_StreamCreateURL(argv[argc-1],0,BASS_SAMPLE_LOOP,0,0))) {\n        pos=BASS_ChannelGetLength(chan,BASS_POS_BYTE);\n        if (BASS_StreamGetFilePosition(chan,BASS_FILEPOS_DOWNLOAD)!=-1) {\n            // streaming from the internet\n            if (pos!=-1)\n#ifdef _WIN32\n                printf(\"streaming internet file [%I64d bytes]\",pos);\n#else\n                printf(\"streaming internet file [%lld bytes]\",pos);\n#endif\n            else\n                printf(\"streaming internet file\");\n        } else\n#ifdef _WIN32\n            printf(\"streaming file [%I64d bytes]\",pos);\n#else\n            printf(\"streaming file [%lld bytes]\",pos);\n#endif\n        ismod=FALSE;\n    } else {\n        // try loading the MOD (with looping, sensitive ramping, and calculate the duration)\n        if (!(chan=BASS_MusicLoad(FALSE,argv[argc-1],0,0,BASS_SAMPLE_LOOP|BASS_MUSIC_RAMPS|BASS_MUSIC_PRESCAN,1)))\n            // not a MOD either\n            Error(\"Can't play the file\");\n        { // count channels\n            float dummy;\n            for (a=0;BASS_ChannelGetAttribute(chan,BASS_ATTRIB_MUSIC_VOL_CHAN+a,&amp;dummy);a++);\n        }\n        printf(\"playing MOD music \\\"%s\\\" [%u chans, %u orders]\",\n            BASS_ChannelGetTags(chan,BASS_TAG_MUSIC_NAME),a,(DWORD)BASS_ChannelGetLength(chan,BASS_POS_MUSIC_ORDER));\n        pos=BASS_ChannelGetLength(chan,BASS_POS_BYTE);\n        ismod=TRUE;\n    }\n\n    // display the time length\n    if (pos!=-1) {\n        time=(DWORD)BASS_ChannelBytes2Seconds(chan,pos);\n        printf(\" %u:%02u\\n\",time/60,time%60);\n    } else // no time length available\n        printf(\"\\n\");\n\n    BASS_ChannelPlay(chan,FALSE);\n\n    while (!_kbhit() &amp;&amp; (act=BASS_ChannelIsActive(chan))) {\n        // display some stuff and wait a bit\n        level=BASS_ChannelGetLevel(chan);\n        pos=BASS_ChannelGetPosition(chan,BASS_POS_BYTE);\n        time=BASS_ChannelBytes2Seconds(chan,pos);\n#ifdef _WIN32\n        printf(\"pos %09I64u\",pos);\n#else\n        printf(\"pos %09llu\",pos);\n#endif\n        if (ismod) {\n            pos=BASS_ChannelGetPosition(chan,BASS_POS_MUSIC_ORDER);\n            printf(\" (%03u:%03u)\",LOWORD(pos),HIWORD(pos));\n        }\n        printf(\" - %u:%02u - L \",time/60,time%60);\n        if (act==BASS_ACTIVE_STALLED) { // playback has stalled\n            printf(\"-- buffering : %05u --\",(DWORD)BASS_StreamGetFilePosition(chan,BASS_FILEPOS_BUFFER));\n        } else {\n            for (a=27204;a&gt;200;a=a*2/3) putchar(LOWORD(level)&gt;=a?'*':'-');\n            putchar(' ');\n            for (a=210;a&lt;32768;a=a*3/2) putchar(HIWORD(level)&gt;=a?'*':'-');\n        }\n        printf(\" R - cpu %.2f%%  \\r\",BASS_GetCPU());\n        fflush(stdout);\n        Sleep(50);\n    }\n    printf(\"                                                                             \\r\");\n\n    // wind the frequency down...\n    BASS_ChannelSlideAttribute(chan,BASS_ATTRIB_FREQ,1000,500);\n    Sleep(300);\n    // ...and fade-out to avoid a \"click\"\n    BASS_ChannelSlideAttribute(chan,BASS_ATTRIB_VOL,-1,200);\n    // wait for slide to finish\n    while (BASS_ChannelIsSliding(chan,0)) Sleep(1);\n\n    BASS_Free();\n}\n</code></pre>\n\n<p>Этот пример доступен из коробки. От себя добавил только</p>\n\n<pre><code>#define BASSDEF(f) (WINAPI* f) // define the functions as pointers\n</code></pre>\n\n<p>иначе не собиралось. После запуска программа, не открывая окно, сразу падает. <em>gdb</em> пишет </p>\n\n<pre><code>Program received signal SIGSEGV, Segmentation fault.\n0x00000000 in ?? ()\n\n(gdb) bt\n#0  0x00000000 in ?? ()\n#1  0x004015c1 in main (argc=1, argv=0xdc15b0) at qks.c:68\n</code></pre>\n\n<p>Даже этот пример не работает:</p>\n\n<pre><code>#define BASSDEF(f) (WINAPI *f)\n#include \"bass.h\"\n\nint main() {\n    BASS_Init(-1, 44100, 0, 0, NULL);\n}\n</code></pre>\n\n<p>Компилирую так:</p>\n\n<pre><code>gcc.exe -m32 -Wall -Wextra -Wpedantic -lbass -mwindows qks.c -o qks.exe\n</code></pre>\n\n<p><em>ОС</em> - Windows 10 x64; <em>GCC</em> - 4.9.2</p>\n\n<p><strong>UPD</strong></p>\n\n<p>Появился небольшой прогресс. Эта программа компилируется и успешно завершается:</p>\n\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;commctrl.h&gt;\n#include &lt;stdio.h&gt;\n#define BASSDEF(f) (WINAPI *f)\n#include \"bass.h\"\n\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,LPSTR lpCmdLine, int nCmdShow) {\n    (void) hPrevInstance, (void) lpCmdLine, (void) nCmdShow;\n\n    HINSTANCE bass=LoadLibrary(\"bass.dll\"); // load BASS\n    BASS_Init=GetProcAddress(bass,\"BASS_Init\"); // get BASS_Init\n    BASS_Init(-1,44100,0,NULL,NULL) // call BASS_Init\n}\n</code></pre>\n\n<p>Вот что написано в документации:</p>\n\n<blockquote>\n  <p>The downside is that you have to manually import each function that\n  you use, with the <code>GetProcAddress</code> function. But it has been made a lot\n  simpler to import BASS this way by the use of the <code>BASSDEF #define</code>.\n  Here's a small example:</p>\n\n<pre><code>#define BASSDEF(f) (WINAPI *f) // define the functions as pointers\n#include \"bass.h\" ... HINSTANCE bass=LoadLibrary(\"BASS.DLL\"); // load BASS\nBASS_Init=GetProcAddress(bass,\"BASS_Init\"); // get BASS_Init\nBASS_Init(-1,44100,0,hWnd,NULL); // call BASS_Init\n</code></pre>\n</blockquote>\n\n<p>Однако при попытке получить адрес других функций ловлю предупреждение:</p>\n\n<pre><code>warning: assignment from incompatible pointer type\n  BASS_GetVersion=GetProcAddress(bass,\"BASS_GetVersion\");\n</code></pre>\n\n<p>И если вызвать эту функцию (или какие-нибудь другие), то снова происходит <code>SIGSEGV</code>.</p>\n\n<p><strong>UPD 2</strong> </p>\n\n<p>Приведенный выше пример работает, если добавит в начало тела <code>main</code> эти строки:</p>\n\n<pre><code>HINSTANCE bass=LoadLibrary(\"bass.dll\"); // load BASS\nBASS_Init=GetProcAddress(bass,\"BASS_Init\"); // get BASS_Init\nBASS_GetVersion=GetProcAddress(bass,\"BASS_GetVersion\");\nBASS_Free=GetProcAddress(bass,\"BASS_Free\");\nBASS_SetVolume=GetProcAddress(bass,\"BASS_SetVolume\");\nBASS_SetConfig=GetProcAddress(bass,\"BASS_SetConfig\");\nBASS_SampleFree=GetProcAddress(bass,\"BASS_SampleFree\");\nBASS_SampleLoad=GetProcAddress(bass,\"BASS_SampleLoad\");\nBASS_SampleGetChannel=GetProcAddress(bass,\"BASS_SampleGetChannel\");\nBASS_ChannelPlay=GetProcAddress(bass,\"BASS_ChannelPlay\");\nBASS_ChannelStop=GetProcAddress(bass,\"BASS_ChannelStop\");\nBASS_GetVolume=GetProcAddress(bass,\"BASS_GetVolume\");\nBASS_GetVersion=GetProcAddress(bass,\"BASS_GetVersion\");\nBASS_GetCPU=GetProcAddress(bass,\"BASS_GetCPU\");\nBASS_Pause=GetProcAddress(bass,\"BASS_Pause\");\nBASS_Start=GetProcAddress(bass,\"BASS_Start\");\nBASS_MusicFree=GetProcAddress(bass,\"BASS_MusicFree\");\nBASS_MusicLoad=GetProcAddress(bass,\"BASS_MusicLoad\");\nBASS_ChannelSetAttribute=GetProcAddress(bass,\"BASS_ChannelSetAttribute\");\nBASS_StreamCreateFile=GetProcAddress(bass,\"BASS_StreamCreateFile\");\nBASS_ErrorGetCode=GetProcAddress(bass,\"BASS_ErrorGetCode\");\nBASS_StreamCreateURL=GetProcAddress(bass, \"BASS_StreamCreateURL\");\nBASS_ChannelGetLength=GetProcAddress(bass, \"BASS_ChannelGetLength\");\nBASS_StreamGetFilePosition=GetProcAddress(bass, \"BASS_StreamGetFilePosition\");\nBASS_ChannelGetAttribute=GetProcAddress(bass, \"BASS_ChannelGetAttribute\");\nBASS_ChannelGetTags=GetProcAddress(bass, \"BASS_ChannelGetTags\");\nBASS_ChannelGetLength=GetProcAddress(bass, \"BASS_ChannelGetLength\");\nBASS_ChannelBytes2Seconds=GetProcAddress(bass, \"BASS_ChannelBytes2Seconds\");\nBASS_ChannelIsActive=GetProcAddress(bass, \"BASS_ChannelIsActive\");\nBASS_ChannelGetLevel=GetProcAddress(bass, \"BASS_ChannelGetLevel\");\nBASS_ChannelGetPosition=GetProcAddress(bass, \"BASS_ChannelGetPosition\");\nBASS_ChannelSlideAttribute=GetProcAddress(bass, \"BASS_ChannelSlideAttribute\");\n</code></pre>\n\n<p>Одно большое \"<strong>НО</strong>\":\nЗвук воспроизводиться при запуске из командной строки (cmd.exe, ConEmu), но нет текстовой информации. Т.е. я запускаю программу и она работает в фоне, в терминале сразу появляется приглашение ввода:</p>\n\n<pre><code>user@LAPTOP-OIQUIP0K C:\\Users\\user\\Documents\\Projects\\sound \n&gt; qks.exe -d -1 \"C:\\Users\\user\\Music\\Radiohead\\Creep.mp3\"   \n\nuser@LAPTOP-OIQUIP0K C:\\Users\\user\\Documents\\Projects\\sound \n&gt;             \n</code></pre>\n\n<p>Однако вся текстовая информация (звук тоже работает) появляется во встроенной консоли <code>SublimeText 3</code>:</p>\n\n<pre><code>C:\\Users\\user\\Documents\\Projects\\sound&gt;qks.exe -d -1 \"C:\\Users\\user\\Music\\Radiohead\\Creep.mp3\" \nSimple console mode BASS example : MOD/MPx/OGG/WAV player\n---------------------------------------------------------\nstreaming file [41587200 bytes] 3:55\npos 000000136 - 0:00 - L ------------- ------------- R - cpu 0.00%  \npos 000005944 - 0:00 - L ------------- ------------- R - cpu 0.00%  \npos 000014808 - 0:00 - L ------------- ------------- R - cpu 0.00%  \npos 000023728 - 0:00 - L ------------- ------------- R - cpu 0.00%  \npos 000032628 - 0:00 - L ------------- ------------- R - cpu 0.07%  \npos 000041584 - 0:00 - L ---********** **********--- R - cpu 0.07%  \npos 000050496 - 0:00 - L -----******** ********----- R - cpu 0.14%  \npos 000059536 - 0:00 - L -----******** *********---- R - cpu 0.14%  \npos 000068572 - 0:00 - L -----******** *********---- R - cpu 0.19%  \npos 000077544 - 0:00 - L -----******** ********----- R - cpu 0.19%  \npos 000086464 - 0:00 - L -----******** *********---- R - cpu 0.25%  \npos 000095364 - 0:00 - L -----******** ********----- R - cpu 0.25%\n...\n</code></pre>\n\n<p>Информация о компиляторе (gcc -v):</p>\n\n<pre><code>Using built-in specs.\nCOLLECT_GCC=gcc.exe\nCOLLECT_LTO_WRAPPER=c:/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/4.8.1/lto-wrapper.exe\nTarget: x86_64-w64-mingw32\nConfigured with: ../../../src/gcc-4.8.1/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-2 --with-bugurl=http://tdm-gcc.tdragon.net/bugs\nThread model: posix\ngcc version 4.8.1 (tdm64-2)\n</code></pre>\n\n<p>Отладка:</p>\n\n<pre><code>user@LAPTOP-OIQUIP0K C:\\Users\\user\\Documents\\Projects\\sound\n&gt; gdb.exe qks.exe\nGNU gdb (GDB) 7.7.50.20140303-cvs\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i686-pc-mingw32\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\".\n\nThis binary was built by Equation Solution &lt;http://www.Equation.com&gt;...\nReading symbols from qks.exe...done.\n(gdb) b main\nBreakpoint 1 at 0x4015c5: file qks.c, line 59.\n(gdb) r -d -1 \"C:\\Users\\user\\Music\\Radiohead\\Creep.mp3\"\nStarting program: C:\\Users\\user\\Documents\\Projects\\sound\\qks.exe -d -1 \"C:\\Users\\user\\Music\\Radiohead\\Creep.mp3\"\n[New Thread 2708.0x16f4]\n[New Thread 2708.0x4c0]\n\nBreakpoint 1, main (argc=4, argv=0xab2390) at qks.c:59\n59              HINSTANCE bass=LoadLibrary(\"bass.dll\"); // load BASS\n(gdb) n\n[New Thread 2708.0xd28]\n60              BASS_Init=GetProcAddress(bass,\"BASS_Init\"); // get BASS_Init\n(gdb)\n61              BASS_GetVersion=GetProcAddress(bass,\"BASS_GetVersion\");\n(gdb)\n62              BASS_Free=GetProcAddress(bass,\"BASS_Free\");\n(gdb)\n63              BASS_SetVolume=GetProcAddress(bass,\"BASS_SetVolume\");\n(gdb)\n64              BASS_SetConfig=GetProcAddress(bass,\"BASS_SetConfig\");\n(gdb)\n65              BASS_SampleFree=GetProcAddress(bass,\"BASS_SampleFree\");\n(gdb)\n66              BASS_SampleLoad=GetProcAddress(bass,\"BASS_SampleLoad\");\n(gdb)\n67              BASS_SampleGetChannel=GetProcAddress(bass,\"BASS_SampleGetChannel\");\n(gdb)\n68              BASS_ChannelPlay=GetProcAddress(bass,\"BASS_ChannelPlay\");\n(gdb)\n69              BASS_ChannelStop=GetProcAddress(bass,\"BASS_ChannelStop\");\n(gdb)\n70              BASS_GetVolume=GetProcAddress(bass,\"BASS_GetVolume\");\n(gdb)\n71              BASS_GetVersion=GetProcAddress(bass,\"BASS_GetVersion\");\n(gdb)\n72              BASS_GetCPU=GetProcAddress(bass,\"BASS_GetCPU\");\n(gdb)\n73              BASS_Pause=GetProcAddress(bass,\"BASS_Pause\");\n(gdb)\n74              BASS_Start=GetProcAddress(bass,\"BASS_Start\");\n(gdb)\n75              BASS_MusicFree=GetProcAddress(bass,\"BASS_MusicFree\");\n(gdb)\n76              BASS_MusicLoad=GetProcAddress(bass,\"BASS_MusicLoad\");\n(gdb)\n77              BASS_ChannelSetAttribute=GetProcAddress(bass,\"BASS_ChannelSetAttribute\");\n(gdb)\n78              BASS_StreamCreateFile=GetProcAddress(bass,\"BASS_StreamCreateFile\");\n(gdb)\n79              BASS_ErrorGetCode=GetProcAddress(bass,\"BASS_ErrorGetCode\");\n(gdb)\n80              BASS_StreamCreateURL=GetProcAddress(bass, \"BASS_StreamCreateURL\");\n(gdb)\n81              BASS_ChannelGetLength=GetProcAddress(bass, \"BASS_ChannelGetLength\");\n(gdb)\n82              BASS_StreamGetFilePosition=GetProcAddress(bass, \"BASS_StreamGetFilePosition\");\n(gdb)\n83              BASS_ChannelGetAttribute=GetProcAddress(bass, \"BASS_ChannelGetAttribute\");\n(gdb)\n84              BASS_ChannelGetTags=GetProcAddress(bass, \"BASS_ChannelGetTags\");\n(gdb)\n85              BASS_ChannelGetLength=GetProcAddress(bass, \"BASS_ChannelGetLength\");\n(gdb)\n86              BASS_ChannelBytes2Seconds=GetProcAddress(bass, \"BASS_ChannelBytes2Seconds\");\n(gdb)\n87              BASS_ChannelIsActive=GetProcAddress(bass, \"BASS_ChannelIsActive\");\n(gdb)\n88              BASS_ChannelGetLevel=GetProcAddress(bass, \"BASS_ChannelGetLevel\");\n(gdb)\n89              BASS_ChannelGetPosition=GetProcAddress(bass, \"BASS_ChannelGetPosition\");\n(gdb)\n90              BASS_ChannelSlideAttribute=GetProcAddress(bass, \"BASS_ChannelSlideAttribute\");\n(gdb)\n95          int a,device=-1;\n(gdb)\n97          printf(\"Simple console mode BASS example : MOD/MPx/OGG/WAV player\\n\"\n(gdb)\n101         if (HIWORD(BASS_GetVersion())!=BASSVERSION) {\n(gdb)\n0x744d59c6 in ?? ()\n(gdb) ni\n0x744b10f9 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45c5 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45c6 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45cc in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45d2 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45d4 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45d6 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45ee in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45f0 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b45f1 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b10fe in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b1101 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b1103 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b1104 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744d59cb in ?? ()\n(gdb)\n0x744d59d0 in ?? ()\n(gdb)\n0x00401976 in main (argc=4, argv=0xab2390) at qks.c:101\n101         if (HIWORD(BASS_GetVersion())!=BASSVERSION) {\n(gdb) n\n106         for (a=1;a&lt;argc;a++) {\n(gdb)\n107             if (!strcmp(argv[a],\"-l\")) {\n(gdb)\n110             } else if (!strcmp(argv[a],\"-d\") &amp;&amp; a+1&lt;argc) device=atoi(argv[++a]);\n(gdb)\n106         for (a=1;a&lt;argc;a++) {\n(gdb)\n107             if (!strcmp(argv[a],\"-l\")) {\n(gdb)\n110             } else if (!strcmp(argv[a],\"-d\") &amp;&amp; a+1&lt;argc) device=atoi(argv[++a]);\n(gdb)\n113         if (a!=argc-1) {\n(gdb)\n121         if (!BASS_Init(device,44100,0,0,NULL))\n(gdb)\n0x744d3dc5 in ?? ()\n(gdb) ni\n0x744d3dc6 in ?? ()\n(gdb)\n0x744d3dca in ?? ()\n(gdb)\n0x744d3dcd in ?? ()\n(gdb)\n0x744d3dd3 in ?? ()\n(gdb)\n0x744d3dd4 in ?? ()\n(gdb)\n0x744d3dd5 in ?? ()\n(gdb)\n0x744b462e in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b4630 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b4644 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b4646 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744d3dda in ?? ()\n(gdb)\n0x744d3ddc in ?? ()\n(gdb)\n0x744d3dde in ?? ()\n(gdb)\n0x744d3de0 in ?? ()\n(gdb)\n0x744d3de2 in ?? ()\n(gdb)\n0x744d3de3 in ?? ()\n(gdb)\n0x744d3da9 in ?? ()\n(gdb)\n0x744d3daa in ?? ()\n(gdb)\n0x744b470b in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n0x744b4710 in ?? () from C:\\Users\\user\\Documents\\Projects\\sound\\bass.dll\n(gdb)\n[New Thread 2708.0x109c]\n[New Thread 2708.0x1098]\n[New Thread 2708.0xcdc]\n[New Thread 2708.0x760]\n[New Thread 2708.0x1674]\n[New Thread 2708.0x1834]\n[New Thread 2708.0x390]\n[New Thread 2708.0x1314] &lt;-- здесь начинает играть музыка\n                             программу пришлось \"убивать\" через диспетчер\n                             задач, т.к. музыка играет заново снова и снова.   \n[Thread 2708.0xd28 exited with code 1]\n[Thread 2708.0x4c0 exited with code 1]\n[Thread 2708.0x109c exited with code 1]\n[Thread 2708.0xcdc exited with code 1]\n[Thread 2708.0x1098 exited with code 1]\n[Thread 2708.0x1674 exited with code 1]\n[Thread 2708.0x760 exited with code 1]\n[Thread 2708.0x1834 exited with code 1]\n[Thread 2708.0x390 exited with code 1]\n[Thread 2708.0x1314 exited with code 1]\n[Inferior 1 (process 2708) exited with code 01]\n</code></pre>\n\n<p>Система:</p>\n\n<pre><code>OS: Windows 10 x64\nCPU: AMD A9-9410 RADEON R5, COMPUTE CORES 2C+3G  2.90 GHz\n</code></pre>\n\n<p>Команды компиляции и запуска:</p>\n\n<pre><code>gcc.exe -g -std=c11 -m32 -Wall -Wextra -Wpedantic -lbass -mwindows qks.c -o qks.exe\nqks.exe -d -1 \"C:\\Users\\user\\Music\\Eminem\\Rap God.mp3\"\n</code></pre>\n"}