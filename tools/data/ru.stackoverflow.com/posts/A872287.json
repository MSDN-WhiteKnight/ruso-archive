{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1535003949,"creation_date":1535003949,"answer_id":872287,"question_id":870560,"body":"<p>Как-то так:</p>\n\n<pre><code>//Reference: System.DirectoryServices.AccountManagement\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Security.Principal;\nusing System.DirectoryServices.AccountManagement;\nusing System.Text;\nusing System.Runtime.InteropServices;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApplication\n{\n    static class Program\n    {\n        //Проверяет, авторизован ли пользователь в домене\n        public static bool IsInDomain(string domain)\n        {\n            bool retval = false;\n            NetJoinStatus status = NetJoinStatus.NetSetupUnknownStatus;\n            IntPtr pDomain = IntPtr.Zero;\n            int result = NetGetJoinInformation(null, out pDomain, out status);\n\n            if (result != 0) throw new Win32Exception(\"NetGetJoinInformation failed\");\n\n            if (pDomain != IntPtr.Zero)\n            {\n                string curr_domain = Marshal.PtrToStringUni(pDomain);\n\n                if (status == NetJoinStatus.NetSetupDomainName &amp;&amp;\n                    curr_domain.ToUpper().Trim() == domain.ToUpper().Trim())\n                {\n                    retval = true;\n                }\n                NetApiBufferFree(pDomain);\n            }\n\n            return retval;\n        }\n\n        //Выводит диалоговое окно ввода логина и пароля, и возвращает имя пользователя при успешной авторизации\n        static string EnterCredentials(string domain)\n        {\n\n            bool save = false;\n            int errorcode = 0;\n            uint dialogReturn;\n            uint authPackage = 0;\n            IntPtr outCredBuffer;\n            uint outCredSize;\n\n            CREDUI_INFO credui = new CREDUI_INFO();\n            credui.cbSize = Marshal.SizeOf(credui);\n            credui.pszCaptionText = \"Авторизация\";\n            credui.pszMessageText = \"Введите логин и пароль\";\n            credui.hwndParent = IntPtr.Zero;\n\n            //Show dialog\n            dialogReturn = CredUIPromptForWindowsCredentials(ref credui,\n            errorcode, ref authPackage, (IntPtr)0, 0, out outCredBuffer, out outCredSize, ref save,\n            0x1 /*CREDUIWIN_GENERIC*/);\n\n            if (dialogReturn != 0) return \"\"; //Cancel pressed\n\n            var usernameBuf = new StringBuilder(100);\n            var passwordBuf = new StringBuilder(100);\n            var domainBuf = new StringBuilder(100);\n\n            int maxUserName = 100;\n            int maxDomain = 100;\n            int maxPassword = 100;\n\n            //Validate credentials\n            if (CredUnPackAuthenticationBuffer(0, outCredBuffer, outCredSize, usernameBuf,\n                ref maxUserName, domainBuf, ref maxDomain, passwordBuf, ref maxPassword))\n            {\n                CoTaskMemFree(outCredBuffer);\n\n                using (PrincipalContext context = new PrincipalContext(ContextType.Domain, domain))\n                {\n                    bool valid;\n                    valid = context.ValidateCredentials(usernameBuf.ToString(), passwordBuf.ToString());\n\n                    if (valid) return usernameBuf.ToString();\n                    else return \"\";\n                }\n            }\n            else throw new ApplicationException(\"CredUnPackAuthenticationBuffer failed\");\n\n        }\n\n\n        /// &lt;summary&gt;\n        /// The main entry point for the application.\n        /// &lt;/summary&gt;\n        [STAThread]\n        static void Main()\n        {\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n\n            string domain = \"Domain\"; \n            string user = Environment.UserName;\n\n            bool logged = IsInDomain(domain);\n\n            if (logged)\n            {\n                MessageBox.Show(\"Здравствуйте, \" + user + \". Вы уже авторизованы в \" + domain);\n            }\n            else\n            {\n                user = EnterCredentials(domain);\n\n                if (user == \"\")\n                {\n                    MessageBox.Show(\"Не удалось авторизоваться\");\n                    return;\n                }\n                else MessageBox.Show(\"Здравствуйте, \" + user + \". Добро пожаловать в \" + domain);\n            }\n\n            Application.Run(new Form1());\n        }\n\n\n        // *** WINAPI Functions ***\n\n        [DllImport(\"credui.dll\", CharSet = CharSet.Unicode)]\n        private static extern uint CredUIPromptForWindowsCredentials(ref CREDUI_INFO notUsedHere,\n          int authError,\n          ref uint authPackage,\n          IntPtr InAuthBuffer,\n          uint InAuthBufferSize,\n          out IntPtr refOutAuthBuffer,\n          out uint refOutAuthBufferSize,\n          ref bool fSave,\n          uint flags);\n\n        [DllImport(\"credui.dll\", CharSet = CharSet.Auto)]\n        private static extern bool CredUnPackAuthenticationBuffer(int dwFlags, IntPtr pAuthBuffer, uint cbAuthBuffer,\n            StringBuilder pszUserName, ref int pcchMaxUserName, StringBuilder pszDomainName,\n            ref int pcchMaxDomainame, StringBuilder pszPassword, ref int pcchMaxPassword\n            );\n\n        [DllImport(\"Netapi32.dll\", CharSet = CharSet.Unicode, SetLastError = true)]\n        public static extern int NetGetJoinInformation(string server, out IntPtr domain, out NetJoinStatus status);\n\n        [DllImport(\"Netapi32.dll\")]\n        public static extern int NetApiBufferFree(IntPtr Buffer);\n\n        public enum NetJoinStatus\n        {\n            NetSetupUnknownStatus = 0,\n            NetSetupUnjoined,\n            NetSetupWorkgroupName,\n            NetSetupDomainName\n        }\n\n        [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n        public struct CREDUI_INFO\n        {\n            public int cbSize;\n            public IntPtr hwndParent;\n            public string pszMessageText;\n            public string pszCaptionText;\n            public IntPtr hbmBanner;\n        }\n\n        [DllImport(\"ole32.dll\")]\n        public static extern void CoTaskMemFree(IntPtr ptr);\n    }\n\n}\n</code></pre>\n\n<p><strong>Источники</strong></p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/926227/how-to-detect-if-machine-is-joined-to-domain-in-c?noredirect=1&amp;lq=1\">How to detect if machine is joined to domain (in C#)?\n</a>  </li>\n<li><a href=\"https://stackoverflow.com/questions/40343218/validate-credentials-against-ad\">C# Validate credentials against AD</a></li>\n</ul>\n"}