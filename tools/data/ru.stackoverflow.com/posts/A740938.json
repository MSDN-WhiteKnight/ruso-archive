{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":2,"last_activity_date":1509969168,"creation_date":1509969168,"answer_id":740938,"question_id":474722,"body":"<p>Для составных устройств с помощью SetupAPI можно получить перечень дочерних устройств (<a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/install/devpkey-device-children\" rel=\"nofollow noreferrer\">DEVPKEY_Device_Children</a>) и вывести их драйвера. Свойство возвращает список InstanceID дочерних устройств, разделенных нулевым байтом (REG_SZ_MULTI). Затем нужно выполнить перечисление всех устройств, отфильтровать нужные устройства по InstanceID и можно получить сведения о драйвере. </p>\n\n<p>Пример кода на C++ для вывода имени драйвера, пути к INF-файлу и версии драйвера для всех USB-устройств и их дочерних устройств:</p>\n\n<pre><code>#pragma comment(lib,\"Setupapi.lib\")\n\n#include &lt;Windows.h&gt;\n#include &lt;Setupapi.h&gt;\n#include &lt;winusb.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;Devpkey.h&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n#include &lt;strsafe.h&gt;\n\n\nvoid ErrorMes(LPTSTR lpszFunction) \n{ \n    // Retrieve the system error message for the last-error code\n\n    LPVOID lpMsgBuf;\n    LPVOID lpDisplayBuf;\n    DWORD dw = GetLastError(); \n\n    FormatMessage(\n        FORMAT_MESSAGE_ALLOCATE_BUFFER | \n        FORMAT_MESSAGE_FROM_SYSTEM |\n        FORMAT_MESSAGE_IGNORE_INSERTS,\n        NULL,\n        dw,\n        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n        (LPTSTR) &amp;lpMsgBuf,\n        0, NULL );\n\n    // Display the error message and exit the process\n\n    lpDisplayBuf = (LPVOID)LocalAlloc(LMEM_ZEROINIT, \n        (lstrlen((LPCTSTR)lpMsgBuf) + lstrlen((LPCTSTR)lpszFunction) + 40) * sizeof(TCHAR)); \n    wprintf(L\"%s failed with error %d: %s\", \n        lpszFunction, dw, lpMsgBuf);     \n\n    LocalFree(lpMsgBuf);\n    LocalFree(lpDisplayBuf);\n\n}\n\n\n/*Вывод информации об устройстве с указанным InstanceID*/\nBOOL PrintDevice(wchar_t* id)\n{\n    unsigned index;\n    HDEVINFO hDevInfo;\n    SP_DEVINFO_DATA DeviceInfoData;\n    TCHAR id_upper[1024]=L\"\";\n    TCHAR buf[1024]=L\"\";\n    TCHAR match[1024];\n    DEVPROPTYPE dpt=0;      \n\n    for(int i=0;i&lt;wcslen(id);i++){\n        id_upper[i]=toupper(id[i]);//преобразование в заглавные буквы\n    }       \n\n    // List all connected devices\n    hDevInfo = SetupDiGetClassDevs(NULL, NULL, NULL, DIGCF_PRESENT | DIGCF_ALLCLASSES);\n    for (index = 0; ; index++) {\n        DeviceInfoData.cbSize = sizeof(DeviceInfoData);\n        if (!SetupDiEnumDeviceInfo(hDevInfo, index, &amp;DeviceInfoData)) {\n            return FALSE;     // no match\n        }\n\n        BOOL res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                        &amp;DEVPKEY_Device_InstanceId,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n        if(res==FALSE)continue;\n\n\n        if(wcscmp(buf,id_upper)==0){\n            //устройство найдено\n            res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                        &amp;DEVPKEY_Device_DeviceDesc,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n\n            //name\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n            else wprintf(L\"\\n\\t * %s\\n \",buf);          \n\n            //service\n            res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                    &amp;DEVPKEY_Device_Service,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n            else wprintf(L\"\\tDriver: %s\\n \",buf);\n\n            //driver\n            res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                &amp;DEVPKEY_Device_DriverInfPath,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n            else wprintf(L\"\\tINF File: %s\\n \",buf);         \n\n            //version\n            res=SetupDiGetDeviceProperty(hDevInfo,&amp;DeviceInfoData,\n                &amp;DEVPKEY_Device_DriverVersion,&amp;dpt,(PBYTE)buf,1000,NULL,0);\n\n            if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n            else wprintf(L\"\\tVersion: %s\\n \",buf);  \n\n            return TRUE;\n        }\n\n\n    }\n    return FALSE;//устройство не найдено\n}\n\n\nint main()\n{\n    setlocale(LC_ALL,\"Russian\");\n\n    GUID guid;\n\n    HRESULT hr = CLSIDFromString(L\"{A5DCBF10-6530-11D2-901F-00C04FB951ED}\", (LPCLSID)&amp;guid);//USB device\n\n    HDEVINFO deviceInfoHandle = SetupDiGetClassDevs(&amp;guid, 0, 0, DIGCF_PRESENT | DIGCF_DEVICEINTERFACE);\n\n    if (deviceInfoHandle != INVALID_HANDLE_VALUE)\n    {\n        int deviceIndex = 0;\n        while (true)\n        {\n            SP_DEVICE_INTERFACE_DATA deviceInterface = { 0 };\n            deviceInterface.cbSize = sizeof(SP_DEVICE_INTERFACE_DATA);\n\n            //перечисление устройств\n            if (SetupDiEnumDeviceInterfaces(deviceInfoHandle, 0, &amp;guid, deviceIndex, &amp;deviceInterface))\n            {\n                DWORD cbRequired = 0;\n\n                SetupDiGetDeviceInterfaceDetail(deviceInfoHandle, &amp;deviceInterface, 0, 0, &amp;cbRequired, 0);\n                if (ERROR_INSUFFICIENT_BUFFER == GetLastError())\n                {                    \n                   //получение информации о устройстве\n                   DEVPROPTYPE dpt=0;\n                   wchar_t buffer[1000]=L\"\";\n                   DWORD RequiredSize = 0;\n                   SP_DEVINFO_DATA devinfo = { 0 };\n                               devinfo.cbSize = sizeof(SP_DEVINFO_DATA);\n\n                   BOOL success = SetupDiEnumDeviceInfo(deviceInfoHandle, deviceIndex, &amp;devinfo);\n                   if(success==FALSE){ErrorMes(L\"SetupDiEnumDeviceInfo\");}\n\n                   BOOL res;\n\n                   //location\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_LocationInfo,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n                   else wprintf(L\"%s\\n\",buffer);\n\n                   //name\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_DeviceDesc,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n                   else wprintf(L\"Name: %s\\n\",buffer);\n\n                   //service\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_Service,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n                   else wprintf(L\"Driver: %s\\n\",buffer);\n\n                   //driver\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_DriverInfPath,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n                   else wprintf(L\"INF file: %s\\n\",buffer);\n\n                   //version\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_DriverVersion,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res==FALSE)ErrorMes(L\"SetupDiGetDeviceProperty\");\n                   else wprintf(L\"Version: %s\\n\",buffer);\n\n\n                   //children\n                   res=SetupDiGetDeviceProperty(deviceInfoHandle,&amp;devinfo,\n                    &amp;DEVPKEY_Device_Children,&amp;dpt,(PBYTE)buffer,1000,NULL,0);\n\n                   if(res!=FALSE){\n                       printf(\"Children: \\n\");\n                       wchar_t* p=buffer;//указатель на текущий элемент REG_SZ_MULTI\n\n                       //вывод дочерних устройств\n                       while(true){\n                        if(wcscmp(p,L\"\")==0)break;\n                        PrintDevice(p); \n                        p+=wcslen(p)+1; //переход к следующему элементу REG_SZ_MULTI                        \n                       }\n\n                   }//endif                     \n\n                }\n            }\n            else\n            {\n                break;\n            }\n\n            ++deviceIndex;\n            printf(\"\\n\");\n        }//end while\n\n        SetupDiDestroyDeviceInfoList(deviceInfoHandle);\n    }          \n\n    system(\"PAUSE\");\n    return 0;\n}\n</code></pre>\n\n<p><strong>Пример вывода:</strong></p>\n\n<p><a href=\"https://i.stack.imgur.com/Vm84o.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Vm84o.png\" alt=\"USB устройства\"></a></p>\n"}