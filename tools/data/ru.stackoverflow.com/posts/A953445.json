{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1551934526,"creation_date":1551934526,"answer_id":953445,"question_id":953222,"body":"<p>Такого синтаксиса нет, потому что это несколько разные вещи. Метод <code>GetRuntime</code> принимает на вход именно <strong>версию CLR</strong>, а не версию .NET Framework. Все версии .NET 4.x используют одну и ту же версию CLR, v4.0.30319. Параметр <code>sku</code> в конфигурации, напротив, уточняет именно <strong>версию .NET Framework</strong>; это делается для того, чтобы в случае, когда приложение требует определенную минорную версию из набора версий 4.x, при ее отсутствии стандартный загрузчик CLR мог вывести пользователю осмысленное сообщение \"Установите такую-то версию\", а не просто упасть. </p>\n\n<p>Если вы делаете свой загрузчик, похоже, подобный функционал придется реализовать самостоятельно, считывая версии установленных .NET из реестра и сравнивая с требуемой. Однако, судя по соседству v2.x и v4.x, вы пытаетесь сделать приложение, которое совместимо с обеими версиями и не использует никаких новшеств v4.х, поэтому этот параметр вам вовсе не нужен.</p>\n\n<p>Конфигурацию для этого случая можно упростить:</p>\n\n<pre><code>&lt;supportedRuntime version=\"v4.0\"/&gt;\n&lt;supportedRuntime version=\"v2.0.50727\"/&gt;\n</code></pre>\n\n<p>И соответствующий код инициализации CLR будет выглядеть так:</p>\n\n<pre><code>hr = pMetaHost-&gt;GetRuntime(L\"v4.0.30319\", IID_PPV_ARGS(&amp;pRuntimeInfo)); \n\nif (FAILED(hr)) hr = pMetaHost-&gt;GetRuntime(L\"v2.0.50727\", IID_PPV_ARGS(&amp;pRuntimeInfo)); \n\nif (FAILED(hr)) { \n    printf(\"Failed to initialize CLR: HRESULT 0x%x\\n\", (unsigned int)hr ); \n    exit(); \n}\n</code></pre>\n"}