{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1515266115,"creation_date":1515266115,"answer_id":767413,"question_id":764987,"body":"<p>В среде Windows - c помощью функции <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms648039(v=vs.85).aspx\" rel=\"nofollow noreferrer\">EnumResourceTypes</a>. Технически, это называется не заголовками, а типами ресурсов: стандарт PE определяет структуру секции ресурсов как дерево произвольной вложенности, но на практике используется три уровня - <em>Type</em>, <em>Name</em> и <em>Language</em>. То, что на картинке - это <em>Type</em>.</p>\n\n<p>При использовании функции следует учесть следующее:</p>\n\n<ul>\n<li><p>Предварительно нужно загрузить изучаемый модуль в память процесса. Предпочтительно для этого использовать функцию <code>LoadLibraryEx</code> с флагом <code>LOAD_LIBRARY_AS_DATAFILE</code>. При такой загрузке не выполняется никакой код из этого модуля, что позволяет улучшить производительность, обойти ограничение на загрузку 64-битных модулей в 32-битные процессы, а также уменьшает шансы наткнуться на очередную уязвимость и выполнить чей-то вредоносный код в своем процессе.</p></li>\n<li><p>Тип ресурса может определяться как строкой (обычно, для нестандартных ресурсов) так и идентификатором (обычно, для стандартных типов ресурсов). Чтобы их различать и получать осмысленные значения для каждого случая, нужно взять из заголовочных файлов Windows SDK специальные макросы: <code>IS_INTRESOURCE</code>, <code>GET_RESOURCE_ID</code>, <code>GET_RESOURCE_NAME</code>. Однако, для нестандартных ресурсов, определяемых идентификатором, строковое представление имени получить не получится - его знает только сама изучаемая программа.</p></li>\n</ul>\n\n<p>Вспомогательный класс для получения списка типов ресурсов (топорная реализация только для примера, не используйте статические переменные для промежуточных результатов в реальных проектах!):</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\nusing System.IO;\n\npublic static class Resources\n{\n    /* Источник: http://www.pinvoke.net/default.aspx/kernel32.EnumResourceNames */\n\n    [DllImport(\"kernel32.dll\", SetLastError = true)]\n    public static extern IntPtr LoadLibraryEx(string lpFileName, IntPtr hReservedNull, LoadLibraryFlags dwFlags);\n\n    public delegate bool EnumResTypeProc(IntPtr hModule, IntPtr lpszType, IntPtr lParam);\n\n    [DllImport(\"kernel32.dll\", CharSet = CharSet.Unicode)]\n    static extern bool EnumResourceTypes(IntPtr hModule, EnumResTypeProc lpEnumFunc, IntPtr lParam);\n\n    public static bool IS_INTRESOURCE(IntPtr value)\n    {\n        if (((uint)value) &gt; ushort.MaxValue)\n            return false;\n        return true;\n    }\n    public static uint GET_RESOURCE_ID(IntPtr value)//преобразование указателя в ID ресурса\n    {\n        if (IS_INTRESOURCE(value) == true)\n            return (uint)value;\n        throw new System.NotSupportedException(\"value is not an ID!\");\n    }\n    public static string GET_RESOURCE_NAME(IntPtr value)//преобразование указателя в имя ресурса\n    {\n        if (IS_INTRESOURCE(value) == true)\n            return value.ToString();\n        return Marshal.PtrToStringUni((IntPtr)value);\n    }\n\n    /** ************************************************************ */\n\n    public static List&lt;string&gt; ResourceTypes = new List&lt;string&gt;();//список для промежуточного хранения строк\n\n    public static bool EnumProc(IntPtr hModule, IntPtr lpszType, IntPtr lParam)\n    {\n        if (ResourceTypes == null) ResourceTypes = new List&lt;string&gt;();\n\n        string str;\n        if (IS_INTRESOURCE(lpszType))//ресурс определяется ID\n        {\n            str = ((ResType)GET_RESOURCE_ID(lpszType)).ToString();//преобразование ID в строку\n        }\n        else\n        {\n            str = GET_RESOURCE_NAME(lpszType);//ресурс определяется именем\n        }\n        ResourceTypes.Add(str);//добавление строки в список            \n\n        return true;\n    }\n\n    /// &lt;summary&gt;\n    /// Получение списка типов ресурсов для модуля\n    /// &lt;/summary&gt;        \n    public static List&lt;string&gt; GetResourceTypes(string file)\n    {\n        //загрузим модуль...\n        IntPtr h = LoadLibraryEx(file, IntPtr.Zero, LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE);\n        if (h == IntPtr.Zero) throw new ApplicationException(\"LoadLibraryEx failed!\");\n\n        ResourceTypes = new List&lt;string&gt;();//очистка списка\n\n        EnumResourceTypes(h, EnumProc, IntPtr.Zero);//запуск процесса перечисления ресурсов\n\n        return ResourceTypes;\n    }\n    /** ************************************************************ */\n}\n\n[System.Flags]\npublic enum LoadLibraryFlags : uint\n{\n    ZERO = 0,\n    DONT_RESOLVE_DLL_REFERENCES = 0x00000001,\n    LOAD_IGNORE_CODE_AUTHZ_LEVEL = 0x00000010,\n    LOAD_LIBRARY_AS_DATAFILE = 0x00000002,\n    LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = 0x00000040,\n    LOAD_LIBRARY_AS_IMAGE_RESOURCE = 0x00000020,\n    LOAD_LIBRARY_SEARCH_APPLICATION_DIR = 0x00000200,\n    LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = 0x00001000,\n    LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = 0x00000100,\n    LOAD_LIBRARY_SEARCH_SYSTEM32 = 0x00000800,\n    LOAD_LIBRARY_SEARCH_USER_DIRS = 0x00000400,\n    LOAD_WITH_ALTERED_SEARCH_PATH = 0x00000008\n}\n\n/// &lt;summary&gt;\n/// Идентификаторы для типов стандартных ресурсов\n/// &lt;/summary&gt;\npublic enum ResType : uint\n{\n    CURSOR = 1,\n    BITMAP = 2,\n    ICON = 3,\n    MENU = 4,\n    DIALOG = 5,\n    STRING = 6,\n    FONTDIR = 7,\n    FONT = 8,\n    ACCELERATOR = 9,\n    RCDATA = 10,\n    MESSAGETABLE = 11,\n    GROUP_CURSOR = 12,\n    GROUP_ICON = 14,\n    VERSION = 16,\n    DLGINCLUDE = 17,\n    PLUGPLAY = 19,\n    VXD = 20,\n    ANICURSOR = 21,\n    ANIICON = 22,\n    HTML = 23,\n    MANIFEST = 24\n}\n</code></pre>\n\n<p>Пример использования:</p>\n\n<pre><code>List&lt;string&gt; lst = Resources.GetResourceTypes(\"c:\\\\windows\\\\notepad.exe\");\n\nStringBuilder sb = new StringBuilder(300);\nforeach (var x in lst) sb.AppendLine(x);\n\nif (lst.Count == 0) MessageBox.Show(\"No resources\");\nelse MessageBox.Show(sb.ToString(),\"Resource types\");\n</code></pre>\n"}