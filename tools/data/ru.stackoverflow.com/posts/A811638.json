{"owner":{"reputation":804,"user_id":281694,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/299c49747b184e584859dee3dd9ed58d?s=128&d=identicon&r=PG&f=1","display_name":"MindCleaner","link":"https://ru.stackoverflow.com/users/281694/mindcleaner"},"is_accepted":false,"score":1,"last_activity_date":1523281421,"last_edit_date":1523281421,"creation_date":1523271978,"answer_id":811638,"question_id":805934,"body":"<p>Обратите внимание на строки:</p>\n\n<pre><code> WordTableAnalyser wta = new WordTableAnalyser(table,1.0);\n MyWordCell c = wta.getCell(8, 1);\n MessageBox.Show(c.rows.ToString() + \";\" + c.columns.ToString());\n</code></pre>\n\n<p>Исходная таблица</p>\n\n<p><a href=\"https://i.stack.imgur.com/UqNgS.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/UqNgS.png\" alt=\"введите сюда описание изображения\"></a></p>\n\n<p>Приложение на основе Windows Forms</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing Microsoft.Office.Interop.Word;\nusing System.Reflection;\n\nnamespace WorkWithWord\n{\n    using Word = Microsoft.Office.Interop.Word;\n    public class MyWordCell\n    {\n        public double x = 0;\n        public double x2 = 0;\n        public double w = 0;\n        public int columns = 1;\n        public int rows = 1;\n        public int ini_row=-1;\n        public int ini_column=-1;\n        public Word.Cell wc;\n        public MyWordCell(Word.Cell cell)\n        {\n            wc = cell;\n        }\n    }\n    public class DoubleToleranceComparer : IComparer&lt;double&gt;,IEqualityComparer&lt;double&gt;\n    {\n        double tolerance=0;\n        public DoubleToleranceComparer(double tolerance)\n        {\n            this.tolerance = tolerance;\n        }\n        #region Члены IComparer&lt;double&gt;\n\n        public int Compare(double x, double y)\n        {\n            double delta = x - y;\n            return Math.Abs(delta) &lt;= tolerance ? 0 : Math.Sign(delta);\n        }\n\n        #endregion\n\n        #region Члены IEqualityComparer&lt;double&gt;\n\n        public bool Equals(double x, double y)\n        {\n            throw new NotImplementedException();\n        }\n\n        public int GetHashCode(double obj)\n        {\n            throw new NotImplementedException();\n        }\n\n        #endregion\n    }\n    public class WordTableAnalyser\n    {\n\n\n        public static Object missingObj = System.Reflection.Missing.Value;\n        public static Object trueObj = true;\n        public static Object falseObj = false;\n\n        Word.Table wtable = null;\n        double cc = 0;//количество необъединенных столбцов\n        double rc = 0;//количество необъединенных строк\n        double WT = 0;//ширина таблицы\n        double HT = 0;//высота таблицы\n\n        DoubleToleranceComparer dt_comparer;//сравниватель double c допуском\n\n        SortedList&lt;double,double&gt; split_xs;//встречающиеся  координаты границ ячеек таблицы по x\n\n\n\n        List&lt;MyWordCell&gt; curRow = new List&lt;MyWordCell&gt;();\n        List&lt;List&lt;MyWordCell&gt;&gt; myTable = new List&lt;List&lt;MyWordCell&gt;&gt;();\n\n\n        public MyWordCell getCell(int ini_row,int ini_column)\n        {\n            MyWordCell c = null;\n\n\n            for (int ci = 0; ci &lt; myTable[ini_row-1].Count; ++ci)\n                {\n                    if (myTable[ini_row - 1][ci].ini_column == ini_column)\n                    {\n                        c = myTable[ini_row - 1][ci];\n                        break;\n                    }\n                }\n\n\n                return c;\n        }\n\n        public WordTableAnalyser(Word.Table table,double tolerance)\n        {\n            wtable = table;\n            cc = table.Columns.Count;\n            rc = table.Rows.Count;\n            dt_comparer = new DoubleToleranceComparer(tolerance);\n            split_xs = new SortedList&lt;double,double&gt;(dt_comparer);\n            split_xs.Add(0.0, 0.0);\n            for (int i = 1; i &lt;= cc; ++i)\n            {\n                try\n                {\n                    Word.Cell cell=table.Cell(1,i);\n                    MyWordCell myCell = new MyWordCell(cell);\n                    myCell.x = WT;\n                    myCell.w = cell.PreferredWidth;\n                    myCell.x2 = myCell.x + myCell.w;\n                    myCell.ini_row = 1;\n                    myCell.ini_column = i;\n                    curRow.Add(myCell);\n                    WT += cell.PreferredWidth;//Width не всегда определена\n\n                    //cell.\n                    split_xs.Add(WT, WT);\n                }\n                catch(Exception ex)\n                { \n\n                }\n            }\n            myTable.Add(curRow);\n\n            for(int j=2;j&lt;=rc;++j)\n            {\n                List&lt;MyWordCell&gt; prevRow = curRow;\n                curRow = new List&lt;MyWordCell&gt;();\n                List&lt;MyWordCell&gt; myTableRow = new List&lt;MyWordCell&gt;();\n                int prevColInd = 0;\n                double curX=0;\n                for (int i = 1; i &lt;= cc; ++i)\n                {\n                    try\n                    {\n                        Word.Cell cell=table.Cell(j,i);\n                        MyWordCell myCell = new MyWordCell(cell);\n                        myCell.x = curX;\n                        myCell.w = cell.PreferredWidth;\n                        myCell.x2 = myCell.x + myCell.w;\n                        myCell.ini_row = j;\n                        myCell.ini_column = i;\n                        curRow.Add(myCell);\n                        //while(myTable.Count&lt;myCell.in)\n                        myTableRow.Add(myCell);\n                        //cell.\n                        try\n                        {\n                            split_xs.Add(myCell.x2, myCell.x2);\n                        }\n                        catch (Exception ex) { }\n                        curX = myCell.x2;\n                        if (dt_comparer.Compare(myCell.x, prevRow[prevColInd].x) == 0)\n                        {\n                            while ((prevColInd&lt;prevRow.Count) &amp;&amp; (dt_comparer.Compare(prevRow[prevColInd].x, myCell.x2) &lt; 0))\n                            prevColInd++;\n                        }\n                    }\n                    catch(Exception ex)//для текущего ряда по данному индексу пропуск\n                    {\n                        if (prevColInd &lt; prevRow.Count)\n                        {\n                            prevRow[prevColInd].rows++;\n                            curRow.Add(prevRow[prevColInd]);\n                            curX = prevRow[prevColInd].x2;\n                            prevColInd++;\n                           }\n                        else\n                        {\n                            break;\n                        }\n                    }\n                }\n                myTable.Add(myTableRow);\n            }\n\n            //добавляем недостающие колонки\n            for (int j = 0; j &lt; myTable.Count; ++j)\n            {\n                for (int i = 0; i &lt; myTable[j].Count; ++i)\n                {\n                    MyWordCell c = myTable[j][i];\n                    double x = c.x;\n                    double x2 = c.x2;\n                    int ind_x=split_xs.IndexOfKey(x);\n                    int ind_x2 = split_xs.IndexOfKey(x2);\n                    int delta_ind=ind_x2 - ind_x;\n                    if (delta_ind &gt; 1) c.columns += delta_ind - 1; \n                }\n            }\n\n\n        }\n    }\n    public partial class Form1 : Form\n    {\n        public static Object missingObj = System.Reflection.Missing.Value;\n        public static Object trueObj = true;\n        public static Object falseObj = false;\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void Form1_Load(object sender, EventArgs e)\n        {\n\n        }\n\n        private void buttonTest_Click(object sender, EventArgs e)\n        {\n            Word._Application application;\n            Word._Document document=null;\n\n            //создаем обьект приложения word\n            application = new Word.Application();\n            // создаем путь к файлу\n            Object templatePathObj = @\"D:\\Work\\Life\\StackOverflow\\Разбиение объединённых ячеек в таблице.docm\"; ;\n\n            // если вылетим не этом этапе, приложение останется открытым\n            try\n            {\n                document = application.Documents.Add(ref  templatePathObj, ref missingObj, ref missingObj, ref missingObj);\n\n                Word.Table table = document.Tables[1];//в файле примера одна единственная таблица\n                int rcount = table.Rows.Count;\n                int ccount = table.Columns.Count;\n\n\n                WordTableAnalyser wta = new WordTableAnalyser(table,1.0);\n                MyWordCell c = wta.getCell(8, 1);\n                MessageBox.Show(c.rows.ToString() + \";\" + c.columns.ToString());\n\n                application.Visible = true;\n            }\n            catch (Exception error)\n            {\n                if(document!=null)document.Close(ref falseObj, ref  missingObj, ref missingObj);\n                application.Quit(ref missingObj, ref  missingObj, ref missingObj);\n                document = null;\n                application = null;\n                MessageBox.Show(error.Message, \"\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                return;\n            }\n\n        }\n    }\n}\n</code></pre>\n"}