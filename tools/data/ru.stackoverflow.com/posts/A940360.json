{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1549222327,"creation_date":1549222327,"answer_id":940360,"question_id":939632,"body":"<p>Используя класс <a href=\"https://docs.microsoft.com/en-us/windows/desktop/cimwin32prov/win32-logicaldisktopartition\" rel=\"nofollow noreferrer\">Win32_LogicalDiskToPartition</a>, который позволяет связать между собой логические диски и разделы. От раздела легко перейти к физическому диску по индексу. Как-то так:</p>\n\n<pre><code>using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Management;\n\nnamespace ConsoleApp1\n{    \n\n    class Program\n    {\n\n        public struct WmiSelectionCondition\n        {\n            public string PropertyName { get; set; }\n            public string PropertyValue { get; set; }\n        }\n\n        public struct LogicalDiskToPartition\n        {\n            public WmiSelectionCondition PartitionSelectionCondition { get; set; }\n            public WmiSelectionCondition LogicalDiskSelectionCondition { get; set; }\n        }\n\n        //получает таблицу соответствия логических дисков и разделов\n        public static List&lt;LogicalDiskToPartition&gt; GetPartitionMap()\n        {\n            ManagementObjectSearcher mos = new ManagementObjectSearcher(\n                \"SELECT Antecedent,Dependent FROM Win32_LogicalDiskToPartition\"\n                );\n            LogicalDiskToPartition item;\n            WmiSelectionCondition condition;\n            List&lt;LogicalDiskToPartition&gt; list = new List&lt;LogicalDiskToPartition&gt;();\n            string text;\n            string[] arr, arr2;\n\n            using (mos)\n            {\n                var moc = mos.Get();                \n\n                foreach (ManagementObject mo in mos.Get())\n                {\n                    item = new LogicalDiskToPartition();\n\n                    //Распарсим значения ref-полей класса Win32_LogicalDiskToPartition\n                    //Они имеют формат Class.Property=\"Value\"\n\n                    text = mo[\"Antecedent\"].ToString(); //Partition reference\n                    arr = text.Split(new char[] { '=', '\"' }, StringSplitOptions.RemoveEmptyEntries);\n\n                    if (arr.Length &gt;= 2)\n                    {\n                        arr2 = arr[0].Split(new char[] { ':', '.' }, StringSplitOptions.RemoveEmptyEntries);\n\n                        condition = new WmiSelectionCondition();\n                        if (arr2.Length == 0) condition.PropertyName = \"\";\n                        else condition.PropertyName = arr2[arr2.Length - 1];\n                        condition.PropertyValue = arr[1];\n                        item.PartitionSelectionCondition = condition;\n                    }\n\n                    text = mo[\"Dependent\"].ToString(); //Logical disk reference\n                    arr = text.Split(new char[] { '=', '\"' }, StringSplitOptions.RemoveEmptyEntries);\n\n                    if (arr.Length &gt;= 2)\n                    {\n                        arr2 = arr[0].Split(new char[] { ':', '.' }, StringSplitOptions.RemoveEmptyEntries);\n\n                        condition = new WmiSelectionCondition();\n                        if (arr2.Length == 0) condition.PropertyName = \"\";\n                        else condition.PropertyName = arr2[arr2.Length - 1];\n                        condition.PropertyValue = arr[1];\n                        item.LogicalDiskSelectionCondition = condition;\n                    }\n\n                    list.Add(item);\n                }\n\n            }\n            return list;\n        }\n\n        //выборка значения свойства из WMI-класса по заданному условию\n        public static object WmiPerformSelection(string prop_to_select,string classname, WmiSelectionCondition condition )\n        {\n            ManagementObjectSearcher mos = new ManagementObjectSearcher(\n                String.Format(\n                \"SELECT {0} FROM {1} WHERE {2} = '{3}'\",\n                prop_to_select, classname, condition.PropertyName, condition.PropertyValue)\n                );\n\n            foreach (ManagementObject mo in mos.Get())\n            {                \n                foreach (var prop in mo.Properties)\n                {                    \n                    if (prop.Value != null) return prop.Value;                    \n                }                \n            }\n            return null;\n        }\n\n        //вычисляет свободное место на диске, заданном индексом\n        public static long CalcDriveFreeSpace(List&lt;LogicalDiskToPartition&gt; map, int index)\n        {\n            long result = 0;\n\n            foreach (var item in map)\n            {\n                object val = WmiPerformSelection(\"DiskIndex\", \"Win32_DiskPartition\", item.PartitionSelectionCondition);\n                if (val == null) continue;\n                int item_index = Convert.ToInt32(val);\n                if (item_index != index) continue;\n\n                val = WmiPerformSelection(\"FreeSpace\", \"Win32_LogicalDisk\", item.LogicalDiskSelectionCondition);\n                if (val == null) continue;\n                long freespace = Convert.ToInt64(val);\n                result += freespace;   \n            }\n\n            return result;\n        }\n\n        static void Main(string[] args)\n        {                \n            var map = GetPartitionMap();           \n\n            ManagementObjectSearcher mos = new ManagementObjectSearcher(\n               String.Format(\n               \"SELECT Caption, Index, Size FROM Win32_DiskDrive\")\n               );\n\n            foreach (ManagementObject mo in mos.Get())\n            {\n                object val = mo[\"Index\"];\n                int index = Convert.ToInt32(val);\n\n                string caption=\"\";\n                if (mo[\"Caption\"] != null) caption = mo[\"Caption\"].ToString();\n\n                string size=\"0\";\n                if (mo[\"Size\"] != null) size = mo[\"Size\"].ToString();\n\n                long freespace = CalcDriveFreeSpace(map, index);                \n\n                Console.WriteLine(\"{0}: {1} bytes total; {2} bytes free\",caption, size, freespace);                \n            }\n\n            Console.ReadKey();\n        }\n\n    }\n}\n</code></pre>\n"}