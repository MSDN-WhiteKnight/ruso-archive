{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":3,"last_activity_date":1558688430,"creation_date":1558688430,"answer_id":985029,"question_id":984352,"body":"<p>В дополнение:</p>\n\n<pre><code>A = Convert.ToInt32(AT);\nB = Convert.ToInt32(BT);\n</code></pre>\n\n<p>При использовании методов класса Convert единственный способ обработки неверного ввода - исключения. Генерация исключений является несколько тяжелой операцией, поэтому лучше использовать метод TryParse.</p>\n\n<pre><code>Console.WriteLine(\"Числа имеют значение 0, продолжать работу программы нет смысла, завершение\");\n</code></pre>\n\n<p>Такая проверка не имеет смысла, арифметические операции с нолями вполне допустимы (кроме деления). 0+0 должно выдавать 0, а не ошибку.</p>\n\n<pre><code>char[] NumUs = new char[Longe] { '+', '-', '*', ':' };\n//...\nfor (byte i = 0; i &lt; Longe; i++)\n</code></pre>\n\n<p>Если массив зашит в коде, нет смысла также зашивать в коде его константную длину. Длину массива можно определить программно методом Length, так что при добавлении элементов не придется менять код в двух местах</p>\n\n<pre><code>Console.WriteLine(\"Хватит шалить, вводи число от 1 до 4 включительно\");\n</code></pre>\n\n<p>Вы предлагаете пользователю ввести число, а затем преобразуете его в символ. Почему бы сразу не вводить символ? Это намного проще и удобнее.</p>\n\n<pre><code>Console.WriteLine(\"Close program? y/n\");\nanswer = Console.ReadLine();\n</code></pre>\n\n<p>Так как вы просите пользователя ввести один из символов, оба из которых требуют одиночного нажатия клавиши, можно сделать его ввод чуть более удобным с использованием Console.ReadKey.</p>\n\n<pre><code>private static void StartProgramm()//полагает начало программы\n{\n    MathGetNumber();\n    MathOperation();\n}\n</code></pre>\n\n<p>Этот код привносит в программу \"повторную входимость\": StartProgramm вызывает MathGetNumber, который, в свою очередь, вызывает StartProgramm. Это приводит к тому, что стек вызовов в ходе работы программы будет постепенно расти. Для реализации повторяемости лучше использовать циклы, а не повторно входимые методы.</p>\n\n<hr>\n\n<p>Мой вариант улучшения с учетом этих замечаний:</p>\n\n<pre><code>using System;\nusing System.Text;\n\nnamespace ConsoleApp1\n{\n    class Program\n    {\n        private static int A;\n        private static int B;\n\n        static void Main(string[] args)\n        {\n            bool success;\n            while (true)\n            {\n                while (true)\n                {\n                    success = MathGetNumber();\n                    if (success) break;\n                }\n\n                while (true)\n                {\n                    success = MathOperation();\n                    if (success) break;\n                }                \n\n                if (Close()) break;                 \n            }\n        }       \n\n        private static bool MathGetNumber()//получаем число\n        {\n            string AT;\n            string BT;\n\n            Console.WriteLine(\"Первое число\");\n            AT = Console.ReadLine();\n            Console.WriteLine(\"Второе число\");\n            BT = Console.ReadLine();\n\n            if (Int32.TryParse(AT, out A) == false || Int32.TryParse(BT, out B) == false)\n            {\n                Console.WriteLine(\"Не шали, вводи только числа!\");\n                return false;\n            }\n\n            for (byte i = 0; i &lt; 4; i++)//это я решил сделать отступ в несколько строк\n            {\n                Console.WriteLine();\n            }\n            return true;\n        }\n\n        private static bool MathOperation()//производим операцию с числом\n        {                       \n\n            char[] NumUs = new char[] { '+', '-', '*', ':' };\n\n            Console.WriteLine(\"Введите один из знаков операций: \");\n            for (byte i = 0; i &lt; NumUs.Length; i++)\n            {\n                Console.Write(NumUs[i]+\" \");                \n            }\n            Console.WriteLine();\n\n            string sign = Console.ReadLine();\n\n            switch (sign)\n            {\n                case \"+\":\n                    Console.WriteLine(\"Ваше число = \" + (A + B));\n                    break;\n                case \"-\":\n                    Console.WriteLine(\"Ваше число = \" + (A - B));\n                    break;\n                case \"*\":\n                    Console.WriteLine(\"Ваше число = \" + (A * B));\n                    break;\n                case \":\":\n                    if (B == 0) Console.WriteLine(\"Делить на ноль нельзя\");\n                    else Console.WriteLine(\"Ваше число = \" + (A / B));\n                    break;\n                default:\n                    Console.WriteLine(\"Не шали, введи один из допустимых знаков операции!\");\n                    return false;\n            }\n            return true;\n\n        }                \n\n        private static bool Close()//завершение работы программы\n        {\n            char answer;\n            Console.WriteLine(\"Close program? y/n\");\n\n            while (true)\n            {\n                answer = Console.ReadKey(true).KeyChar;\n\n                if (answer == 'y')\n                {\n                    return true;\n                }\n                else if (answer == 'n')\n                {\n                    return false;\n                }                \n            }            \n        }\n\n    }\n}\n</code></pre>\n"}