{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1517553535,"creation_date":1517553535,"answer_id":779065,"question_id":773014,"body":"<p>Действительно, событие <code>LoadCompleted</code> для WPF WebBrowser не вызывается до тех пор, пока он не добавлен в какое-либо отображаемое окно или элемент управления, это известная проблема. Причина ее в том, как WebBrowser осуществляет инициализацию своего внутреннего ActiveX-элемента Internet Explorer, который и занимается загрузкой страницы. Это можно понять, посмотрев в его исходный код на Reference Source.</p>\n\n<p>Для корректной работы события <code>DocumentCompleted</code> внутреннего ActiveX-объекта класс <code>ActiveXHost</code> должен быть переведен в состояние <code>ActiveXState.InPlaceActive</code>. По умолчанию он находится в <code>ActiveXState.Running</code> (см. <a href=\"http://referencesource.microsoft.com/#PresentationFramework/src/Framework/System/Windows/Controls/WebBrowser.cs,fc4291456c615b4c\" rel=\"nofollow noreferrer\">инициализацию свойства</a>), переход в состояние InPlaceActive происходит при вызове метода <a href=\"http://referencesource.microsoft.com/#PresentationFramework/src/Framework/System/Windows/Interop/ActiveXHost.cs,d9d828289509b434,references\" rel=\"nofollow noreferrer\">BuildWindowCore</a>, который вызывается только при отображении родительского окна элемента. <em>Это поведение отличается от аналогичного элемента в WinForms, который сразу переводится в InPlaceActive при инициализации, см. <a href=\"https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/WebBrowser.cs,b0a9d3ff01a86d4e\" rel=\"nofollow noreferrer\">здесь</a>)</em>.</p>\n\n<p><strong>Решение 1 - Использование WinForms WebBrowser</strong> </p>\n\n<p>Элемент <a href=\"https://msdn.microsoft.com/ru-ru/library/system.windows.forms.webbrowser%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396\" rel=\"nofollow noreferrer\">WebBrowser</a> в WinForms избавлен от этой проблемы (аналогичное событие <code>DocumentCompleted</code> всегда вызывается), и функционально ни в чем не уступает элементу из WPF. Можно просто добавить ссылку на System.Windows.Forms и использовать его.</p>\n\n<p><strong>Решение 2 - Использование окна за пределами экрана</strong></p>\n\n<p>Для вызова <code>BuildWindowCore</code> требуется видимое окно, однако никто не запрещает сделать координаты отрицательными и поместить окно за пределы экрана:</p>\n\n<pre><code>Window wnd = new Window();\nwnd.Content = browser;\nwnd.ShowInTaskbar = false;\nwnd.Top = -1000;\nwnd.Left = -1000;\nwnd.Width = 0;\nwnd.Height = 0;\nwnd.Show(); \n</code></pre>\n\n<p><strong>Решение 3 - Грязный хак с использованием отражения</strong></p>\n\n<p>Просто вызвать внутренний метод <code>TransitionUpTo</code>, передав в качества аргумента константу InPlaceActive (4):</p>\n\n<pre><code>using System.Reflection;\nconst int InPlaceActive = 4;\n\n//...\n\nvar method = browser.GetType().GetMethod(\"TransitionUpTo\",BindingFlags.NonPublic | BindingFlags.Instance);\nmethod.Invoke(browser, new object[] {InPlaceActive});\n</code></pre>\n"}