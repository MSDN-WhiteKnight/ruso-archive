{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":1,"last_activity_date":1566289942,"creation_date":1566289942,"answer_id":1015378,"question_id":1015207,"body":"<p>Никак. Делегат - это объект, который указывает либо на статический метод, либо на метод экземпляра и конкретный объект, у которого он будет вызываться. Создать делегат, указывающий на метод экземпляра, без указания конкретного объекта нельзя. Возможно, вместо делегата вы имели в виду <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.methodinfo?view=netstandard-2.1\" rel=\"nofollow noreferrer\">MethodInfo</a>, который как раз указывает на метод без привязки к конкретному экземпляру, и позволяет перейти к делегату с помощью метода CreateDelegate:</p>\n\n<pre><code>using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Reflection;\n\nnamespace ConsoleApplication1\n{\n    struct MyStruct\n    {\n        int a;\n\n        public void ReadA(Stream s)\n        {\n            a = s.ReadByte();\n        }\n\n        int b;\n\n        public void ReadB(Stream s)\n        {\n            b = s.ReadByte();\n        }\n\n        public delegate void ReadDelegate(Stream stream);\n\n        static Dictionary&lt;uint, MethodInfo&gt; readmethods = new Dictionary&lt;uint, MethodInfo&gt;();\n\n        static MyStruct()\n        {\n            readmethods[0] = typeof(MyStruct).GetMethod(\"ReadA\");\n            readmethods[1] = typeof(MyStruct).GetMethod(\"ReadB\");\n        }\n\n        public Dictionary&lt;uint, ReadDelegate&gt; GetReadDelegates()\n        {\n            var delegates = new Dictionary&lt;uint, ReadDelegate&gt;();\n\n            foreach (uint key in readmethods.Keys)\n            {\n                delegates[key] = (ReadDelegate)readmethods[key].CreateDelegate(typeof(ReadDelegate), this);\n            }\n\n            return delegates;\n        }\n    }    \n}\n</code></pre>\n"}