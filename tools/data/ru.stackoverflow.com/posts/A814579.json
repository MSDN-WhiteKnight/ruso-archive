{"owner":{"reputation":16068,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":10,"last_activity_date":1523802975,"last_edit_date":1523802975,"creation_date":1523802664,"answer_id":814579,"question_id":814452,"body":"<p>Можно использовать счетчики производительности <a href=\"https://msdn.microsoft.com/en-us/library/70xadeyt%28v=vs.110%29.aspx\" rel=\"noreferrer\">.NET CLR Networking</a>. Для этого необходимо включить в раздел <strong>configuration</strong> файла <strong>app.config</strong> следующий элемент:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;system.net&gt;\n   &lt;settings&gt;\n      &lt;performanceCounters enabled=\"true\"/&gt;\n   &lt;/settings&gt;\n&lt;/system.net&gt;\n</code></pre>\n\n<p>Счетчики позволяют получить количество байт, отправленных и полученных средствами классов .NET, для указанного процесса. Создадим вспомогательный класс:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.Globalization;\nusing System.Threading;\nusing System.Net;\nusing System.Text;\n\nnamespace WinformsTest\n{\n    public class NetworkStats\n    {\n        const string CategoryName = \".NET CLR Networking 4.0.0.0\";//В .NET 2.0-3.5 заменить на \".NET CLR Networking\"\n\n        static PerformanceCounter _sentcounter = null;\n        static PerformanceCounter _recvcounter = null;\n\n        public static long BytesSent\n        {\n            get\n            {\n                if (_sentcounter == null) throw new InvalidOperationException(\"Class not initialized\");\n                return _sentcounter.RawValue;\n            }\n        }\n\n        public static long BytesReceived\n        {\n            get\n            {\n                if (_recvcounter == null) throw new InvalidOperationException(\"Class not initialized\");\n                return _recvcounter.RawValue;\n            }\n        }\n\n        public static bool Initialize()\n        {\n            //устанавливаем культуру, чтобы иметь предсказуемое имя счетчика\n            CultureInfo ci = Thread.CurrentThread.CurrentCulture;\n            Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;\n            Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture;\n\n            try\n            {\n                var category = new PerformanceCounterCategory(CategoryName);\n\n                //для активации счетчиков нужно отправить хотя бы один запрос, неважно успешный или нет\n                try\n                {\n                    WebClient cl = new WebClient();\n                    string html = cl.DownloadString(\"http://example.com\");\n                    Debug.WriteLine(html.Length);\n                }\n                catch (Exception ex)\n                {\n                    Debug.WriteLine(ex.Message);\n                }\n\n                //получаем имя процесса\n                Process pr = Process.GetCurrentProcess();\n                string prname = \"\";\n                using (pr)\n                {\n                    prname = (pr.ProcessName.ToLower());\n                }\n                var instances = category.GetInstanceNames();\n\n                //находим экземпляр счетчика для процесса\n                string instance = \"\";\n                foreach (string s in instances)\n                {\n                    if (s.ToLower().Contains(prname)) instance = s;\n                }\n                if (instance == \"\") return false;\n\n                //создаем счетчики\n                _sentcounter = new PerformanceCounter(CategoryName, \"Bytes Sent\", instance, true);\n                _recvcounter = new PerformanceCounter(CategoryName, \"Bytes Received\", instance, true);\n                return true;\n            }\n            finally\n            {\n                //возвращаем исходную культуру\n                Thread.CurrentThread.CurrentCulture = ci;\n                Thread.CurrentThread.CurrentUICulture = ci;\n            }\n\n        }\n    }\n}\n</code></pre>\n\n<p>Пример использования:</p>\n\n<pre><code>public partial class Form1 : Form\n{        \n    public Form1()\n    {\n        InitializeComponent();\n        if (NetworkStats.Initialize() == false)\n        {\n            MessageBox.Show(\"NetworkStats.Initialize failed\");\n            return;\n        }\n        timer1.Enabled = true;\n    }\n\n    public string PerformRequest(string url)\n    {\n        WebClient cl = new WebClient();\n        string html = cl.DownloadString(url);\n        return html;\n    }\n\n    private void button1_Click(object sender, EventArgs e)\n    {\n        string s = PerformRequest(\"http://yandex.ru\");\n        MessageBox.Show(s.Substring(0,300));  \n    }\n\n    private void timer1_Tick(object sender, EventArgs e)\n    {\n        textBox1.Text = \"Bytes sent: \" + NetworkStats.BytesSent.ToString() +\n            \"; Bytes received: \" + NetworkStats.BytesReceived.ToString(); \n    }\n}\n</code></pre>\n"}