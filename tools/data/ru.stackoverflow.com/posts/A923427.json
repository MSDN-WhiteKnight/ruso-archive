{"owner":{"reputation":4280,"user_id":192421,"user_type":"registered","accept_rate":48,"profile_image":"https://www.gravatar.com/avatar/e287adb1e5d34863c9e5a5aa6a73d67a?s=128&d=identicon&r=PG","display_name":"pepsicoca1","link":"https://ru.stackoverflow.com/users/192421/pepsicoca1"},"is_accepted":false,"score":0,"last_activity_date":1545323208,"last_edit_date":1545323208,"creation_date":1545318269,"answer_id":923427,"question_id":923326,"body":"<blockquote>\n  <p>Мой основной вопрос состоит в том что, возможно ли во время работы\n  программы как-то( с помощью любых средств ) узнавать где находится\n  переменная,хотя бы засечь момент когда она переносится в файл\n  подкачки.</p>\n</blockquote>\n\n<p>Вопрос интересный. Надо смотреть WinAPI есть ли там какие-нибудь функции на эту тему. Думаю что таких функций нет, поэтому скорее всего для винды невозможно узнать, выгружена ли данная переменная на диск или болтается в памяти. Кстати, чтобы это узнать, надо еще анализировать карту загрузки и листинг. То есть WinAPI функция (буде такая бы и была) должна была бы в качестве параметров принимать не только имя переменной но и карту загрузки и листинг программы. </p>\n\n<p>Думаю, что для линукса такой функции тоже нет. По тем же причинам - никто не будет парсить листинг и карту загрузки в поисках имени, да и формат листинга и карты загрузки не стандартизован. Конечно, в мире линукса есть много затейников. Может быть кто-то и написал нашлепку к ядру, которая отслеживает что-то подобное хотя бы в целях отладки.</p>\n\n<blockquote>\n  <p>А также у меня вопрос. Правильно ли я понимаю, что файл подкачки\n  используется только когда не хватает места в оперативной памяти или\n  если есть долго не использующиеся переменные?</p>\n</blockquote>\n\n<p>Теоретически файл подкачки используется, когда не хватает места в оперативной памяти. Практически алгоритм файла подкачки на винде закрыт, поэтому ничего об нем сказать нельзя. Для Линукса алгоритм, конечно, известен матерым линуксоидам.</p>\n\n<p>Кстати, коллега nick_n_a подкинул свежую идею. Если отключить файл подкачки, то все переменные будут сидеть в памяти. :-)</p>\n\n<p>UPD1:</p>\n\n<p>Кстати, да. Есть же еще переменные на стеке. Интересно, а страница стека выгружается в файл подкачки? В любом случае непонятно, если пользователь запросил имя стековой переменной, а эта переменная в данный момент не существует, что должна возвращать WinAPI функция? А может эта стековая переменная и вообще никогда не будет создана в текущем запуске программы?</p>\n\n<p>Вобщем, вопрос довольно странный.</p>\n\n<p>UPD2:</p>\n\n<p>А еще есть такой вариант, что переменная (например структура) имеет размер бОльший, чем страница памяти. Тогда возможен случай, что часть переменной выгружена на диск, а часть нет. Как в этом случае нужно рассматривать переменную - как выгруженную или как не выгруженную? Или если переменная не большая, но лежит на границе страниц.</p>\n\n<p>UPD3:</p>\n\n<p>А еще есть такой вариант, что переменная расположена в куче и опять же непонятно, была она создана или нет в данный момент работы программы и будет ли вообще когда-нибудь создана в этом запуске программы. Вобщем, видимо Вам преподаватель дал такое задание просто чтобы вы подумали над проблемой. Потому, похоже, что технически эта проблема \"в общем виде\" не решается.</p>\n\n<p>UPD4:</p>\n\n<blockquote>\n  <p>Я понял что нужно получить память занимаемую процессом программы в\n  которой находится переменная. Но дело в том что я не понимаю как на\n  c++ это можно реализовать.</p>\n</blockquote>\n\n<p>Sergesama Channel, Вы не стирайте старый вопрос. Просто дописывайте уточнения. Потому что \"норот\" отвечал на Ваш старый вопрос, Вы его изменили и все ответы выглядят немного шизофренично. :-)</p>\n\n<p>Что касается получения памяти процесса, то мне вспоминается, что на винде это можно получить (выгрузить на диск в двоичном виде). Не знаю уж как это соотносится с безопасностью, но вроде бы такая функция в WinAPI была (но точно не скажу, надо смотреть). Но даже если Вы получили образ памяти процесса, то все равно непонятно, какие страницы в данный момент выгружены на диск, а какие нет.</p>\n"}