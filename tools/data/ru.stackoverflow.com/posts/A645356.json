{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":6,"last_activity_date":1490727751,"last_edit_date":1490727751,"creation_date":1490718596,"answer_id":645356,"question_id":645151,"body":"<p>Исследования показали, что время выполнения конструктора зависит от количества памяти, выделяемой под экземпляр класса. Соответственно, поля и свойства с неявными get/set (как у вас) влияют, а методы и свойства с явными get/set не влияют (память под них в экземпляре не выделяется).</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\n\nnamespace ConsoleTest\n{\n\n    public class LittleClass\n    {\n        public int Prop0 { get; set; } \n    }\n\n    public class BigClass\n    {\n        public int Prop1 { get; set; }\n        public int Prop2 { get; set; }\n        public int Prop3 { get; set; }\n        public int Prop4 { get; set; }\n        public int Prop5 { get; set; }           \n    }\n\n\n\n    class Program\n    {\n        const int N = 100000000;\n\n\n        static void Main(string[] args)\n        {\n            Stopwatch s;            \n            int i; \n\n            LittleClass lc = new LittleClass();\n            BigClass bc = new BigClass();\n\n            /* ------------------------------------------------------------------*/\n            s = new Stopwatch();            \n            Console.WriteLine(\"BigClass test...\");\n            s.Start();\n            for (i = 0; i &lt; N; i++)\n            {\n                bc = new BigClass();                \n            }\n            s.Stop();\n            Console.WriteLine(\"t=\" + s.ElapsedMilliseconds.ToString());\n            /* ------------------------------------------------------------------*/\n            s = new Stopwatch();            \n            Console.WriteLine(\"LittleClass test...\");\n            s.Start();\n            for (i = 0; i &lt; N; i++)\n            {\n                lc = new LittleClass();                \n            }\n            s.Stop();\n            Console.WriteLine(\"t=\" + s.ElapsedMilliseconds.ToString());\n            /* ------------------------------------------------------------------*/\n            Console.ReadKey();\n        }\n    }  \n\n}\n</code></pre>\n\n<p><strong>Результат</strong> (оптимизация включена)</p>\n\n<p><a href=\"https://i.stack.imgur.com/Qi4DQ.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/Qi4DQ.png\" alt=\"Результат\"></a></p>\n\n<p>По моим расчетам, время инициализации класса описывается формулой </p>\n\n<p>t=(2,6*s+43,8)/(10^7) мс</p>\n\n<p><em>где s - суммарный размер типов всех членов, под которые память выделяется (см.выше),</em></p>\n\n<p>с коэффициентом корелляции 0,99.</p>\n\n<p>Наличие постоянной составляющей, я полагаю, объясняется наличие служебной информации, под которую выделяется, предположительно, 16 байт.</p>\n\n<hr>\n\n<p>Исследование проводилось на машине с процессором с тактовой частотой 2.33 ГГц. Для вычисления времени, не зависимого от машины, надо эту формулу умножить на тактовую частоту, получая время в \"тактах процессора\":</p>\n\n<p>t = 0,6*s+10,9</p>\n"}