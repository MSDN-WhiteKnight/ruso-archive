{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":1,"last_activity_date":1545838470,"creation_date":1545838470,"answer_id":925821,"question_id":923326,"body":"<p>В Windows для этого существует функция <a href=\"https://docs.microsoft.com/ru-ru/windows/desktop/api/psapi/nf-psapi-queryworkingsetex\" rel=\"nofollow noreferrer\">QueryWorkingSetEx</a>. \"Working set\" - это набор страниц виртуальной памяти, загруженных в данный момент в физическую память. Если заданный адрес в него не попадает, то в результате QueryWorkingSetEx для него значение флага Valid будет равно нулю, если попадает - единице. </p>\n\n<p>Пример на С++:</p>\n\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;psapi.h&gt;       \n\nbool IsInPhysicalMemory(PVOID address){\n    const UINT FLAG_VALID = 0x1;\n    PSAPI_WORKING_SET_EX_INFORMATION info = {0};\n    info.VirtualAddress = address;\n\n    BOOL bResult = QueryWorkingSetEx(GetCurrentProcess(),(PVOID)&amp;info,sizeof(info));\n    if(bResult == FALSE) {printf(\"QueryWorkingSetEx failed: %d\\n\",(int)GetLastError());return false;}\n\n    return ((info.VirtualAttributes.Flags &amp; FLAG_VALID) == FLAG_VALID);\n}\n\nint x = 1;\n\nint main(int argc, char* argv[])\n{    \n    //...   \n\n    bool bResult = IsInPhysicalMemory((PVOID)&amp;x);\n    if(bResult == false) printf(\"In pagefile\\n\");\n    else printf(\"In physical memory\\n\");    \n\n    //...   \n}\n</code></pre>\n\n<p>Пример на C# (требует включения unsafe-кода):</p>\n\n<pre><code>using System;\nusing System.Text;\nusing System.Runtime.InteropServices;\n\nnamespace ConsoleApp1\n{    \n\n    unsafe class Program\n    {\n        [DllImport(\"kernel32.dll\")]\n        static extern IntPtr GetCurrentProcess();\n\n        [DllImport(\"Psapi.dll\")]\n        static extern int QueryWorkingSetEx(\n            IntPtr hProcess, \n            [In, Out] ref PSAPI_WORKING_SET_EX_INFORMATION pv, \n            uint cb);\n\n        public struct PSAPI_WORKING_SET_EX_INFORMATION\n        {\n            public IntPtr VirtualAddress;\n            public IntPtr VirtualAttributes;\n        };\n\n        public static bool IsInPhysicalMemory(IntPtr address)\n        {\n            PSAPI_WORKING_SET_EX_INFORMATION info = new PSAPI_WORKING_SET_EX_INFORMATION();\n            info.VirtualAddress = address;\n\n            int iResult = QueryWorkingSetEx(GetCurrentProcess(), ref info, (uint)Marshal.SizeOf(info));\n            if (iResult == 0) throw new System.ComponentModel.Win32Exception(Marshal.GetLastWin32Error());\n\n            return (((Int64)info.VirtualAttributes &amp; 0x1) == 0x1);\n        }\n\n        static int y = 1;\n\n        static void Main(string[] args)\n        {            \n\n            //...   \n\n            fixed (int* p = &amp;y)\n            {  \n                if (IsInPhysicalMemory((IntPtr)p)) Console.WriteLine(\"In physical memory\");\n                else Console.WriteLine(\"In pagefile\");\n            }            \n\n            //...   \n        }\n\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>Можно ли задать адрес переменной,а потом по ходу программы смотреть находится ли эта переменная по заранее заданному адресу в оперативной памяти(на c# с помощью .Net). И соответственно если ее не будет в оперативной памяти, то она находится в файле подкачки. Так ли работает адрес у переменной, или он не меняется вне зависимости от того где находится?</p>\n</blockquote>\n\n<p>Обычно да, адрес переменной в виртуальной памяти фиксирован и не меняется в ходе работы программы. (В C# переменные, которые хранятся в управляемой куче, имеют переменный адрес, но это связано с деятельностью сборщика мусора, а не с перемещением в файл подкачки.)</p>\n\n<p>Адрес страницы в физической памяти, соответствующей данному адресу в виртуальной памяти, конечно меняется в ходе того как ОС перемещает страницы. Соответствие физического и виртуального адреса можно получить в windbg в режиме отладки ядра (см. <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/-vtop\" rel=\"nofollow noreferrer\">vtop</a>), но программно в usermode, насколько я знаю, нельзя.</p>\n"}