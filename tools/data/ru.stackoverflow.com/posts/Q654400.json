{"tags":["c++","c","winapi","процесс"],"owner":{"reputation":93,"user_id":213144,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-ico46Xlp8WI/AAAAAAAAAAI/AAAAAAAAACA/V922Mk3-lTc/photo.jpg?sz=128","display_name":"AlxZahar","link":"https://ru.stackoverflow.com/users/213144/alxzahar"},"is_answered":true,"view_count":315,"answer_count":1,"score":2,"last_activity_date":1568862175,"creation_date":1492343781,"last_edit_date":1516771826,"question_id":654400,"link":"https://ru.stackoverflow.com/questions/654400/%d0%9f%d0%be%d0%bb%d1%83%d1%87%d0%b8%d1%82%d1%8c-%d0%bc%d0%b5%d1%81%d1%82%d0%be%d0%bf%d0%be%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%b8%d0%b5-%d0%bf%d1%80%d0%be%d1%86%d0%b5%d1%81%d1%81%d0%b0-%d0%bf%d0%be-%d0%b5%d0%b3%d0%be-id","title":"Получить местоположение процесса по его ID","body":"<p>Необходимо получить список запущенных процессов, а также вывести полный путь к исполняемому файлу. При обращении к некоторым системным процессам получаю ошибку #5 ERROR_ACCESS_DENIED (Access is denied).\nПробовал устанавливать привилегии, но это ни к чему не привело. В чем может быть ошибка?</p>\n\n<pre><code>#include \"stdafx.h\"\n#include &lt;iostream&gt;\n#include &lt;windows.h&gt;\n#include &lt;tlhelp32.h&gt;\n#include &lt;psapi.h&gt;\nusing namespace std;\n\nBOOL SetPrivilege(\n    HANDLE hToken,          // access token handle\n    LPCTSTR lpszPrivilege,  // name of privilege to enable/disable\n    BOOL bEnablePrivilege   // to enable or disable privilege\n)\n{\n    TOKEN_PRIVILEGES tp;\n    LUID luid;\n\n    if (!LookupPrivilegeValue(\n        NULL,            // lookup privilege on local system\n        lpszPrivilege,   // privilege to lookup\n        &amp;luid))        // receives LUID of privilege\n    {\n        return FALSE;\n    }\n\n    tp.PrivilegeCount = 1;\n    tp.Privileges[0].Luid = luid;\n    if (bEnablePrivilege)\n        tp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\n    else\n        tp.Privileges[0].Attributes = 0;\n\n    // Enable the privilege or disable all privileges.\n\n    if (!AdjustTokenPrivileges(hToken, FALSE, &amp;tp, sizeof(TOKEN_PRIVILEGES), (PTOKEN_PRIVILEGES)NULL, (PDWORD)NULL))\n    {\n        return FALSE;\n    }\n\n    if (GetLastError() == ERROR_NOT_ALL_ASSIGNED)\n    {\n        return FALSE;\n    }\n\n    return TRUE;\n}\n\nint main()\n{\n    HANDLE hProcess;\n    HANDLE hToken;\n    HANDLE snapshot;\n    TCHAR filename[MAX_PATH];\n    DWORD charsCarried = MAX_PATH;\n    PROCESSENTRY32 process;\n    int count = 0;\n\n    snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);\n    process.dwSize = sizeof(PROCESSENTRY32);\n\n    if (snapshot != INVALID_HANDLE_VALUE)\n    {\n        if (Process32First(snapshot, &amp;process))\n        {\n            do\n            {\n                count++;\n                OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken);\n                SetPrivilege(hToken, SE_DEBUG_NAME, TRUE);\n                hProcess = OpenProcess(PROCESS_QUERY_INFORMATION, FALSE, process.th32ProcessID);\n\n                if (hProcess != NULL)\n                {\n                GetModuleFileNameEx(hProcess, NULL, filename, MAX_PATH);\n                printf(\"%d - PID: %d, Name: %ls, CountThread: %d\\n\",\n                    count,\n                    process.th32ProcessID,\n                    filename,\n                    process.cntThreads);\n                }\n                else\n                {\n                    printf(\"Err: %d\\n\", GetLastError());\n                }\n                SetPrivilege(hToken, SE_DEBUG_NAME, FALSE);\n            } \n            while (Process32Next(snapshot, &amp;process));\n        }\n    }\n\n    CloseHandle(hProcess);\n    CloseHandle(snapshot);\n    return 0;\n}\n</code></pre>\n"}