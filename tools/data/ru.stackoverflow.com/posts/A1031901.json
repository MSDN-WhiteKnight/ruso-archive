{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1570423056,"creation_date":1570423056,"answer_id":1031901,"question_id":1029079,"body":"<blockquote>\n  <p>Есть масса кода написанного на IL, который требуется перевести на рельсы .NET Core, однако, при чтении документации выяснилось, что ilasm.exe там не предусмотрен.</p>\n</blockquote>\n\n<p>Это так. Однако, в .NET Core, начиная с версии 2.0, поддерживается запуск сборок, скомпилированных под .NET Framework (естественно, они должны использовать только то, что есть в .NET Core, иначе будет ошибка во время выполнения). Так что эта проблема может быть и не очень критична.</p>\n\n<blockquote>\n  <p>Вроде есть что-то в NuGet, но тянуть оттуда возможности нет, так как компьютер, на котором планируется проводить сборку изолирован от интернета. Бегать же с флешкой что-то загружать тоже не айс. </p>\n</blockquote>\n\n<p>Ну так если нельзя ни скачивать с интернета, ни приносить на флешке, как вообще вести разработку под .NET Core? Для этого нужен как минимум .NET Core SDK, который желательно иногда обновлять.</p>\n\n<blockquote>\n  <p>Но в виду того, что классы для генерации IL кода и последующего создания из него сборок есть в самой платформе, подумал набросать свой собственный небольшой компилятор. Однако к каким классам обратиться, инфы нигде не нашел.</p>\n</blockquote>\n\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit\" rel=\"nofollow noreferrer\">System.Reflection.Emit</a> ?</p>\n"}