{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":2,"last_activity_date":1489671930,"creation_date":1489671930,"answer_id":640340,"question_id":640239,"body":"<p>Если метод WriteCellInTable обращается одновременно из разных потоков к одному и тому же объекту без всякой синхронизации - это неправильно. Результаты измерения производительности такого кода не должны учитываться. Подробнее о синхронизации можно прочитать в <a href=\"https://msdn.microsoft.com/ru-ru/library/ms228964(v=vs.100).aspx\" rel=\"nofollow noreferrer\">данной статье</a></p>\n\n<p>Но допустим, вы переделываете код, заключив содержимое WriteCellInTable в конструкцию lock. Тогда конфликты исчезнут, но цель увеличения производительности не будет достигнута. Дело в том, что выигрыш в производительности путем использования многопоточности можно получить только если потоки не конкурируют за общие ресурсы: обращаясь к разделяемому ресурсу, потоки будут проводить много времени в ожидании освобождения ресурса, и в итоге толку нет. </p>\n\n<p>Чтобы действительно улучшить производительность, вы должны сделать, чтобы каждый поток оперировал только своим ограниченным множеством ячеек (например, один поток на один лист). Тогда можно ожидать какого-то улучшения производительности. </p>\n"}