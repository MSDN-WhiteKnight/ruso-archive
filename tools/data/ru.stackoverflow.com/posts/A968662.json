{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1555045046,"creation_date":1555045046,"answer_id":968662,"question_id":968172,"body":"<p>Данный фрагмент преобразует управляемую строку .NET в массив широких символов С++ и размещает его в динамической памяти. При этом он содержит потенциальную проблему: память под завершающий нуль-символ не выделяется, поэтому такой массив не будет корректно обработан многими функциями стандартной библиотеки для работы со строками (это может и не быть проблемой в конкретном коде, но помнить об этом полезно).</p>\n\n<p>В C# обычно нет необходимости в таком преобразовании в явном виде, так как String имеет метод ToCharArray для преобразования в массив символов, а при вызове нативных функций маршаллер P/Invoke умеет автоматически преобразовывать объекты string (или StringBuilder) в неуправляемые строки. Близким аналогом является метод <a href=\"https://docs.microsoft.com/ru-ru/dotnet/api/system.runtime.interopservices.marshal.stringtohglobaluni?view=netframework-4.7.2\" rel=\"nofollow noreferrer\">Marshal.StringToHGlobalUni</a>, но он выделяет память под нуль-символ. Совсем буквальный перевод будет выглядеть как-то так:</p>\n\n<pre><code>IntPtr data = Marshal.AllocHGlobal(source.Length);\nMarshal.Copy(source.ToCharArray(), 0, data, source.Length);\n</code></pre>\n"}