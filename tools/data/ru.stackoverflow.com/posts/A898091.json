{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1540537064,"creation_date":1540537064,"answer_id":898091,"question_id":829693,"body":"<p>В Windows есть <a href=\"https://docs.microsoft.com/en-us/windows/desktop/intl/about-the-spell-checker-api\" rel=\"nofollow noreferrer\">встроенный API для проверки правописания</a>, но он появился только в Windows 8. RichEdit именно его и использует.</p>\n\n<p>Пример:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;exception&gt;\n#include &lt;locale.h&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n#include &lt;windows.h&gt;\n#include &lt;wrl.h&gt;\n#include &lt;Spellcheck.h&gt;\n\n//кидает исключение, если HRESULT является ошибкой\ninline void HR(HRESULT const result)\n{\n    if (S_OK != result) {\n        wprintf(L\"Error HRESULT 0x%x!!!\\n\", (UINT)result);\n        throw std::exception();\n    }\n}\n\n//выполняет проверку орфографии в тексте и возвращает число ошибок\nint SpellCheck(LPCWSTR text) {\n    Microsoft::WRL::ComPtr&lt;ISpellCheckerFactory&gt; factory;\n\n    HR(CoCreateInstance(__uuidof(SpellCheckerFactory), nullptr,\n        CLSCTX_INPROC_SERVER, __uuidof(factory),\n        reinterpret_cast&lt;void **&gt;(factory.GetAddressOf())));\n\n    BOOL supported = FALSE;\n\n    HR(factory-&gt;IsSupported(L\"ru-RU\",\n        &amp;supported));\n\n    if (supported == FALSE) {\n        printf(\"Fatal error: Russian language not supported!\\n\");\n        throw std::exception();\n    }\n\n    Microsoft::WRL::ComPtr&lt;ISpellChecker&gt; checker;\n    HR(factory-&gt;CreateSpellChecker(L\"ru-RU\",\n        checker.GetAddressOf()));\n\n    int n_errors = 0;\n\n    Microsoft::WRL::ComPtr&lt;IEnumSpellingError&gt; errors;\n    HR(checker-&gt;Check(text,\n        errors.GetAddressOf()));\n\n    for (;;)\n    {\n        Microsoft::WRL::ComPtr&lt;ISpellingError&gt; error;\n\n        if (S_OK != errors-&gt;Next(error.GetAddressOf()))\n        {\n            break;\n        }       \n\n        n_errors++;\n\n        ULONG startIndex;\n        HR(error-&gt;get_StartIndex(&amp;startIndex));\n\n        ULONG length;\n        HR(error-&gt;get_Length(&amp;length));\n\n        std::wstring word(text + startIndex,\n            text + startIndex + length);\n        std::wcout &lt;&lt; L\"Ошибка в слове: \" &lt;&lt; word &lt;&lt; std::endl;\n\n        CORRECTIVE_ACTION action;\n        HR(error-&gt;get_CorrectiveAction(&amp;action));\n\n\n        if (action == CORRECTIVE_ACTION_GET_SUGGESTIONS) {\n            std::wcout &lt;&lt; L\" (Варианты исправления: \";\n            Microsoft::WRL::ComPtr&lt;IEnumString&gt; suggestions;\n\n            HR(checker-&gt;Suggest(word.c_str(),\n                suggestions.GetAddressOf()));\n\n            for (;;)\n            {\n                wchar_t * suggestion;\n\n                if (S_OK != suggestions-&gt;Next(1, &amp;suggestion, nullptr))\n                {\n                    break;\n                }\n\n                // Add the suggestion to a list for presentation\n                std::wcout &lt;&lt; suggestion &lt;&lt; L\" \";\n\n                CoTaskMemFree(suggestion);\n            }\n            std::wcout &lt;&lt; L\")\" &lt;&lt; std::endl;\n        }\n        std::wcout  &lt;&lt; std::endl;\n    }\n\n    return n_errors;\n}\n\nint main(int argc, char **argv)\n{\n    setlocale(LC_ALL, \"Russian\");\n    HR(CoInitializeEx(nullptr, COINIT_MULTITHREADED));  \n\n    auto text = L\"Превед, медвед!\";\n    std::wcout &lt;&lt; text &lt;&lt; std::endl;\n    std::wcout &lt;&lt; L\"*********************************\" &lt;&lt; std::endl;\n\n    auto res = SpellCheck(text);\n\n    std::wcout &lt;&lt; L\"*********************************\" &lt;&lt; std::endl;\n    std::wcout &lt;&lt; L\"Всего ошибок: \" &lt;&lt; res&lt;&lt; std::endl;\n\n    getchar();\n    return 0;\n}\n\n/*     Вывод программы:  \n\nПревед, медвед!\n*********************************\nОшибка в слове: Превед\n (Варианты исправления: Привод Провод Приведи Приведу Приведя Правде Привад Проведи Проведу Проведя )\n\nОшибка в слове: медвед\n (Варианты исправления: медведе медведи медведь медведю медведя медведей медведем медведка медведке медведки )\n\n*********************************\nВсего ошибок: 2\n*/\n</code></pre>\n\n<p><strong>Источник:</strong> <a href=\"https://visualstudiomagazine.com/articles/2013/08/01/using-the-c-spell-checking-api.aspx\" rel=\"nofollow noreferrer\">Using the C++ Spell Checking API</a></p>\n\n<p>В C++/CLI можно задействовать средства проверки правописания из WPF, как описано <a href=\"https://ru.stackoverflow.com/a/897845/240512\">здесь</a>.</p>\n"}