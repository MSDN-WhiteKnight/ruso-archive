{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1562759679,"creation_date":1562759679,"answer_id":1001409,"question_id":1000547,"body":"<blockquote>\n  <p>у самой камеры в свойствах есть только LookDirection и UpDirection</p>\n</blockquote>\n\n<p>Это по сути все, что нужно для решения задачи. Искомый вектор ортогонален обоим этим векторам, а значит является их векторным произведением - результат нужно лишь умножить на значение, зависящее от направления и величины желаемого перемещения (отрицательное для перемещения влево). Вот демонстрация перемещения влево и вправо по нажатию клавиш-стрелок:</p>\n\n<p>XAML:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;Window x:Class=\"Wpf3d.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\"\n         WindowState=\"Maximized\" KeyDown=\"Window_KeyDown\" &gt;\n    &lt;Grid HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\"\n          &gt;\n        &lt;Viewport3D Name=\"myViewport\" HorizontalAlignment=\"Stretch\"\n                    VerticalAlignment=\"Stretch\"&gt;\n\n            &lt;!-- Add a camera. --&gt;\n            &lt;Viewport3D.Camera&gt;\n                &lt;PerspectiveCamera \n                        FarPlaneDistance=\"20\" \n                        LookDirection=\"0,0,1\" \n                        UpDirection=\"0,1,0\" \n                        NearPlaneDistance=\"1\" \n                        Position=\"0,0,-6\" \n                        FieldOfView=\"45\" /&gt;\n            &lt;/Viewport3D.Camera&gt;\n\n            &lt;!-- Add models. --&gt;\n            &lt;Viewport3D.Children&gt;\n\n                &lt;ModelVisual3D&gt;\n                    &lt;ModelVisual3D.Content&gt;\n\n                        &lt;Model3DGroup &gt;\n                            &lt;Model3DGroup.Children&gt;\n\n                                &lt;!-- Lights, MeshGeometry3D and DiffuseMaterial objects are added to the ModelVisual3D. --&gt;\n                                &lt;DirectionalLight Color=\"#FFFFFFFF\" Direction=\"3,-4,5\" /&gt;\n\n                                &lt;!-- Define a red cone. --&gt;\n                                &lt;GeometryModel3D&gt;\n\n                                    &lt;GeometryModel3D.Geometry&gt;\n\n\n\n                                        &lt;MeshGeometry3D \n    Positions=\"0.293893 -0.5 0.404509  0.475528 -0.5 0.154509  0 0.5 0  0.475528 -0.5 0.154509  0 0.5 0  0 0.5 0  0.475528 -0.5 0.154509  0.475528 -0.5 -0.154509  0 0.5 0  0.475528 -0.5 -0.154509  0 0.5 0  0 0.5 0  0.475528 -0.5 -0.154509  0.293893 -0.5 -0.404509  0 0.5 0  0.293893 -0.5 -0.404509  0 0.5 0  0 0.5 0  0.293893 -0.5 -0.404509  0 -0.5 -0.5  0 0.5 0  0 -0.5 -0.5  0 0.5 0  0 0.5 0  0 -0.5 -0.5  -0.293893 -0.5 -0.404509  0 0.5 0  -0.293893 -0.5 -0.404509  0 0.5 0  0 0.5 0  -0.293893 -0.5 -0.404509  -0.475528 -0.5 -0.154509  0 0.5 0  -0.475528 -0.5 -0.154509  0 0.5 0  0 0.5 0  -0.475528 -0.5 -0.154509  -0.475528 -0.5 0.154509  0 0.5 0  -0.475528 -0.5 0.154509  0 0.5 0  0 0.5 0  -0.475528 -0.5 0.154509  -0.293892 -0.5 0.404509  0 0.5 0  -0.293892 -0.5 0.404509  0 0.5 0  0 0.5 0  -0.293892 -0.5 0.404509  0 -0.5 0.5  0 0.5 0  0 -0.5 0.5  0 0.5 0  0 0.5 0  0 -0.5 0.5  0.293893 -0.5 0.404509  0 0.5 0  0.293893 -0.5 0.404509  0 0.5 0  0 0.5 0  \" \n    Normals=\"0.7236065,0.4472139,0.5257313  0.2763934,0.4472138,0.8506507  0.5308242,0.4294462,0.7306172  0.2763934,0.4472138,0.8506507  0,0.4294458,0.9030925  0.5308242,0.4294462,0.7306172  0.2763934,0.4472138,0.8506507  -0.2763934,0.4472138,0.8506507  0,0.4294458,0.9030925  -0.2763934,0.4472138,0.8506507  -0.5308242,0.4294462,0.7306172  0,0.4294458,0.9030925  -0.2763934,0.4472138,0.8506507  -0.7236065,0.4472139,0.5257313  -0.5308242,0.4294462,0.7306172  -0.7236065,0.4472139,0.5257313  -0.858892,0.429446,0.279071  -0.5308242,0.4294462,0.7306172  -0.7236065,0.4472139,0.5257313  -0.8944269,0.4472139,0  -0.858892,0.429446,0.279071  -0.8944269,0.4472139,0  -0.858892,0.429446,-0.279071  -0.858892,0.429446,0.279071  -0.8944269,0.4472139,0  -0.7236065,0.4472139,-0.5257313  -0.858892,0.429446,-0.279071  -0.7236065,0.4472139,-0.5257313  -0.5308242,0.4294462,-0.7306172  -0.858892,0.429446,-0.279071  -0.7236065,0.4472139,-0.5257313  -0.2763934,0.4472138,-0.8506507  -0.5308242,0.4294462,-0.7306172  -0.2763934,0.4472138,-0.8506507  0,0.4294458,-0.9030925  -0.5308242,0.4294462,-0.7306172  -0.2763934,0.4472138,-0.8506507  0.2763934,0.4472138,-0.8506507  0,0.4294458,-0.9030925  0.2763934,0.4472138,-0.8506507  0.5308249,0.4294459,-0.7306169  0,0.4294458,-0.9030925  0.2763934,0.4472138,-0.8506507  0.7236068,0.4472141,-0.5257306  0.5308249,0.4294459,-0.7306169  0.7236068,0.4472141,-0.5257306  0.8588922,0.4294461,-0.27907  0.5308249,0.4294459,-0.7306169  0.7236068,0.4472141,-0.5257306  0.8944269,0.4472139,0  0.8588922,0.4294461,-0.27907  0.8944269,0.4472139,0  0.858892,0.429446,0.279071  0.8588922,0.4294461,-0.27907  0.8944269,0.4472139,0  0.7236065,0.4472139,0.5257313  0.858892,0.429446,0.279071  0.7236065,0.4472139,0.5257313  0.5308242,0.4294462,0.7306172  0.858892,0.429446,0.279071  \"                   TriangleIndices=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 \" /&gt;\n                                    &lt;/GeometryModel3D.Geometry&gt;\n\n                                    &lt;GeometryModel3D.Material&gt;\n                                        &lt;DiffuseMaterial&gt;\n                                            &lt;DiffuseMaterial.Brush&gt;\n                                                &lt;SolidColorBrush \n                            Color=\"Red\" \n                            Opacity=\"1.0\"/&gt;\n                                            &lt;/DiffuseMaterial.Brush&gt;\n                                        &lt;/DiffuseMaterial&gt;\n                                    &lt;/GeometryModel3D.Material&gt;\n\n                                &lt;/GeometryModel3D&gt;\n\n                            &lt;/Model3DGroup.Children&gt;\n                        &lt;/Model3DGroup&gt;\n\n                    &lt;/ModelVisual3D.Content&gt;\n\n                &lt;/ModelVisual3D&gt;\n\n            &lt;/Viewport3D.Children&gt;\n\n        &lt;/Viewport3D&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p>C#:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Input;\nusing System.Windows.Media.Media3D;\n\nnamespace Wpf3d\n{\n    public partial class MainWindow : Window\n    {\n        PerspectiveCamera cam;\n\n        public MainWindow()\n        {\n            InitializeComponent();\n            cam = myViewport.Camera as PerspectiveCamera;\n        }  \n\n        private void Window_KeyDown(object sender, KeyEventArgs e)\n        {\n            double factor = 0.0;\n            if (e.Key == Key.Left) factor = -1.0;\n            else if (e.Key == Key.Right) factor = 1.0;\n            else return;\n\n            Point3D p0 = cam.Position;\n            Vector3D L = cam.LookDirection;\n            Vector3D U = cam.UpDirection;\n\n            Vector3D normal = Vector3D.CrossProduct(L, U);\n            normal.Normalize();\n            normal = Vector3D.Multiply(factor, normal);            \n\n            Point3D p = p0 + normal;            \n\n            cam.Position = p;\n        }\n    }\n}\n</code></pre>\n"}