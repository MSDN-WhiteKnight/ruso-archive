{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"community_owned_date":1508178488,"score":1,"last_activity_date":1508178488,"creation_date":1508178488,"answer_id":731699,"question_id":727567,"body":"<p>Переношу в ответ информацию из комментариев, для истории.</p>\n\n<blockquote>\n  <p>Да в общем-то, в текущем виде, ответ на вопрос - \"никак\". Текстура\n  DirectX - обычное растровое изображение, уменьшение растрового\n  изображения в 2 раза означает потерю 50% информации. Для шрифта 10\n  размера при стандартном DPI это значит, что он будет нечитаем - тут\n  ничего не поделать. Но, более общая задача - представить информацию с\n  рабочего стола пользователя в таком виде, что ее можно отобразить в\n  любом масштабе, скорее всего решаема. Ведь текст в приложениях не\n  зарождается изначально в растровом виде, а выводится вызовом вполне\n  определенного набора функций из GDI, GDI+ и DirectWrite.</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>Про механику DWM мало знаю. Но для текущей задачи он бесполезен, так\n  как оперирует теми же текстурами. Я намекаю на другое - замена на\n  целевой системе библиотек gdi и DirectWrite на свои взломанные версии,\n  которые бы логировали аргументы, передаваемые функциям вывода текста,\n  чтобы потом вызвать их с другим масштабом.</p>\n</blockquote>\n"}