{"owner":{"reputation":1383,"user_id":214955,"user_type":"registered","profile_image":"https://i.stack.imgur.com/dvZt4.jpg?s=128&g=1","display_name":"B. Vandyshev","link":"https://ru.stackoverflow.com/users/214955/b-vandyshev"},"is_accepted":false,"score":4,"last_activity_date":1540943442,"last_edit_date":1540943442,"creation_date":1540942916,"answer_id":900136,"question_id":899928,"body":"<p>Мне нравятся подходы 0.0 и 0.1 из предыдущего ответа, но дублирование кода я бы сделал по-другому принципу, я бы вынес интерфейс <code>ICalculator&lt;T&gt;</code>:</p>\n\n<pre><code>public interface ICalculator&lt;T&gt;\n{\n    T Add(T a, T b);\n    T Sub(T a, T b);\n    T Mul(T a, T b);\n    T Div(T a, T b);\n    T Mod(T a, T b);\n}\n\npublic class IntCalculator : ICalculator&lt;int&gt;\n{        \n    public int Add(int a, int b) =&gt; a + b;\n    public int Sub(int a, int b) =&gt; a - b;\n    public int Mul(int a, int b) =&gt; a * b;\n    public int Div(int a, int b) =&gt; a / b;\n    public int Mod(int a, int b) =&gt; a % b;\n}\n</code></pre>\n\n<p>Потребуется реализовать <code>ICalculator&lt;T&gt;</code> для каждого типа с которым вы хотите работать, они не обязательно должны быть числами. Такой подход будет гораздо лучше если вы используете Dependency Injection, вы сможете передавать <code>ICalculator&lt;T&gt;</code> в класс где он требуется. Ну и напоследок - реализация может быть либо такой, либо можно создать универсальную с dynamic или IL.</p>\n"}