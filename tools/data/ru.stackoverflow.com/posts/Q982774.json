{"tags":["c#","шифрование"],"owner":{"reputation":497,"user_id":278293,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/rJv3r.jpg?s=128&g=1","display_name":"Luser","link":"https://ru.stackoverflow.com/users/278293/luser"},"is_answered":true,"view_count":55,"accepted_answer_id":982785,"answer_count":2,"score":1,"last_activity_date":1558172928,"creation_date":1558159700,"last_edit_date":1558160699,"question_id":982774,"link":"https://ru.stackoverflow.com/questions/982774/rijndael-%d0%be%d1%88%d0%b8%d0%b1%d0%ba%d0%b0-%d0%b8%d0%bd%d0%b8%d1%86%d0%b8%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d0%b8-%d0%b2%d0%b5%d0%ba%d1%82%d0%be%d1%80%d0%b0-iv","title":"Rijndael ошибка инициализации вектора iv","body":"<p>Не могу изменить ключ для шифрования и расшифровки пишет ошибку:</p>\n\n<blockquote>\n  <p>Rijndael заданный вектор инициализации iv не соответствует размеру блоков для этого алгоритма</p>\n</blockquote>\n\n<p>Если использую ключ <code>@\"myKey123\"</code> то всё нормально шифруется и расшифровывается</p>\n\n<p>Код:</p>\n\n<pre><code>public class FlObf\n{\n  private static readonly string Password = @\"Test123\"; // @\"myKey123\"\n // симметричный алгоритм шифрования Rijndael\n  public static void EncryptFile(string inputFile, string outputFile)\n  {\n     try\n     {\n       var UE = new UnicodeEncoding();\n       byte[] key = UE.GetBytes(Password);\n\n       string cryptFile = outputFile;\n       using (var fsCrypt = new FileStream(cryptFile, FileMode.Create))\n       using (var RMCrypto = new RijndaelManaged())\n       using (var cs = new CryptoStream(fsCrypt, RMCrypto.CreateEncryptor(key, key), CryptoStreamMode.Write))\n       {\n          using (var fsIn = new FileStream(inputFile, FileMode.Open))\n          {\n             int data;\n             while ((data = fsIn.ReadByte()) != -1)\n             {\n                cs.WriteByte((byte)data);\n             }\n          }\n       }\n    }\n    catch (Exception ex) { Console.WriteLine(ex.Message); }\n   }\n\n  // симметричный алгоритм расшифрования Rijndael\n  public static void DecryptFile(string inputFile, string outputFile)\n  {\n    try\n    {\n       var UE = new UnicodeEncoding();\n       byte[] key = UE.GetBytes(Password);\n\n       using (var fsCrypt = new FileStream(inputFile, FileMode.Open))\n       using (var RMCrypto = new RijndaelManaged())\n       using (var cs = new CryptoStream(fsCrypt, RMCrypto.CreateDecryptor(key, key), CryptoStreamMode.Read))\n       {\n         using (var fsOut = new FileStream(outputFile, FileMode.Create))\n         {\n           int data;\n           while ((data = cs.ReadByte()) != -1)\n           {\n              fsOut.WriteByte((byte)data);\n           }\n         }\n       }\n    }\n   catch (Exception ex) { Console.WriteLine(ex.Message); }\n}\n</code></pre>\n"}