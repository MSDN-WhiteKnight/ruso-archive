{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1536211872,"creation_date":1536211872,"answer_id":878036,"question_id":877997,"body":"<p>Нет, консоль Windows дружит с юникодом без необходимости задавать кодовую страницу. В этом легко убедиться, запустив такой код:</p>\n\n<pre><code>HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);\nwchar_t str[]=L\"\\x00FF\\n\";\nWriteConsoleW(consoleHandle,str,wcslen(str),NULL,NULL);\n</code></pre>\n\n<p>Однако, это не решает проблему, так как это работает <strong>только</strong> с консолью. Если стандартный вывод перенаправлен в файл, все нарушается. Можно перейти с WriteConsole на WriteFile, но это не очень удобно. </p>\n\n<p>Если нужно именно UTF-8, в VS 2015+ работает так: </p>\n\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;Windows.h&gt;\n#include &lt;cstdio&gt;\n\nint main() {\n\n    SetConsoleOutputCP(CP_UTF8);    \n    setvbuf(stdout, NULL, _IOFBF, 1000);\n\n    std::cout &lt;&lt; u8\"\\x00FF\" &lt;&lt; std::endl;\n}\n</code></pre>\n\n<p>Более традиционный способ, поддерживаемый VS2010+,  это все же использовать промежуточно широкие символы:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stddef.h&gt;\n#include &lt;io.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;iostream&gt;\n\nint main()\n{    \n    _setmode(_fileno(stdout),  _O_U8TEXT);\n\n    std::wcout &lt;&lt; L\"\\x00FF\" &lt;&lt; std::endl;    \n}\n</code></pre>\n"}