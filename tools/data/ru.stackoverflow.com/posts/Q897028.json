{"tags":["c#",".net","http"],"owner":{"reputation":23,"user_id":313350,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-PNX-l_M95Ak/AAAAAAAAAAI/AAAAAAAAAFk/Ef-gWp5pJFI/photo.jpg?sz=128","display_name":"Владимир Кремлев","link":"https://ru.stackoverflow.com/users/313350/%d0%92%d0%bb%d0%b0%d0%b4%d0%b8%d0%bc%d0%b8%d1%80-%d0%9a%d1%80%d0%b5%d0%bc%d0%bb%d0%b5%d0%b2"},"is_answered":true,"view_count":213,"accepted_answer_id":897089,"answer_count":1,"score":1,"last_activity_date":1540356391,"creation_date":1540323506,"last_edit_date":1540356147,"question_id":897028,"link":"https://ru.stackoverflow.com/questions/897028/%d0%97%d0%b0%d0%b2%d0%b8%d1%81%d0%b0%d0%b5%d1%82-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b0-c","title":"Зависает программа. C#","body":"<p>Имеется программа. Периодически зависает, не помогает ничего, т.е. только перезапуск. Место зависание в функции отправки запроса.</p>\n\n<pre><code>public async Task&lt;string&gt; PostRequestAsync(string url, string PostData, string Referer, CancellationToken ct)\n{\n    string Answer;\n    ct.ThrowIfCancellationRequested();\n    HttpWebRequest Request = (HttpWebRequest)WebRequest.Create(url);\n    if (Proxy != null)\n    {\n        Request.Proxy = Proxy;\n    }\n    else\n    {\n        Request.Proxy = null;\n    }\n    Request.Method = \"POST\";\n    Request.KeepAlive = true;\n    Request.Timeout = 10000;\n    Request.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate;\n    Request.Host = BaseUrl.Substring(8);\n    Request.KeepAlive = true;\n    byte[] bytes = Encoding.UTF8.GetBytes(PostData);\n    Request.ContentLength = bytes.Length;\n    Request.Accept = \"text/html, */*; q=0.01\";\n    Request.Headers.Add($\"Origin: {BaseUrl}\");\n    Request.Headers.Add(\"X-Requested-With: XMLHttpRequest\");\n    Request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.168 Safari/537.36 OPR/51.0.2830.40\";\n    Request.ContentType = \"application/x-www-form-urlencoded; charset=UTF-8\";\n    Request.Referer = Referer;\n    Request.Headers.Add(\"Accept-Encoding: gzip, deflate, br\");\n    Request.Headers.Add(\"Accept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\");\n    Request.CookieContainer = LoginData;\n    try\n    {\n        ct.ThrowIfCancellationRequested();\n        using (Stream stream = await Request.GetRequestStreamAsync())\n        {\n            stream.Write(bytes, 0, bytes.Length);\n        }\n        WebResponse Response = await Request.GetResponseAsync();\n        ct.ThrowIfCancellationRequested();\n        using (StreamReader streamReader = new StreamReader(Response.GetResponseStream()))\n        {\n            Answer = await streamReader.ReadToEndAsync();\n        }\n        if (Answer.Contains(\"\\\\/site\\\\/logIn\"))\n        {\n            Answer = \"1\";\n            string html = await GetClearRequestAsync(BaseUrl, ct);\n            var parser = new HtmlParser();\n            var document = parser.Parse(html);\n            string name = document.GetElementById(\"authentification\").Children[1].GetAttribute(\"name\").ToLower();\n            string value = document.GetElementById(\"authentification\").Children[1].GetAttribute(\"value\").ToLower();\n            string PostData1 = $\"{name}={value}&amp;login={login}&amp;password={password}&amp;redirection=&amp;isBoxStyle=\";\n            await LoginRequestAsync(PostData1, ct);\n        }\n        Request.Abort();\n        Response.Close();\n    }\n    catch\n    {\n        Request.Abort();\n        Answer = \"0\";\n    }\n    return Answer;\n}\n</code></pre>\n\n<p>Пытался разбираться в сути проблемы. Было выявлено, что наиболее часто происходит такая проблема в двух случаях:\nа) Плохое соединение с интернетом\nб) Слабый ПК (ещё не совсем потверждено)\nСлучай \"а\" пытался исправить путем добавление цикла do while с проверкой на положительный ответ от сервера. Не вышло. Была мысль, что это связано с бесконечными попытками открытия соединения и добавил проверку такого рода </p>\n\n<pre><code>if(System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable())\n</code></pre>\n\n<p>Тоже мимо. Теперь встал в тупик как же выявлять и присекать подобные случаи. Можно заметить что в функцию передается Cancellationtoken, отменить работу программы с его помощью не удаётся.</p>\n\n<p>P.S. Работа возможно только с HttpWebRequest, остальные средства либо не подходят по удобству реализации, либо некорректно работают с сервером, стабильности добился только при таком подходе.</p>\n"}