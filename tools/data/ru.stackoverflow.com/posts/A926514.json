{"owner":{"reputation":2227,"user_id":298154,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0YvNK.jpg?s=128&g=1","display_name":"NewView","link":"https://ru.stackoverflow.com/users/298154/newview"},"is_accepted":false,"score":0,"last_activity_date":1545998098,"creation_date":1545998098,"answer_id":926514,"question_id":926467,"body":"<p>Решение все-же есть как очистить объект типа IEnumerable полученный через рефлексию.\nУверен, в нем наверняка есть подводные камни.. </p>\n\n<p>Как это реализовать:</p>\n\n<pre><code>    private Object GetIEnumerableEle(PropertyInfo p, ref bool IsIenumerable)\n    {\n        Type[] t0;\n        Type t1 = ((p == null) ? null : p.PropertyType),\n             t2, t3;\n        Object ie = null;\n        IsIenumerable = false;\n\n        if ((t1 != null) &amp;&amp; (t1.IsGenericType))\n        {\n            t2 = p.PropertyType.GetGenericTypeDefinition();\n\n            if ((t2 != null) &amp;&amp; ((t2 == typeof(List&lt;&gt;)) || (t2 == typeof(IEnumerable&lt;&gt;))))\n            {\n                IsIenumerable = true;\n\n                if (\n                    ((t0 = t1.GetGenericArguments()) == null) ||\n                    (t0[0] == null)\n                   )\n                    return ie;\n\n                if ((t3 = t2.MakeGenericType(t0[0])) == null)\n                    return ie;\n\n                return Activator.CreateInstance(t3);\n            }\n        }\n        return ie;\n    }\n</code></pre>\n\n<p>Как этим пользоваться:</p>\n\n<pre><code>    PropertyInfo[] p = ...;\n\n    if (p[n].PropertyType.IsGenericType)\n    {\n        bool IsIenumerable = false;\n        Object ie = GetIEnumerableEle(p[n], ref IsIenumerable);\n\n        if ((IsIenumerable) &amp;&amp; (ie != null))\n            p[n].SetValue(obj, ie, null);\n    }\n</code></pre>\n\n<p>Ларчик то несложно открывался :)</p>\n"}