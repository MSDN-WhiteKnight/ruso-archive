{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":false,"score":0,"last_activity_date":1537855272,"creation_date":1537855272,"answer_id":885206,"question_id":875489,"body":"<p>На самом деле можно, это называется <a href=\"https://docs.microsoft.com/en-us/windows/desktop/menurc/dialog-resource\" rel=\"nofollow noreferrer\">Ресурсы диалоговых окон</a>. Несмотря на название, их область использования куда шире, чем диалоговые окна в традиционном смысле. Например, ничто не мешает:</p>\n\n<ul>\n<li><p>Сделать главное окно приложение диалоговым, если оно состоит исключительно из элементов управления и не содержит сложной логики отрисовки.</p></li>\n<li><p>Создать диалоговое окно со стилем WS_CHILD и вкладывать его в другие окна (аналог User Control).</p></li>\n</ul>\n\n<p>Пример. Нарисуем с помощью редактора ресурсов Visual Studio такое диалоговое окно:</p>\n\n<p><a href=\"https://i.stack.imgur.com/X97IH.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/X97IH.png\" alt=\"resource\"></a></p>\n\n<p>Редактор ресурсов не содержится в студии Express-версий, поэтому при их использовании нужно будет найти сторонний редактор или редактировать определения ресурсов вручную (см. ниже).</p>\n\n<p>В результате получим файл ресурсов и заголовочный файл. Откроем их в текстовом редакторе и удалим лишний текст, сгенерированный IDE, получим в результате:</p>\n\n<p><strong>Resource.h</strong> (идентификаторы элементов управления, используются для связи кода с UI)</p>\n\n<pre><code>#define IDD_CALC                        103\n\n#define IDC_INPUT1                      1000 \n#define IDC_INPUT2                      1001\n#define IDC_PLUS                        1002\n#define IDC_MINUS                       1003\n#define IDC_MULTI                       1004\n#define IDC_DIV                         1005\n</code></pre>\n\n<p><strong>Resource.rc</strong> (определение UI, аналог XAML)</p>\n\n<pre><code>#include \"resource.h\"\n#include \"windows.h\"\n\nLANGUAGE LANG_RUSSIAN, SUBLANG_DEFAULT\n\n/////////////////////////////////////////////////////////////////////////////\n//\n// Dialog\n//\n\nIDD_CALC DIALOGEX 0, 0, 217, 89\nSTYLE DS_SETFONT | DS_MODALFRAME | DS_FIXEDSYS | WS_POPUP | WS_CAPTION | WS_SYSMENU\nCAPTION \"Супер калькулятор\"\nFONT 8, \"MS Shell Dlg\", 0, 0, 0x1\nBEGIN\n    DEFPUSHBUTTON   \"Выход\",IDOK,160,68,50,14,WS_GROUP\n    EDITTEXT        IDC_INPUT1,15,14,47,15,ES_AUTOHSCROLL | ES_NUMBER\n    EDITTEXT        IDC_INPUT2,15,36,47,15,ES_AUTOHSCROLL | ES_NUMBER\n    PUSHBUTTON      \"+\",IDC_PLUS,77,15,18,12\n    PUSHBUTTON      \"-\",IDC_MINUS,105,15,18,12\n    PUSHBUTTON      \"*\",IDC_MULTI,77,36,18,12\n    PUSHBUTTON      \"/\",IDC_DIV,105,36,18,12\nEND\n</code></pre>\n\n<p>Далее добавим код:</p>\n\n<p><strong>Model.cpp</strong></p>\n\n<pre><code>#include &lt;windows.h&gt;\n#include \"resource.h\"\n\n//Логика вычислений\nBOOL Calculate(UINT idAction, int arg1, int arg2, int* pOutput) {\n\n    if (pOutput == NULL) return FALSE;\n\n    if (idAction == IDC_DIV &amp;&amp; arg2 == 0) return FALSE;\n\n    switch (idAction) {\n\n    case IDC_PLUS:  *pOutput = arg1 + arg2; return TRUE;\n    case IDC_MINUS: *pOutput = arg1 - arg2; return TRUE;\n    case IDC_MULTI: *pOutput = arg1 * arg2; return TRUE;\n    case IDC_DIV:   *pOutput = arg1 / arg2; return TRUE;\n\n    }\n    return FALSE;\n}\n</code></pre>\n\n<p><strong>ViewModel.cpp</strong></p>\n\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;tchar.h&gt;\n#include \"resource.h\"\n\n//объявления функций\nBOOL                InitInstance(HINSTANCE, int);\nINT_PTR CALLBACK    DlgCalc_Callback(HWND, UINT, WPARAM, LPARAM);\nBOOL Calculate(UINT idAction, int arg1, int arg2, int* pOutput);\n\n// Глобальные переменные\nHINSTANCE hInst;                                \nHWND hWnd = NULL;\n\n// Точка входа\nint APIENTRY wWinMain(_In_ HINSTANCE hInstance,\n                     _In_opt_ HINSTANCE hPrevInstance,\n                     _In_ LPWSTR    lpCmdLine,\n                     _In_ int       nCmdShow)\n{\n    UNREFERENCED_PARAMETER(hPrevInstance);\n    UNREFERENCED_PARAMETER(lpCmdLine);        \n\n    // Выполнить инициализацию приложения\n    if (!InitInstance (hInstance, nCmdShow))\n    {\n        return FALSE;\n    }\n\n    MSG msg;\n\n    // Цикл основного сообщения\n    while (GetMessage(&amp;msg, nullptr, 0, 0))\n    {        \n          TranslateMessage(&amp;msg);\n          DispatchMessage(&amp;msg);        \n    }\n\n    return (int) msg.wParam;\n}\n\n//Инициализация приложения\nBOOL InitInstance(HINSTANCE hInstance, int nCmdShow)\n{\n   hInst = hInstance; \n\n   //создать окно\n   CreateDialog(hInstance, MAKEINTRESOURCE(IDD_CALC), NULL, DlgCalc_Callback);\n\n   if (!hWnd)\n   {\n      return FALSE;\n   }\n\n   //отобразить окно\n   ShowWindow(hWnd, nCmdShow);   \n\n   return TRUE;\n}\n\n\n//Логика обработки команд в окне\nINT_PTR ProcessCommand(HWND hDlg, UINT idAction) {\n\n    BOOL success = FALSE;\n    int x, y, res;\n\n    if (idAction == IDOK || idAction == IDCANCEL)\n    {\n        //закрыть окно\n        DestroyWindow(hDlg);        \n        return (INT_PTR)TRUE;\n    }\n\n    if (idAction &gt;= IDC_PLUS &amp;&amp; idAction &lt;= IDC_DIV) {\n\n        //получение входных данных\n        x = GetDlgItemInt(hDlg, IDC_INPUT1, &amp;success, TRUE);\n        if (success == FALSE) {\n            MessageBox(hDlg, L\"Введенное число некорректно\", NULL, MB_OK | MB_ICONERROR);\n            return (INT_PTR)TRUE;\n        }\n\n        y = GetDlgItemInt(hDlg, IDC_INPUT2, &amp;success, TRUE);\n        if (success == FALSE) {\n            MessageBox(hDlg, L\"Введенное число некорректно\", NULL, MB_OK | MB_ICONERROR);\n            return (INT_PTR)TRUE;\n        }\n\n        //выполнение команды\n        success = Calculate(idAction, x, y, &amp;res);\n        if (success == FALSE) {\n            MessageBox(hDlg, L\"При вычислении произошла ошибка\", NULL, MB_OK | MB_ICONERROR);\n            return (INT_PTR)TRUE;\n        }\n\n        //вывод результата\n        SetDlgItemText(hDlg, IDC_INPUT2, L\"\");\n        SetDlgItemInt(hDlg, IDC_INPUT1, res, TRUE);\n        return (INT_PTR)TRUE;\n    }\n\n    return (INT_PTR)FALSE;\n}\n\n\nINT_PTR CALLBACK DlgCalc_Callback(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)\n{\n    UNREFERENCED_PARAMETER(lParam);\n    UINT idAction;\n\n    switch (message)\n    {\n    case WM_INITDIALOG:     \n        hWnd = hDlg;\n        return (INT_PTR)TRUE;\n\n    case WM_COMMAND:    \n        idAction = LOWORD(wParam);        \n        return ProcessCommand(hDlg, idAction);\n\n    case WM_DESTROY:\n        PostQuitMessage(0);\n        break;\n    }\n    return (INT_PTR)FALSE;\n}\n</code></pre>\n\n<p>В итоге получаем приложение с разделением на декларативное определение UI, логику UI и логику вычислений, хотя по возможностям это и далеко от WPF/XAML. </p>\n"}