{"owner":{"reputation":11,"user_id":344699,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-B6sNqluhdso/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rejfVYxMIGeqwEbzvMUgGZlwRAONQ/photo.jpg?sz=128","display_name":"Сергей Синельников","link":"https://ru.stackoverflow.com/users/344699/%d0%a1%d0%b5%d1%80%d0%b3%d0%b5%d0%b9-%d0%a1%d0%b8%d0%bd%d0%b5%d0%bb%d1%8c%d0%bd%d0%b8%d0%ba%d0%be%d0%b2"},"is_accepted":false,"score":1,"last_activity_date":1563457087,"creation_date":1563457087,"answer_id":1004337,"question_id":1004275,"body":"<p>Вот так как-то</p>\n\n<pre><code>interface ICommonData\n{\n    int Id { get; set; }\n    string Name { get; set; }\n}\nstruct DataA : ICommonData\n{\n    string DataA1 { get; set; }\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n</code></pre>\n\n<p>и т.д....затем</p>\n\n<pre><code>     private Dictionary&lt;byte, Type&gt; types;\n     private List&lt;ICommonData&gt; data = new List&lt;ICommonData&gt;();\n\n        types = new Dictionary&lt;byte, Type&gt;();\n        types[1] = typeof(DataA);\n        types[2] = typeof(DataB);\n        types[3] = typeof(DataC);\n        types[4] = typeof(DataD);\n        types[5] = typeof(DataE);\n</code></pre>\n\n<p>и уже далее</p>\n\n<pre><code>        for (byte i = 0; i &lt; byte.MaxValue; i++)\n        {\n            if (types.ContainsKey(i))\n            {\n                data.Add((ICommonData)Activator.CreateInstance(types[i]));\n            }\n        }\n</code></pre>\n"}