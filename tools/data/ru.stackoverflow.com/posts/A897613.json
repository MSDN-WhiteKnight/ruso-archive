{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1540444195,"creation_date":1540444195,"answer_id":897613,"question_id":895892,"body":"<p>Как-то так:</p>\n\n<pre><code>using System;\nusing System.Runtime.InteropServices;\n\nnamespace SvcInstaller\n{\n    class ServiceInstaller\n    {\n\n        #region DLLImport\n        [DllImport(\"advapi32.dll\")]\n        public static extern IntPtr OpenSCManager(string lpMachineName, string lpSCDB, int scParameter);\n        [DllImport(\"Advapi32.dll\")]\n        public static extern IntPtr CreateService(IntPtr SC_HANDLE, string lpSvcName, string lpDisplayName,\n        int dwDesiredAccess, int dwServiceType, int dwStartType, int dwErrorControl, string lpPathName,\n        string lpLoadOrderGroup, int lpdwTagId, string lpDependencies, string lpServiceStartName, string lpPassword);\n        [DllImport(\"advapi32.dll\")]\n        public static extern void CloseServiceHandle(IntPtr SCHANDLE);\n        [DllImport(\"advapi32.dll\")]\n        public static extern int StartService(IntPtr SVHANDLE, int dwNumServiceArgs, string lpServiceArgVectors);\n        [DllImport(\"advapi32.dll\", SetLastError = true)]\n        public static extern IntPtr OpenService(IntPtr SCHANDLE, string lpSvcName, int dwNumServiceArgs);\n        [DllImport(\"advapi32.dll\")]\n        public static extern int DeleteService(IntPtr SVHANDLE);\n\n        #endregion DLLImport               \n\n\n        /// &lt;summary&gt;\n        /// This method installs and runs the service in the service control manager.\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"svcPath\"&gt;The complete path of the service.&lt;/param&gt;\n        /// &lt;param name=\"svcName\"&gt;Name of the service.&lt;/param&gt;\n        /// &lt;param name=\"svcDispName\"&gt;Display name of the service.&lt;/param&gt;\n        /// &lt;returns&gt;True if the process went thro successfully. False if there was any error.&lt;/returns&gt;\n        public static bool InstallService(string svcPath, string svcName, string svcDispName)\n        {\n            #region Constants declaration.\n            int SC_MANAGER_CREATE_SERVICE = 0x0002;\n            int SERVICE_WIN32_OWN_PROCESS = 0x00000010;\n            //int SERVICE_DEMAND_START = 0x00000003;\n            int SERVICE_ERROR_NORMAL = 0x00000001;\n            int STANDARD_RIGHTS_REQUIRED = 0xF0000;\n            int SERVICE_QUERY_CONFIG = 0x0001;\n            int SERVICE_CHANGE_CONFIG = 0x0002;\n            int SERVICE_QUERY_STATUS = 0x0004;\n            int SERVICE_ENUMERATE_DEPENDENTS = 0x0008;\n            int SERVICE_START = 0x0010;\n            int SERVICE_STOP = 0x0020;\n            int SERVICE_PAUSE_CONTINUE = 0x0040;\n            int SERVICE_INTERROGATE = 0x0080;\n            int SERVICE_USER_DEFINED_CONTROL = 0x0100;\n            int SERVICE_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED |\n            SERVICE_QUERY_CONFIG |\n            SERVICE_CHANGE_CONFIG |\n            SERVICE_QUERY_STATUS |\n            SERVICE_ENUMERATE_DEPENDENTS |\n            SERVICE_START |\n            SERVICE_STOP |\n            SERVICE_PAUSE_CONTINUE |\n            SERVICE_INTERROGATE |\n            SERVICE_USER_DEFINED_CONTROL);\n            int SERVICE_AUTO_START = 0x00000002;\n            #endregion Constants declaration.\n            try\n            {\n                IntPtr sc_handle = OpenSCManager(null, null, SC_MANAGER_CREATE_SERVICE);\n                if (sc_handle.ToInt32() != 0)\n                {\n                    IntPtr sv_handle = CreateService(sc_handle, svcName, svcDispName, SERVICE_ALL_ACCESS, SERVICE_WIN32_OWN_PROCESS, SERVICE_AUTO_START, SERVICE_ERROR_NORMAL, svcPath, null, 0, null, null, null);\n                    if (sv_handle.ToInt32() == 0)\n                    {\n                        CloseServiceHandle(sc_handle);\n                        return false;\n                    }\n                    else\n                    {\n                        //now trying to start the service\n                        int i = StartService(sv_handle, 0, null);\n                        // If the value i is zero, then there was an error starting the service.\n                        // note: error may arise if the service is already running or some other problem.\n                        if (i == 0)\n                        {\n                            //Console.WriteLine(\"Couldnt start service\");\n                            return false;\n                        }\n                        //Console.WriteLine(\"Success\");\n                        CloseServiceHandle(sc_handle);\n                        return true;\n                    }\n                }\n                else\n                    //Console.WriteLine(\"SCM not opened successfully\");\n                    return false;\n            }\n            catch (Exception e)\n            {\n                throw e;\n            }\n        }\n        /// &lt;summary&gt;\n        /// This method uninstalls the service from the service conrol manager.\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"svcName\"&gt;Name of the service to uninstall.&lt;/param&gt;\n        public static bool UnInstallService(string svcName)\n        {\n            int GENERIC_WRITE = 0x40000000;\n            IntPtr sc_hndl = OpenSCManager(null, null, GENERIC_WRITE);\n            if (sc_hndl.ToInt32() != 0)\n            {\n                int DELETE = 0x10000;\n                IntPtr svc_hndl = OpenService(sc_hndl, svcName, DELETE);\n                //Console.WriteLine(svc_hndl.ToInt32());\n                if (svc_hndl.ToInt32() != 0)\n                {\n                    int i = DeleteService(svc_hndl);\n                    if (i != 0)\n                    {\n                        CloseServiceHandle(sc_hndl);\n                        return true;\n                    }\n                    else\n                    {\n                        CloseServiceHandle(sc_hndl);\n                        return false;\n                    }\n                }\n                else\n                    return false;\n            }\n            else\n                return false;\n        }\n\n        static void Test()\n        {\n\n            string svcPath;\n            string svcName;\n            string svcDispName;\n\n            //path to the service that you want to install\n            svcPath = @\"C:\\build\\service\\Debug\\Service.exe\";\n            svcDispName = \"Service Display Name\";\n            svcName = \"Service Name\";\n\n            ServiceInstaller.InstallService(svcPath, svcName, svcDispName);            \n\n\n        }\n    }\n}\n</code></pre>\n\n<p>Источник: <a href=\"https://www.c-sharpcorner.com/article/installing-a-service-programmatically/\" rel=\"nofollow noreferrer\">https://www.c-sharpcorner.com/article/installing-a-service-programmatically/</a></p>\n"}