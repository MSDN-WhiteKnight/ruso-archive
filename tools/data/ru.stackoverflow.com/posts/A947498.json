{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1550739394,"last_edit_date":1550739394,"creation_date":1550738947,"answer_id":947498,"question_id":947437,"body":"<p>Поместите класс в отдельную DLL на C++/CLI, и пометьте его модификатором public:</p>\n\n<pre><code>public ref class XY\n</code></pre>\n\n<p>После этого просто добавьте ссылку на эту DLL во всех проектах, где вам нужен этот класс, и вы сможете его использовать. Заголовочные файлы в .NET не используются, так как вся необходимая информация о типах есть в метаданных сборки.</p>\n\n<p>Казалось бы, все просто. Но есть одна проблема - сборки на C++/CLI (mixed mode) не могут быть AnyCPU, а на C# - могут. Соответственно, если вы делаете, допустим, 32-битную сборку на C++/CLI, добавляете ссылку на нее в AnyCPU проекте, он скомпилируется, но, когда дойдет до загрузки этой сборки в 64-разрядный процесс, все упадет. Решить эту проблему можно созданием отдельной сборки под каждую процессорную архитектуру и ручной загрузкой нужной во время выполнения в обработчике события <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.appdomain.assemblyresolve?view=netframework-4.7\" rel=\"nofollow noreferrer\">AppDomain.AssemblyResolve</a>.</p>\n"}