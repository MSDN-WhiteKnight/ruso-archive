{"owner":{"reputation":187498,"user_id":10105,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/d8Z7F.png?s=128&g=1","display_name":"VladD","link":"https://ru.stackoverflow.com/users/10105/vladd"},"is_accepted":false,"score":2,"last_activity_date":1518734921,"last_edit_date":1518734921,"creation_date":1518732512,"answer_id":785790,"question_id":785708,"body":"<p>Нет, то, что вы хотите, невозможно.</p>\n\n<p>Вы собираетесь вернуть <em>ссылку</em> на поле <code>m_hide_ptr_</code>. Это поле, вместе со всем объектом, находится в управляемой куче, и, следовательно, может быть перемещено вместе с объектом. Хотя сборщик мусора при этом и обновляет <em>управляемые</em> ссылки, вашу неуправляемую ссылку он не обновит, поэтому взятие такой ссылки запрещено.</p>\n\n<p>Без ссылки код компилируется:</p>\n\n<pre><code>static void* operator &amp;(const SomePtr^ value)\n{\n    return value-&gt;m_hide_ptr_;\n}\n</code></pre>\n\n<p>(ну и ещё вам следует объявить его открытым, а то им никто не сможет воспользоваться).</p>\n\n<p>Но при этом ваша цель — получить адрес поля/ссылку на поле — не достигается. Повторюсь, адрес переменной в управляемой куче вам взять не дадут, а если вы каким-то извращённым способом и исхитритесь, первый же пробег сборщика мусора превратит ваш указатель/ссылку в висящий.</p>\n\n<hr>\n\n<p>На уровне C# вы не можете вызвать ваш перегруженный оператор <code>&amp;</code> потому, что с точки зрения C# перегружать унарный <code>&amp;</code> нельзя. Поэтому C# трактует <code>&amp;</code> как взятие адреса, а брать адрес управляемого объекта <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/misc/cs0208\" rel=\"nofollow noreferrer\">нельзя</a>.</p>\n\n<p>Вы можете, по идее, выкрутится, вызвав операцию напрямую:</p>\n\n<pre><code>SomePtr obj = new SomePtr();\nunsafe\n{\n    void* p = SomePtr.op_AddressOf(obj);\n}\n</code></pre>\n\n<p>В этом случае, вероятно, имеет смысл назвать использовать обыкновенную функцию-член. Но это, снова-таки, для случая, если ваш оператор возвращает чистый указатель, а не ссылку.</p>\n"}