{"owner":{"reputation":16058,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":0,"last_activity_date":1546444169,"creation_date":1546444169,"answer_id":927746,"question_id":927663,"body":"<p>Как-то так:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleTest\n{\n    //узел дерева\n    public class TreeNode\n    {\n        public TreeNode(string n)\n        {\n            this.Name = n;\n            this.Children = new List&lt;TreeNode&gt;();\n        }\n\n        public string Name { get; set; } //имя узла\n        public int X { get; set; } //горизонтальная координата для отображения (заполняется TreeCalcCoordinates)\n        public int Y { get; set; } //вертикальная координата для отображения (заполняется TreeCalcCoordinates) \n        public List&lt;TreeNode&gt; Children { get; set; } //список дочерних узлов\n    }\n\n    class Program\n    {\n        //получает суммарное количество всех дочерних узлов (высоту поддерева)\n        static int GetChildrenCountSum(TreeNode node)\n        {\n            if (node.Children.Count == 0) return 1;\n\n            int c = 0;\n\n            foreach (TreeNode child in node.Children) c += GetChildrenCountSum(child);\n\n            return c;\n        }\n\n        //получает максимальную ширину узла в дереве\n        static void TreeGetMaxWidth(TreeNode root, ref int maxwidth)\n        {\n            if (root.Name.Length &gt; maxwidth) maxwidth = root.Name.Length;\n\n            foreach (TreeNode child in root.Children) TreeGetMaxWidth(child, ref maxwidth);\n\n        }\n\n        static void TreeCalcCoordinates_Recursive(TreeNode node, int basex, int basey, int dx)\n        {            \n            node.X = basex;\n            node.Y = basey;\n\n            int c = basey;\n            foreach (TreeNode child in node.Children)\n            {\n                TreeCalcCoordinates_Recursive(child, basex + dx, c, dx);\n                c += GetChildrenCountSum(child);                \n            }\n        }\n\n        //вычисляет координаты узлов в дереве\n        static void TreeCalcCoordinates(TreeNode root)\n        {\n            int maxwidth = 0;\n            TreeGetMaxWidth(root, ref maxwidth);\n            int dx = maxwidth + 1;            \n\n            TreeCalcCoordinates_Recursive(root, 0, 0, dx);\n        }\n\n        static void TreePrint_Recursive(TreeNode node)\n        {\n            Console.SetCursorPosition(node.X, node.Y);\n            Console.Write(node.Name);\n\n            foreach(TreeNode child in node.Children)\n            {\n                TreePrint_Recursive(child);\n            }\n        }\n\n        //выводит дерево в консоль, используя вычисленные координаты\n        static void TreePrint(TreeNode root)\n        {\n            Console.Clear();\n            TreePrint_Recursive(root);\n        }\n\n\n        static void Main(string[] args)\n        {\n            //заполняем дерево тестовыми данными\n            TreeNode root = new TreeNode(\"Животные\");\n\n            TreeNode node = new TreeNode(\"Млекопитающие\");\n            TreeNode node2 = new TreeNode(\"Хищные\");\n            node2.Children.Add(new TreeNode(\"Волк\"));\n            node2.Children.Add(new TreeNode(\"Лиса\"));\n            node.Children.Add(node2);\n            node2 = new TreeNode(\"Зайцеобразные\");\n            node2.Children.Add(new TreeNode(\"Заяц\"));\n            node2.Children.Add(new TreeNode(\"Кролик\"));\n            node.Children.Add(node2);\n            root.Children.Add(node);            \n\n            node = new TreeNode(\"Птицы\");\n            node.Children.Add(new TreeNode(\"Пингвин\"));\n            node.Children.Add(new TreeNode(\"Попугай\"));\n            node.Children.Add(new TreeNode(\"Ворона\"));            \n            root.Children.Add(node);\n\n            node = new TreeNode(\"Пресмыкающиеся\");\n            node.Children.Add(new TreeNode(\"Черепаха\"));\n            node.Children.Add(new TreeNode(\"Крокодил\"));\n            root.Children.Add(node);\n\n            //вычисляем координаты\n            TreeCalcCoordinates(root);\n\n            //выводим дерево в консоль\n            TreePrint(root);\n\n            Console.ReadKey();\n        }\n\n    }\n}\n</code></pre>\n"}