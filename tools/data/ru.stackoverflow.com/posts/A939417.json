{"owner":{"reputation":16137,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":3,"last_activity_date":1549008880,"creation_date":1549008880,"answer_id":939417,"question_id":939158,"body":"<p>Во-первых, добавьте обработку исключений. Сейчас у вас нечему вызвать сообщение об ошибке (ну и вообще, сервер должен не выводить сообщение, а заносить запись в лог). Во-вторых, неплохо бы провести рефакторинг:</p>\n\n<ol>\n<li><p>Классу Client не нужен конструктор, так как у него нет состояния.</p></li>\n<li><p>Классу Server не нужен финализатор, так как у него нет нормальной реализации IDisposable, да и его время жизни все равно совпадает со временем жизни приложения.</p></li>\n<li><p>У класса Server конструктор уходит в бесконечный цикл. Это странный способ, лучше вынести цикл в отдельный метод.</p></li>\n<li><p><code>Client.GetStream().Read</code> - потенциальная утечка неуправляемых ресурсов. Объекты IDisposable нужно всегда сохранять в переменную и оборачивать их использование в using. Никогда не знаешь, отработает ли финализатор по нормальному.</p></li>\n</ol>\n\n<p>В итоге получаем такой код:</p>\n\n<pre><code>using System;\nusing System.IO;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace ConsoleApp1\n{\n    class Server\n    {\n        TcpListener Listener;\n        public Server(int Port)\n        {\n            Listener = new TcpListener(IPAddress.Any, Port);\n        }\n\n        public void Run()\n        {\n            Listener.Start();\n            Client.ReplyClient(Listener.AcceptTcpClient());\n            while (true)\n            {\n                TcpClient Client = Listener.AcceptTcpClient();\n                Thread Thread = new Thread(new ParameterizedThreadStart(ClientThread));\n                Thread.Start(Client);\n            }\n        }\n\n        static void Main(string[] args)\n        {\n            try\n            {\n                var Server = new Server(80);\n                Server.Run();\n            }\n            catch (Exception ex)\n            {\n                //запись в лог (можно заменить на Console.WriteLine на время отладки)\n                File.WriteAllText(\n                    \"server.log\",\n                    DateTime.Now.ToString() + Environment.NewLine + ex.ToString() + Environment.NewLine\n                    );\n            }\n        }\n\n        static void ClientThread(Object StateInfo)\n        {\n            try\n            {\n                Client.ReplyClient((TcpClient)StateInfo);\n            }\n            catch (Exception ex)\n            {\n                //запись в лог (можно заменить на Console.WriteLine на время отладки)\n                File.WriteAllText(\n                    \"server.log\",\n                    DateTime.Now.ToString() + Environment.NewLine + ex.ToString() + Environment.NewLine\n                    );\n            }\n        }\n    }\n\n    class Client\n    {\n        public static void ReplyClient(TcpClient Client)\n        {\n            string Request = \"\";\n            byte[] Buffer = new byte[1024];\n            int Count;\n            Stream stream;\n\n            try\n            {\n                while (true)\n                {\n                    stream = Client.GetStream();\n                    using (stream)\n                    {\n                        Count = stream.Read(Buffer, 0, Buffer.Length);\n                        if (Count &lt;= 0) break;\n                    }\n\n                    Request += Encoding.ASCII.GetString(Buffer, 0, Count);\n                    if (Request.IndexOf(\"\\r\\n\\r\\n\") &gt;= 0 || Request.Length &gt; 4096)\n                    {\n                        break;\n                    }\n                }\n\n                string Html = Моя_Процедура_Над_Телом_запроса(Request);\n                string Str = \"HTTP/1.1 200 OK\\nContent-type: text/html\\nContent-Length:\" + Html.Length.ToString() + \"\\n\\n\" + Html;\n                byte[] Buff = Encoding.ASCII.GetBytes(Str);\n\n                stream = Client.GetStream();\n                using (stream)\n                {\n                    stream.Write(Buff, 0, Buff.Length);\n                }\n            }\n            finally { Client.Close(); }\n        }\n    }\n}\n</code></pre>\n\n<p>Вообще, если нужен HTTP сервер, можно использовать <a href=\"https://docs.microsoft.com/ru-ru/dotnet/api/system.net.httplistener?view=netcore-2.2\" rel=\"nofollow noreferrer\">HttpListener</a>, это проще. </p>\n"}