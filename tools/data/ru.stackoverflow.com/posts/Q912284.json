{"tags":["c#","wpf"],"owner":{"reputation":101,"user_id":312216,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/63475be41ffbbdb764f884160eeafdac?s=128&d=identicon&r=PG&f=1","display_name":"Liidia","link":"https://ru.stackoverflow.com/users/312216/liidia"},"is_answered":true,"view_count":84,"accepted_answer_id":912546,"answer_count":1,"score":2,"last_activity_date":1543386715,"creation_date":1543327854,"question_id":912284,"link":"https://ru.stackoverflow.com/questions/912284/%d0%9a%d0%b0%d0%ba-%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b8%d1%82%d1%8c-%d0%b4%d0%be%d1%81%d1%82%d1%83%d0%bf-%d0%ba-%d0%bf%d0%be%d1%80%d1%82%d1%83-%d1%81%d0%ba%d0%b0%d0%bd%d0%b5%d1%80%d0%b0-qr-%d0%ba%d0%be%d0%b4%d0%b0","title":"Как получить доступ к порту сканера QR-кода?","body":"<p>У меня есть подключенный через USB-порт сканер QR-кода. Естественно, что известны его vendor ID и product ID. Как, имея эти данные, распознать, какой порт слушать? Я опыталась использовать библиотеку LibUsbDotNet, но не смогла понять, как с ней работать. Информацию о подключенных клавиатурах я могу получить следующим образом, но совершенно не могу понять, что делать дальше.</p>\n\n<pre><code>ManagementObjectSearcher searcher =\n                              new ManagementObjectSearcher(\"root\\\\CIMV2\",\n                              \"SELECT * FROM Win32_Keyboard\");\n            ManagementObjectCollection keyboards = searcher.Get();\n\n            foreach (ManagementObject queryObj in keyboards)\n            {\n                Console.WriteLine(\"-----------------------------------\");\n                Console.WriteLine(\"Win32_Keyboard instance\");\n                Console.WriteLine(\"-----------------------------------\");\n                Console.WriteLine(\"Availability: {0}\", queryObj[\"Availability\"]);\n                Console.WriteLine(\"Caption: {0}\", queryObj[\"Caption\"]);\n                Console.WriteLine(\"ConfigManagerErrorCode: {0}\", queryObj[\"ConfigManagerErrorCode\"]);\n                Console.WriteLine(\"ConfigManagerUserConfig: {0}\", queryObj[\"ConfigManagerUserConfig\"]);\n                Console.WriteLine(\"CreationClassName: {0}\", queryObj[\"CreationClassName\"]);\n                Console.WriteLine(\"Description: {0}\", queryObj[\"Description\"]);\n                Console.WriteLine(\"DeviceID: {0}\", queryObj[\"DeviceID\"]);\n                Console.WriteLine(\"ErrorCleared: {0}\", queryObj[\"ErrorCleared\"]);\n                Console.WriteLine(\"ErrorDescription: {0}\", queryObj[\"ErrorDescription\"]);\n                Console.WriteLine(\"InstallDate: {0}\", queryObj[\"InstallDate\"]);\n                Console.WriteLine(\"IsLocked: {0}\", queryObj[\"IsLocked\"]);\n                Console.WriteLine(\"LastErrorCode: {0}\", queryObj[\"LastErrorCode\"]);\n                Console.WriteLine(\"Layout: {0}\", queryObj[\"Layout\"]);\n                Console.WriteLine(\"Name: {0}\", queryObj[\"Name\"]);\n                Console.WriteLine(\"NumberOfFunctionKeys: {0}\", queryObj[\"NumberOfFunctionKeys\"]);\n                Console.WriteLine(\"Password: {0}\", queryObj[\"Password\"]);\n                Console.WriteLine(\"PNPDeviceID: {0}\", queryObj[\"PNPDeviceID\"]);\n\n                if (queryObj[\"PowerManagementCapabilities\"] == null)\n                    Console.WriteLine(\"PowerManagementCapabilities: {0}\", queryObj[\"PowerManagementCapabilities\"]);\n                else\n                {\n                    UInt16[] arrPowerManagementCapabilities = (UInt16[])(queryObj[\"PowerManagementCapabilities\"]);\n                    foreach (UInt16 arrValue in arrPowerManagementCapabilities)\n                    {\n                        Console.WriteLine(\"PowerManagementCapabilities: {0}\", arrValue);\n                    }\n                }\n                Console.WriteLine(\"PowerManagementSupported: {0}\", queryObj[\"PowerManagementSupported\"]);\n                Console.WriteLine(\"Status: {0}\", queryObj[\"Status\"]);\n                Console.WriteLine(\"StatusInfo: {0}\", queryObj[\"StatusInfo\"]);\n                Console.WriteLine(\"SystemCreationClassName: {0}\", queryObj[\"SystemCreationClassName\"]);\n                Console.WriteLine(\"SystemName: {0}\", queryObj[\"SystemName\"]);\n            }\n\n            Console.ReadKey();\n</code></pre>\n"}