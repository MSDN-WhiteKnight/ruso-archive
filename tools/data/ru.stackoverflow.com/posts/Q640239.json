{"tags":["c#","многопоточность","openxml"],"owner":{"reputation":13,"user_id":238928,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/002c8469d4d35d65a9e1ab6784ecc012?s=128&d=identicon&r=PG&f=1","display_name":"K. Kulahin","link":"https://ru.stackoverflow.com/users/238928/k-kulahin"},"is_answered":true,"view_count":192,"accepted_answer_id":640340,"answer_count":1,"score":0,"last_activity_date":1489671930,"creation_date":1489660747,"question_id":640239,"link":"https://ru.stackoverflow.com/questions/640239/%d0%9a%d0%b0%d0%ba-%d0%bf%d1%80%d0%b0%d0%b2%d0%b8%d0%bb%d1%8c%d0%bd%d0%be-%d0%be%d1%80%d0%b3%d0%b0%d0%bd%d0%b8%d0%b7%d0%be%d0%b2%d0%b0%d1%82%d1%8c-%d0%bc%d0%bd%d0%be%d0%b3%d0%be%d0%bf%d0%be%d1%82%d0%be%d1%87%d0%bd%d0%be%d1%81%d1%82%d1%8c","title":"Как правильно организовать многопоточность?","body":"<p>cellsData - массив данных (List), который нужно записать в .xslx файл по средствам OpenXML, так как данных достаточно много, решили разбить запись в worksheet с помощью потоков.<br>\nМетод WriteCellInTable производит запись части sheetData в worksheet.</p>\n\n<p>В одну и туже ячейку таблицы данные могут записываться несколько раз, важно что-бы в ячейке остались самые последние данные, а при работе с двумя и более потоками, при записи в одну и туже ячейку, возникает накладка и в ячейке могут остаться неактуальные данные.\nКак этого избежать и имеет ли место такое решение в принципе? </p>\n\n<pre><code>        int prCount = Environment.ProcessorCount;\n        Thread[] threads = new Thread[prCount - 1];\n\n        int part = cellsData.Count / prCount;\n        int begin = 0, thrNum = 0;\n        for (int i = 0; i &lt; prCount; i++)\n        {\n            if (i == prCount - 1)\n            {\n                part = cellsData.Count - begin;\n                WriteCellInTable(new Object[] { (Object)begin, (Object)part, (Object)sheetData }); //В текущем потоке\n                break;\n            }\n            threads[thrNum] = new Thread(WriteCellInTable);\n            threads[thrNum].Start(new Object[] { (Object)begin, (Object)part, (Object)sheetData }); //Новый поток\n            begin += part;\n            thrNum++;\n        }\n\n        Columns columns = new Columns();\n        InsertColumnWidth(columns);\n\n        MergeCells mergeCells = new MergeCells();\n        SetMergeCell(mergeCells);\n\n        for (int i = 0; i &lt; thrNum; i++)\n            threads[i].Join();\n\n        worksheet.Append(new SheetFormatProperties() { DefaultRowHeight = 15D, DyDescent = 0.25D });\n</code></pre>\n"}