{"owner":{"reputation":4644,"user_id":287068,"user_type":"registered","profile_image":"https://i.stack.imgur.com/F1Hyn.jpg?s=128&g=1","display_name":"freim","link":"https://ru.stackoverflow.com/users/287068/freim"},"is_accepted":false,"score":2,"last_activity_date":1548192182,"creation_date":1548192182,"answer_id":935450,"question_id":935440,"body":"<p>Все зависит от того, как библиотека была построена. Если .dll была собрана со статической линковкой и экспортирует функции как <code>extern \"C\"</code>, то Redistributable Package для нее не требуется, и скорее всего (не проверял, так что неточно) ее можно будет использовать с более новыми версиями студии.</p>\n\n<p>Если библиотека была собрана с динамической линковкой, то использовать ее получится только в VS 2008, и для работы ее потребуется либо установленная VS 2008, либо Redistributable Package, причем именно 2008.</p>\n\n<p>Компиляторы разных студий по объектному формату несовместимы, причем несовместимым может быть даже тот же самый компилятор после апдейта. Сам влетел в такую ситуацию пару месяцев назад после обновления VS 2017. Пришлось перекомпилировать много чего, включая чужие библиотеки, это было непросто. Теперь от апдейтов как от чумы, хотя VS 2017 кривой до изумления.</p>\n\n<blockquote>\n  <p>Правильно ли я полагаю, что библиотеки были созданы в visual studio\n  2008, т.к. в документации указан компилятор Visual C++ 2008?</p>\n</blockquote>\n\n<p>Необязательно в студии, компилятор и прочее можно пускать и из командной строки. Но в целом да, так и есть.</p>\n\n<blockquote>\n  <p>Как узнать версию компилятора, в которой была создана библиотека,\n  например, не имея документации к ней?</p>\n</blockquote>\n\n<p>Версия там есть, потому что компилятор ее проверяет, но где она лежит надо серьезно копать. Проще попробовать собрать с ней что-нибудь и посмотреть что напишет в сообщении об ошибке. Или не напишет.</p>\n\n<p>Как-то так. Точно вам разве что в саппорте MS скажут. В целом быстрее будет разобраться экспериментируя.</p>\n"}