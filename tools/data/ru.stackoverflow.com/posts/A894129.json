{"owner":{"reputation":16117,"user_id":240512,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ew6lG.png?s=128&g=1","display_name":"MSDN.WhiteKnight","link":"https://ru.stackoverflow.com/users/240512/msdn-whiteknight"},"is_accepted":true,"score":1,"last_activity_date":1539757043,"creation_date":1539757043,"answer_id":894129,"question_id":893981,"body":"<p>Как-то так (.NET 4.5+):</p>\n\n<pre><code>using System;\nusing System.Windows.Forms;\nusing System.Threading.Tasks;\nusing System.Reflection;\n\n...\n\n//Вспомогательный метод: Создает объект Task, который может использоваться для ожидания срабатывания указанного события \npublic static Task&lt;object&gt; GetTaskFromEvent(object o, string evt)\n{\n    if (o == null || evt == null) throw new ArgumentNullException(\"Arguments cannot be null\");\n\n    EventInfo einfo = o.GetType().GetEvent(evt);\n    if (einfo == null)\n    {\n        throw new ArgumentException(String.Format(\"*{0}* has no *{1}* event\", o, evt));\n    }\n\n    TaskCompletionSource&lt;object&gt; tcs = new TaskCompletionSource&lt;object&gt;();\n    MethodInfo mi = null;\n    Delegate deleg = null;\n    EventHandler handler = null;\n\n    //код обработчика события\n    handler = (s, e) =&gt;\n    {\n        mi = handler.Method;\n        deleg = Delegate.CreateDelegate(einfo.EventHandlerType, handler.Target, mi);\n        einfo.RemoveEventHandler(s, deleg); //отцепляем обработчик события\n        tcs.TrySetResult(null); //сигнализируем о наступлении события\n    };\n\n    mi = handler.Method;\n    deleg = Delegate.CreateDelegate(einfo.EventHandlerType, handler.Target, mi); //получаем делегат нужного типа\n    einfo.AddEventHandler(o, deleg); //присоединяем обработчик события\n    return tcs.Task;\n}\n\n\nprivate async void button1_Click(object sender, EventArgs e)\n{\n    Form f = new Form1();\n    f.Show();\n\n    await GetTaskFromEvent(f, \"FormClosed\");\n    //дальнейший код...\n\n}\n</code></pre>\n"}